{"ast":null,"code":"import _objectSpread from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Rect as $cVkRF$Rect } from \"@react-stately/virtualizer\";\nimport { announce as $cVkRF$announce } from \"@react-aria/live-announcer\";\nimport { useId as $cVkRF$useId, filterDOMProps as $cVkRF$filterDOMProps, mergeProps as $cVkRF$mergeProps, useUpdateEffect as $cVkRF$useUpdateEffect, useDescription as $cVkRF$useDescription } from \"@react-aria/utils\";\nimport { useMemo as $cVkRF$useMemo, useRef as $cVkRF$useRef } from \"react\";\nimport { useMessageFormatter as $cVkRF$useMessageFormatter, useCollator as $cVkRF$useCollator, useLocale as $cVkRF$useLocale } from \"@react-aria/i18n\";\nimport { useSelectableCollection as $cVkRF$useSelectableCollection, useSelectableItem as $cVkRF$useSelectableItem } from \"@react-aria/selection\";\nimport { useInteractionModality as $cVkRF$useInteractionModality, isFocusVisible as $cVkRF$isFocusVisible } from \"@react-aria/interactions\";\nimport { getFocusableTreeWalker as $cVkRF$getFocusableTreeWalker, focusSafely as $cVkRF$focusSafely } from \"@react-aria/focus\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $d1c300d9c497e402$exports = {};\n$parcel$export($d1c300d9c497e402$exports, \"GridKeyboardDelegate\", function () {\n  return $d1c300d9c497e402$export$de9feff04fda126e;\n});\n\nvar $d1c300d9c497e402$export$de9feff04fda126e = /*#__PURE__*/function () {\n  function $d1c300d9c497e402$export$de9feff04fda126e(options) {\n    _classCallCheck(this, $d1c300d9c497e402$export$de9feff04fda126e);\n\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  _createClass($d1c300d9c497e402$export$de9feff04fda126e, [{\n    key: \"isCell\",\n    value: function isCell(node) {\n      return node.type === 'cell';\n    }\n  }, {\n    key: \"isRow\",\n    value: function isRow(node) {\n      return node.type === 'row' || node.type === 'item';\n    }\n  }, {\n    key: \"findPreviousKey\",\n    value: function findPreviousKey(fromKey, pred) {\n      var key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();\n\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (!pred || pred(item)) return key;\n        key = this.collection.getKeyBefore(key);\n      }\n    }\n  }, {\n    key: \"findNextKey\",\n    value: function findNextKey(fromKey, pred) {\n      var key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();\n\n      while (key != null) {\n        var item = this.collection.getItem(key);\n        if (!pred || pred(item)) return key;\n        key = this.collection.getKeyAfter(key);\n      }\n    }\n  }, {\n    key: \"getKeyBelow\",\n    value: function getKeyBelow(key) {\n      var startItem = this.collection.getItem(key);\n      if (!startItem) return; // If focus was on a cell, start searching from the parent row\n\n      if (this.isCell(startItem)) key = startItem.parentKey; // Find the next item\n\n      key = this.findNextKey(key);\n\n      if (key != null) {\n        // If focus was on a cell, focus the cell with the same index in the next row.\n        if (this.isCell(startItem)) {\n          var item = this.collection.getItem(key);\n          return _toConsumableArray(item.childNodes)[startItem.index].key;\n        } // Otherwise, focus the next row\n\n\n        if (this.focusMode === 'row') return key;\n      }\n    }\n  }, {\n    key: \"getKeyAbove\",\n    value: function getKeyAbove(key) {\n      var startItem = this.collection.getItem(key);\n      if (!startItem) return; // If focus is on a cell, start searching from the parent row\n\n      if (this.isCell(startItem)) key = startItem.parentKey; // Find the previous item\n\n      key = this.findPreviousKey(key);\n\n      if (key != null) {\n        // If focus was on a cell, focus the cell with the same index in the previous row.\n        if (this.isCell(startItem)) {\n          var item = this.collection.getItem(key);\n          return _toConsumableArray(item.childNodes)[startItem.index].key;\n        } // Otherwise, focus the previous row\n\n\n        if (this.focusMode === 'row') return key;\n      }\n    }\n  }, {\n    key: \"getKeyRightOf\",\n    value: function getKeyRightOf(key) {\n      var item = this.collection.getItem(key);\n      if (!item) return; // If focus is on a row, focus the first child cell.\n\n      if (this.isRow(item)) {\n        var children = _toConsumableArray(item.childNodes);\n\n        return this.direction === 'rtl' ? children[children.length - 1].key : children[0].key;\n      } // If focus is on a cell, focus the next cell if any,\n      // otherwise focus the parent row.\n\n\n      if (this.isCell(item)) {\n        var parent = this.collection.getItem(item.parentKey);\n\n        var _children = _toConsumableArray(parent.childNodes);\n\n        var next = this.direction === 'rtl' ? _children[item.index - 1] : _children[item.index + 1];\n        if (next) return next.key; // focus row only if focusMode is set to row\n\n        if (this.focusMode === 'row') return item.parentKey;\n        return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n      }\n    }\n  }, {\n    key: \"getKeyLeftOf\",\n    value: function getKeyLeftOf(key) {\n      var item = this.collection.getItem(key);\n      if (!item) return; // If focus is on a row, focus the last child cell.\n\n      if (this.isRow(item)) {\n        var children = _toConsumableArray(item.childNodes);\n\n        return this.direction === 'rtl' ? children[0].key : children[children.length - 1].key;\n      } // If focus is on a cell, focus the previous cell if any,\n      // otherwise focus the parent row.\n\n\n      if (this.isCell(item)) {\n        var parent = this.collection.getItem(item.parentKey);\n\n        var _children2 = _toConsumableArray(parent.childNodes);\n\n        var prev = this.direction === 'rtl' ? _children2[item.index + 1] : _children2[item.index - 1];\n        if (prev) return prev.key; // focus row only if focusMode is set to row\n\n        if (this.focusMode === 'row') return item.parentKey;\n        return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n      }\n    }\n  }, {\n    key: \"getFirstKey\",\n    value: function getFirstKey(key, global) {\n      var item;\n\n      if (key != null) {\n        item = this.collection.getItem(key);\n        if (!item) return; // If global flag is not set, and a cell is currently focused,\n        // move focus to the first cell in the parent row.\n\n        if (this.isCell(item) && !global) {\n          var parent = this.collection.getItem(item.parentKey);\n          return _toConsumableArray(parent.childNodes)[0].key;\n        }\n      } // Find the first row\n\n\n      key = this.findNextKey(); // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n\n      if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n        var _item = this.collection.getItem(key);\n\n        key = _toConsumableArray(_item.childNodes)[0].key;\n      } // Otherwise, focus the row itself.\n\n\n      return key;\n    }\n  }, {\n    key: \"getLastKey\",\n    value: function getLastKey(key, global) {\n      var item;\n\n      if (key != null) {\n        item = this.collection.getItem(key);\n        if (!item) return; // If global flag is not set, and a cell is currently focused,\n        // move focus to the last cell in the parent row.\n\n        if (this.isCell(item) && !global) {\n          var parent = this.collection.getItem(item.parentKey);\n\n          var children = _toConsumableArray(parent.childNodes);\n\n          return children[children.length - 1].key;\n        }\n      } // Find the last row\n\n\n      key = this.findPreviousKey(); // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n\n      if (key != null && item && this.isCell(item) && global || this.focusMode === 'cell') {\n        var _item2 = this.collection.getItem(key);\n\n        var _children3 = _toConsumableArray(_item2.childNodes);\n\n        key = _children3[_children3.length - 1].key;\n      } // Otherwise, focus the row itself.\n\n\n      return key;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.ref.current.querySelector(\"[data-key=\\\"\".concat(key, \"\\\"]\"));\n    }\n  }, {\n    key: \"getItemRect\",\n    value: function getItemRect(key) {\n      var ref;\n      if (this.layout) return (ref = this.layout.getLayoutInfo(key)) === null || ref === void 0 ? void 0 : ref.rect;\n      var item = this.getItem(key);\n      if (item) return new $cVkRF$Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }, {\n    key: \"getPageHeight\",\n    value: function getPageHeight() {\n      var ref, ref1, ref2;\n      if (this.layout) return (ref = this.layout.virtualizer) === null || ref === void 0 ? void 0 : ref.visibleRect.height;\n      return (ref1 = this.ref) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.current) === null || ref2 === void 0 ? void 0 : ref2.offsetHeight;\n    }\n  }, {\n    key: \"getContentHeight\",\n    value: function getContentHeight() {\n      var ref, ref3;\n      if (this.layout) return this.layout.getContentSize().height;\n      return (ref = this.ref) === null || ref === void 0 ? void 0 : (ref3 = ref.current) === null || ref3 === void 0 ? void 0 : ref3.scrollHeight;\n    }\n  }, {\n    key: \"getKeyPageAbove\",\n    value: function getKeyPageAbove(key) {\n      var itemRect = this.getItemRect(key);\n      if (!itemRect) return null;\n      var pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n      while (itemRect && itemRect.y > pageY) {\n        key = this.getKeyAbove(key);\n        itemRect = this.getItemRect(key);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"getKeyPageBelow\",\n    value: function getKeyPageBelow(key) {\n      var itemRect = this.getItemRect(key);\n      if (!itemRect) return null;\n      var pageHeight = this.getPageHeight();\n      var pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n      while (itemRect && itemRect.maxY < pageY) {\n        var nextKey = this.getKeyBelow(key);\n        itemRect = this.getItemRect(nextKey); // Guard against case where maxY of the last key is barely less than pageY due to rounding\n        // and thus it attempts to set key to null\n\n        if (nextKey != null) key = nextKey;\n      }\n\n      return key;\n    }\n  }, {\n    key: \"getKeyForSearch\",\n    value: function getKeyForSearch(search, fromKey) {\n      if (!this.collator) return null;\n      var collection = this.collection;\n      var key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey(); // If the starting key is a cell, search from its parent row.\n\n      var startItem = collection.getItem(key);\n      if (startItem.type === 'cell') key = startItem.parentKey;\n      var hasWrapped = false;\n\n      while (key != null) {\n        var item = collection.getItem(key); // check row text value for match\n\n        if (item.textValue) {\n          var substring = item.textValue.slice(0, search.length);\n\n          if (this.collator.compare(substring, search) === 0) {\n            if (this.isRow(item) && this.focusMode === 'cell') return _toConsumableArray(item.childNodes)[0].key;\n            return item.key;\n          }\n        }\n\n        key = this.findNextKey(key); // Wrap around when reaching the end of the collection\n\n        if (key == null && !hasWrapped) {\n          key = this.getFirstKey();\n          hasWrapped = true;\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return $d1c300d9c497e402$export$de9feff04fda126e;\n}();\n\nvar $83c6e2eafa584c67$exports = {};\n$parcel$export($83c6e2eafa584c67$exports, \"useGrid\", function () {\n  return $83c6e2eafa584c67$export$f6b86a04e5d66d90;\n});\nvar $1af922eb41e03c8f$export$e6235c0d09b995d0 = new WeakMap();\nvar $1dbe5ffd32adb38c$exports = {};\nvar $682989befd4f478d$exports = {};\n$682989befd4f478d$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} غير المحدد\\\",\\\"longPressToSelect\\\":\\\"اضغط مطولًا للدخول إلى وضع التحديد.\\\",\\\"select\\\":\\\"تحديد\\\",\\\"selectedAll\\\":\\\"جميع العناصر المحددة.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\\\",\\\"selectedItem\\\":\\\"{item} المحدد\\\"}\");\nvar $f7fca02019afd941$exports = {};\n$f7fca02019afd941$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} не е избран.\\\",\\\"longPressToSelect\\\":\\\"Натиснете и задръжте за да влезете в избирателен режим.\\\",\\\"select\\\":\\\"Изберете\\\",\\\"selectedAll\\\":\\\"Всички елементи са избрани.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\\\",\\\"selectedItem\\\":\\\"{item} избран.\\\"}\");\nvar $8f86f40be75387f1$exports = {};\n$8f86f40be75387f1$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Položka {item} není vybrána.\\\",\\\"longPressToSelect\\\":\\\"Dlouhým stisknutím přejdete do režimu výběru.\\\",\\\"select\\\":\\\"Vybrat\\\",\\\"selectedAll\\\":\\\"Vybrány všechny položky.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\\\",\\\"selectedItem\\\":\\\"Vybrána položka {item}.\\\"}\");\nvar $db24ba43c8d652ee$exports = {};\n$db24ba43c8d652ee$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} ikke valgt.\\\",\\\"longPressToSelect\\\":\\\"Lav et langt tryk for at aktivere valgtilstand.\\\",\\\"select\\\":\\\"Vælg\\\",\\\"selectedAll\\\":\\\"Alle elementer valgt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\\\",\\\"selectedItem\\\":\\\"{item} valgt.\\\"}\");\nvar $f8f1e72c8b5447d6$exports = {};\n$f8f1e72c8b5447d6$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nicht ausgewählt.\\\",\\\"longPressToSelect\\\":\\\"Gedrückt halten, um Auswahlmodus zu öffnen.\\\",\\\"select\\\":\\\"Auswählen\\\",\\\"selectedAll\\\":\\\"Alle Elemente ausgewählt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\\\",\\\"selectedItem\\\":\\\"{item} ausgewählt.\\\"}\");\nvar $9a73ed2983c3ab0b$exports = {};\n$9a73ed2983c3ab0b$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Δεν επιλέχθηκε το στοιχείο {item}.\\\",\\\"longPressToSelect\\\":\\\"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\\\",\\\"select\\\":\\\"Επιλογή\\\",\\\"selectedAll\\\":\\\"Επιλέχθηκαν όλα τα στοιχεία.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\\\",\\\"selectedItem\\\":\\\"Επιλέχθηκε το στοιχείο {item}.\\\"}\");\nvar $583de0b3587601b9$exports = {};\n$583de0b3587601b9$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} not selected.\\\",\\\"select\\\":\\\"Select\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\\\",\\\"selectedAll\\\":\\\"All items selected.\\\",\\\"selectedItem\\\":\\\"{item} selected.\\\",\\\"longPressToSelect\\\":\\\"Long press to enter selection mode.\\\"}\");\nvar $147159c978043442$exports = {};\n$147159c978043442$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} no seleccionado.\\\",\\\"longPressToSelect\\\":\\\"Mantenga pulsado para abrir el modo de selección.\\\",\\\"select\\\":\\\"Seleccionar\\\",\\\"selectedAll\\\":\\\"Todos los elementos seleccionados.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\\\",\\\"selectedItem\\\":\\\"{item} seleccionado.\\\"}\");\nvar $5cbb62c8a19173ac$exports = {};\n$5cbb62c8a19173ac$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} pole valitud.\\\",\\\"longPressToSelect\\\":\\\"Valikurežiimi sisenemiseks vajutage pikalt.\\\",\\\"select\\\":\\\"Vali\\\",\\\"selectedAll\\\":\\\"Kõik üksused valitud.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\\\",\\\"selectedItem\\\":\\\"{item} valitud.\\\"}\");\nvar $a33d71dc804cc59e$exports = {};\n$a33d71dc804cc59e$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Kohdetta {item} ei valittu.\\\",\\\"longPressToSelect\\\":\\\"Siirry valintatilaan painamalla pitkään.\\\",\\\"select\\\":\\\"Valitse\\\",\\\"selectedAll\\\":\\\"Kaikki kohteet valittu.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\\\",\\\"selectedItem\\\":\\\"{item} valittu.\\\"}\");\nvar $92d800447793d084$exports = {};\n$92d800447793d084$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} non sélectionné.\\\",\\\"longPressToSelect\\\":\\\"Appuyez de manière prolongée pour passer en mode de sélection.\\\",\\\"select\\\":\\\"Sélectionner\\\",\\\"selectedAll\\\":\\\"Tous les éléments sélectionnés.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\\\",\\\"selectedItem\\\":\\\"{item} sélectionné.\\\"}\");\nvar $fe732cdb32124ea8$exports = {};\n$fe732cdb32124ea8$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} לא נבחר.\\\",\\\"longPressToSelect\\\":\\\"הקשה ארוכה לכניסה למצב בחירה.\\\",\\\"select\\\":\\\"בחר\\\",\\\"selectedAll\\\":\\\"כל הפריטים נבחרו.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\\\",\\\"selectedItem\\\":\\\"{item} נבחר.\\\"}\");\nvar $e41234e934efb4f5$exports = {};\n$e41234e934efb4f5$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Stavka {item} nije odabrana.\\\",\\\"longPressToSelect\\\":\\\"Dugo pritisnite za ulazak u način odabira.\\\",\\\"select\\\":\\\"Odaberite\\\",\\\"selectedAll\\\":\\\"Odabrane su sve stavke.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\\\",\\\"selectedItem\\\":\\\"Stavka {item} je odabrana.\\\"}\");\nvar $1b0393182473bf9e$exports = {};\n$1b0393182473bf9e$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nincs kijelölve.\\\",\\\"longPressToSelect\\\":\\\"Nyomja hosszan a kijelöléshez.\\\",\\\"select\\\":\\\"Kijelölés\\\",\\\"selectedAll\\\":\\\"Az összes elem kijelölve.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\\\",\\\"selectedItem\\\":\\\"{item} kijelölve.\\\"}\");\nvar $2eed782c1c110ce7$exports = {};\n$2eed782c1c110ce7$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} non selezionato.\\\",\\\"longPressToSelect\\\":\\\"Premi a lungo per passare alla modalità di selezione.\\\",\\\"select\\\":\\\"Seleziona\\\",\\\"selectedAll\\\":\\\"Tutti gli elementi selezionati.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\\\",\\\"selectedItem\\\":\\\"{item} selezionato.\\\"}\");\nvar $8b5d459f86e9b23c$exports = {};\n$8b5d459f86e9b23c$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} が選択されていません。\\\",\\\"longPressToSelect\\\":\\\"長押しして選択モードを開きます。\\\",\\\"select\\\":\\\"選択\\\",\\\"selectedAll\\\":\\\"すべての項目を選択しました。\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\\\",\\\"selectedItem\\\":\\\"{item} を選択しました。\\\"}\");\nvar $1949c3ad17295fd4$exports = {};\n$1949c3ad17295fd4$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item}이(가) 선택되지 않았습니다.\\\",\\\"longPressToSelect\\\":\\\"선택 모드로 들어가려면 길게 누르십시오.\\\",\\\"select\\\":\\\"선택\\\",\\\"selectedAll\\\":\\\"모든 항목이 선택되었습니다.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\\\",\\\"selectedItem\\\":\\\"{item}이(가) 선택되었습니다.\\\"}\");\nvar $f5e3df4dc8aa7b54$exports = {};\n$f5e3df4dc8aa7b54$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nepasirinkta.\\\",\\\"longPressToSelect\\\":\\\"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\\\",\\\"select\\\":\\\"Pasirinkti\\\",\\\"selectedAll\\\":\\\"Pasirinkti visi elementai.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\\\",\\\"selectedItem\\\":\\\"Pasirinkta: {item}.\\\"}\");\nvar $9dd86690a5c2b2c5$exports = {};\n$9dd86690a5c2b2c5$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Vienums {item} nav atlasīts.\\\",\\\"longPressToSelect\\\":\\\"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\\\",\\\"select\\\":\\\"Atlasīt\\\",\\\"selectedAll\\\":\\\"Atlasīti visi vienumi.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\\\",\\\"selectedItem\\\":\\\"Atlasīts vienums {item}.\\\"}\");\nvar $843964c3bf9a7d24$exports = {};\n$843964c3bf9a7d24$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} er ikke valgt.\\\",\\\"longPressToSelect\\\":\\\"Bruk et langt trykk for å gå inn i valgmodus.\\\",\\\"select\\\":\\\"Velg\\\",\\\"selectedAll\\\":\\\"Alle elementer er valgt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\\\",\\\"selectedItem\\\":\\\"{item} er valgt.\\\"}\");\nvar $73f50e845f9ef3b4$exports = {};\n$73f50e845f9ef3b4$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} niet geselecteerd.\\\",\\\"longPressToSelect\\\":\\\"Druk lang om de selectiemodus te openen.\\\",\\\"select\\\":\\\"Selecteren\\\",\\\"selectedAll\\\":\\\"Alle items geselecteerd.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\\\",\\\"selectedItem\\\":\\\"{item} geselecteerd.\\\"}\");\nvar $87f92a7e077514b2$exports = {};\n$87f92a7e077514b2$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Nie zaznaczono {item}.\\\",\\\"longPressToSelect\\\":\\\"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\\\",\\\"select\\\":\\\"Zaznacz\\\",\\\"selectedAll\\\":\\\"Wszystkie zaznaczone elementy.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\\\",\\\"selectedItem\\\":\\\"Zaznaczono {item}.\\\"}\");\nvar $c28c98d58ee9ff6f$exports = {};\n$c28c98d58ee9ff6f$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} não selecionado.\\\",\\\"longPressToSelect\\\":\\\"Mantenha pressionado para entrar no modo de seleção.\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectedAll\\\":\\\"Todos os itens selecionados.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\\\",\\\"selectedItem\\\":\\\"{item} selecionado.\\\"}\");\nvar $b6b1503b17b2254d$exports = {};\n$b6b1503b17b2254d$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} não selecionado.\\\",\\\"longPressToSelect\\\":\\\"Prima continuamente para entrar no modo de seleção.\\\",\\\"select\\\":\\\"Selecionar\\\",\\\"selectedAll\\\":\\\"Todos os itens selecionados.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\\\",\\\"selectedItem\\\":\\\"{item} selecionado.\\\"}\");\nvar $8bdaeb71e50c3e1a$exports = {};\n$8bdaeb71e50c3e1a$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} neselectat.\\\",\\\"longPressToSelect\\\":\\\"Apăsați lung pentru a intra în modul de selectare.\\\",\\\"select\\\":\\\"Selectare\\\",\\\"selectedAll\\\":\\\"Toate elementele selectate.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\\\",\\\"selectedItem\\\":\\\"{item} selectat.\\\"}\");\nvar $ec2b852dd7c3d1f2$exports = {};\n$ec2b852dd7c3d1f2$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} не выбрано.\\\",\\\"longPressToSelect\\\":\\\"Нажмите и удерживайте для входа в режим выбора.\\\",\\\"select\\\":\\\"Выбрать\\\",\\\"selectedAll\\\":\\\"Выбраны все элементы.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\\\",\\\"selectedItem\\\":\\\"{item} выбрано.\\\"}\");\nvar $79e6d900d6a4f82d$exports = {};\n$79e6d900d6a4f82d$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Nevybraté položky: {item}.\\\",\\\"longPressToSelect\\\":\\\"Dlhším stlačením prejdite do režimu výberu.\\\",\\\"select\\\":\\\"Vybrať\\\",\\\"selectedAll\\\":\\\"Všetky vybraté položky.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\\\",\\\"selectedItem\\\":\\\"Vybraté položky: {item}.\\\"}\");\nvar $f4c1f0d5d4d03d80$exports = {};\n$f4c1f0d5d4d03d80$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"Element {item} ni izbran.\\\",\\\"longPressToSelect\\\":\\\"Za izbirni način pritisnite in dlje časa držite.\\\",\\\"select\\\":\\\"Izberite\\\",\\\"selectedAll\\\":\\\"Vsi elementi so izbrani.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\\\",\\\"selectedItem\\\":\\\"Element {item} je izbran.\\\"}\");\nvar $46252cd87269b10b$exports = {};\n$46252cd87269b10b$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} nije izabrano.\\\",\\\"longPressToSelect\\\":\\\"Dugo pritisnite za ulazak u režim biranja.\\\",\\\"select\\\":\\\"Izaberite\\\",\\\"selectedAll\\\":\\\"Izabrane su sve stavke.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\\\",\\\"selectedItem\\\":\\\"{item} je izabrano.\\\"}\");\nvar $d4d5d8dab362555c$exports = {};\n$d4d5d8dab362555c$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} ej markerat.\\\",\\\"longPressToSelect\\\":\\\"Tryck länge när du vill öppna väljarläge.\\\",\\\"select\\\":\\\"Markera\\\",\\\"selectedAll\\\":\\\"Alla markerade objekt.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\\\",\\\"selectedItem\\\":\\\"{item} markerat.\\\"}\");\nvar $3d55d1f97c377e83$exports = {};\n$3d55d1f97c377e83$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} seçilmedi.\\\",\\\"longPressToSelect\\\":\\\"Seçim moduna girmek için uzun basın.\\\",\\\"select\\\":\\\"Seç\\\",\\\"selectedAll\\\":\\\"Tüm ögeler seçildi.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\\\",\\\"selectedItem\\\":\\\"{item} seçildi.\\\"}\");\nvar $5368512f1c703a3f$exports = {};\n$5368512f1c703a3f$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"{item} не вибрано.\\\",\\\"longPressToSelect\\\":\\\"Виконайте довге натиснення, щоб перейти в режим вибору.\\\",\\\"select\\\":\\\"Вибрати\\\",\\\"selectedAll\\\":\\\"Усі елементи вибрано.\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\\\",\\\"selectedItem\\\":\\\"{item} вибрано.\\\"}\");\nvar $f1316b1074463583$exports = {};\n$f1316b1074463583$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"未选择 {item}。\\\",\\\"longPressToSelect\\\":\\\"长按以进入选择模式。\\\",\\\"select\\\":\\\"选择\\\",\\\"selectedAll\\\":\\\"已选择所有项目。\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\\\",\\\"selectedItem\\\":\\\"已选择 {item}。\\\"}\");\nvar $7e60654723031b6f$exports = {};\n$7e60654723031b6f$exports = JSON.parse(\"{\\\"deselectedItem\\\":\\\"未選取「{item}」。\\\",\\\"longPressToSelect\\\":\\\"長按以進入選擇模式。\\\",\\\"select\\\":\\\"選取\\\",\\\"selectedAll\\\":\\\"已選取所有項目。\\\",\\\"selectedCount\\\":\\\"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\\\",\\\"selectedItem\\\":\\\"已選取「{item}」。\\\"}\");\n$1dbe5ffd32adb38c$exports = {\n  \"ar-AE\": $682989befd4f478d$exports,\n  \"bg-BG\": $f7fca02019afd941$exports,\n  \"cs-CZ\": $8f86f40be75387f1$exports,\n  \"da-DK\": $db24ba43c8d652ee$exports,\n  \"de-DE\": $f8f1e72c8b5447d6$exports,\n  \"el-GR\": $9a73ed2983c3ab0b$exports,\n  \"en-US\": $583de0b3587601b9$exports,\n  \"es-ES\": $147159c978043442$exports,\n  \"et-EE\": $5cbb62c8a19173ac$exports,\n  \"fi-FI\": $a33d71dc804cc59e$exports,\n  \"fr-FR\": $92d800447793d084$exports,\n  \"he-IL\": $fe732cdb32124ea8$exports,\n  \"hr-HR\": $e41234e934efb4f5$exports,\n  \"hu-HU\": $1b0393182473bf9e$exports,\n  \"it-IT\": $2eed782c1c110ce7$exports,\n  \"ja-JP\": $8b5d459f86e9b23c$exports,\n  \"ko-KR\": $1949c3ad17295fd4$exports,\n  \"lt-LT\": $f5e3df4dc8aa7b54$exports,\n  \"lv-LV\": $9dd86690a5c2b2c5$exports,\n  \"nb-NO\": $843964c3bf9a7d24$exports,\n  \"nl-NL\": $73f50e845f9ef3b4$exports,\n  \"pl-PL\": $87f92a7e077514b2$exports,\n  \"pt-BR\": $c28c98d58ee9ff6f$exports,\n  \"pt-PT\": $b6b1503b17b2254d$exports,\n  \"ro-RO\": $8bdaeb71e50c3e1a$exports,\n  \"ru-RU\": $ec2b852dd7c3d1f2$exports,\n  \"sk-SK\": $79e6d900d6a4f82d$exports,\n  \"sl-SI\": $f4c1f0d5d4d03d80$exports,\n  \"sr-SP\": $46252cd87269b10b$exports,\n  \"sv-SE\": $d4d5d8dab362555c$exports,\n  \"tr-TR\": $3d55d1f97c377e83$exports,\n  \"uk-UA\": $5368512f1c703a3f$exports,\n  \"zh-CN\": $f1316b1074463583$exports,\n  \"zh-TW\": $7e60654723031b6f$exports\n};\n\nfunction $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {\n  var formatMessage = $cVkRF$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  var modality = $cVkRF$useInteractionModality(); // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n\n  var shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null) && typeof window !== 'undefined' && 'ontouchstart' in window;\n  var interactionDescription = $cVkRF$useMemo(function () {\n    var selectionMode = props.selectionManager.selectionMode;\n    var selectionBehavior = props.selectionManager.selectionBehavior;\n    var message = undefined;\n    if (shouldLongPress) message = formatMessage('longPressToSelect');\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, formatMessage, shouldLongPress]);\n  var descriptionProps = $cVkRF$useDescription(interactionDescription);\n  return descriptionProps;\n}\n\nfunction $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref1) {\n  var isVirtualized = props.isVirtualized,\n      keyboardDelegate = props.keyboardDelegate,\n      focusMode = props.focusMode,\n      _props$getRowText = props.getRowText,\n      getRowText = _props$getRowText === void 0 ? function (key) {\n    var ref;\n    return (ref = state.collection.getItem(key)) === null || ref === void 0 ? void 0 : ref.textValue;\n  } : _props$getRowText,\n      scrollRef = props.scrollRef,\n      onRowAction = props.onRowAction,\n      onCellAction = props.onCellAction;\n  var formatMessage = $cVkRF$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.'); // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n\n  var collator = $cVkRF$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n\n  var _$cVkRF$useLocale = $cVkRF$useLocale(),\n      direction = _$cVkRF$useLocale.direction;\n\n  var delegate = $cVkRF$useMemo(function () {\n    return keyboardDelegate || new $d1c300d9c497e402$export$de9feff04fda126e({\n      collection: state.collection,\n      disabledKeys: state.disabledKeys,\n      ref: ref1,\n      direction: direction,\n      collator: collator,\n      focusMode: focusMode\n    });\n  }, [keyboardDelegate, state.collection, state.disabledKeys, ref1, direction, collator, focusMode]);\n\n  var _$cVkRF$useSelectable = $cVkRF$useSelectableCollection({\n    ref: ref1,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized: isVirtualized,\n    scrollRef: scrollRef\n  }),\n      collectionProps = _$cVkRF$useSelectable.collectionProps;\n\n  var id = $cVkRF$useId();\n  $1af922eb41e03c8f$export$e6235c0d09b995d0.set(state, {\n    keyboardDelegate: delegate,\n    actions: {\n      onRowAction: onRowAction,\n      onCellAction: onCellAction\n    }\n  });\n  var descriptionProps = $5b9b5b5723db6ae1$export$be42ebdab07ae4c2({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n  var domProps = $cVkRF$filterDOMProps(props, {\n    labelable: true\n  });\n  var gridProps = $cVkRF$mergeProps(domProps, {\n    role: 'grid',\n    id: id,\n    'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n  }, collectionProps, descriptionProps);\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  } // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n\n\n  var selection = state.selectionManager.rawSelection;\n  var lastSelection = $cVkRF$useRef(selection);\n  $cVkRF$useUpdateEffect(function () {\n    var ref;\n\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n\n    var addedKeys = $83c6e2eafa584c67$var$diffSelection(selection, lastSelection.current);\n    var removedKeys = $83c6e2eafa584c67$var$diffSelection(lastSelection.current, selection); // If adding or removing a single row from the selection, announce the name of that item.\n\n    var isReplace = state.selectionManager.selectionBehavior === 'replace';\n    var messages = [];\n\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        var currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(formatMessage('selectedItem', {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      var addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(formatMessage('selectedItem', {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        var removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(formatMessage('deselectedItem', {\n          item: removedText\n        }));\n      }\n    } // Announce how many items are selected, except when selecting the first item.\n\n\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || ((ref = lastSelection.current) === null || ref === void 0 ? void 0 : ref.size) > 1) messages.push(selection === 'all' ? formatMessage('selectedAll') : formatMessage('selectedCount', {\n        count: selection.size\n      }));\n    }\n\n    if (messages.length > 0) $cVkRF$announce(messages.join(' '));\n    lastSelection.current = selection;\n  }, [selection]);\n  return {\n    gridProps: gridProps\n  };\n}\n\nfunction $83c6e2eafa584c67$var$diffSelection(a, b) {\n  var res = new Set();\n  if (a === 'all' || b === 'all') return res;\n\n  var _iterator = _createForOfIteratorHelper(a.keys()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      if (!b.has(key)) res.add(key);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return res;\n}\n\nvar $e45487f8ba1cbdbf$exports = {};\n$parcel$export($e45487f8ba1cbdbf$exports, \"useGridRowGroup\", function () {\n  return $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf;\n});\n\nfunction $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n\nvar $4159a7a9cbb0cc18$exports = {};\n$parcel$export($4159a7a9cbb0cc18$exports, \"useGridRow\", function () {\n  return $4159a7a9cbb0cc18$export$96357d5a73f686fa;\n});\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  var node = props.node,\n      isVirtualized = props.isVirtualized,\n      shouldSelectOnPressUp = props.shouldSelectOnPressUp,\n      onAction = props.onAction;\n\n  var _$1af922eb41e03c8f$ex = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state),\n      onRowAction = _$1af922eb41e03c8f$ex.actions.onRowAction;\n\n  var _$cVkRF$useSelectable2 = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction ? function () {\n      return onRowAction(node.key);\n    } : onAction\n  }),\n      itemProps = _$cVkRF$useSelectable2.itemProps,\n      isPressed = _$cVkRF$useSelectable2.isPressed;\n\n  var isSelected = state.selectionManager.isSelected(node.key);\n\n  var rowProps = _objectSpread({\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined\n  }, itemProps);\n\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n\n  return {\n    rowProps: rowProps,\n    isPressed: isPressed\n  };\n}\n\nvar $ab90dcbc1b5466d0$exports = {};\n$parcel$export($ab90dcbc1b5466d0$exports, \"useGridCell\", function () {\n  return $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c;\n});\n\nfunction $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {\n  var node = props.node,\n      isVirtualized = props.isVirtualized,\n      _props$focusMode = props.focusMode,\n      focusMode = _props$focusMode === void 0 ? 'child' : _props$focusMode,\n      shouldSelectOnPressUp = props.shouldSelectOnPressUp,\n      onAction = props.onAction;\n\n  var _$cVkRF$useLocale2 = $cVkRF$useLocale(),\n      direction = _$cVkRF$useLocale2.direction;\n\n  var _$1af922eb41e03c8f$ex2 = $1af922eb41e03c8f$export$e6235c0d09b995d0.get(state),\n      keyboardDelegate = _$1af922eb41e03c8f$ex2.keyboardDelegate,\n      onCellAction = _$1af922eb41e03c8f$ex2.actions.onCellAction; // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n\n\n  var focus = function focus() {\n    var treeWalker = $cVkRF$getFocusableTreeWalker(ref.current);\n\n    if (focusMode === 'child') {\n      var focusable = state.selectionManager.childFocusStrategy === 'last' ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();\n\n      if (focusable) {\n        $cVkRF$focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) $cVkRF$focusSafely(ref.current);\n  };\n\n  var _$cVkRF$useSelectable3 = $cVkRF$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    focus: focus,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onCellAction ? function () {\n      return onCellAction(node.key);\n    } : onAction\n  }),\n      itemProps = _$cVkRF$useSelectable3.itemProps,\n      isPressed = _$cVkRF$useSelectable3.isPressed;\n\n  var onKeyDown = function onKeyDown(e) {\n    if (!e.currentTarget.contains(e.target)) return;\n    var walker = $cVkRF$getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        {\n          // Find the next focusable element within the cell.\n          var focusable = direction === 'rtl' ? walker.nextNode() : walker.previousNode(); // Don't focus the cell itself if focusMode is \"child\"\n\n          if (focusMode === 'child' && focusable === ref.current) focusable = null;\n\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(focusable);\n          } else {\n            // If there is no next focusable child, then move to the next cell to the left of this one.\n            // This will be handled by useSelectableCollection. However, if there is no cell to the left\n            // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n            // same as this one. In that case we need to handle focusing either the cell or the first/last\n            // child, depending on the focus mode.\n            var prev = keyboardDelegate.getKeyLeftOf(node.key);\n            if (prev !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'rtl') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              focusable = direction === 'rtl' ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);\n              if (focusable) $cVkRF$focusSafely(focusable);\n            }\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          var _focusable = direction === 'rtl' ? walker.previousNode() : walker.nextNode();\n\n          if (focusMode === 'child' && _focusable === ref.current) _focusable = null;\n\n          if (_focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            $cVkRF$focusSafely(_focusable);\n          } else {\n            var next = keyboardDelegate.getKeyRightOf(node.key);\n            if (next !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === 'cell' && direction === 'ltr') $cVkRF$focusSafely(ref.current);else {\n              walker.currentNode = ref.current;\n              _focusable = direction === 'rtl' ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();\n              if (_focusable) $cVkRF$focusSafely(_focusable);\n            }\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));\n        }\n\n        break;\n    }\n  }; // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n\n\n  var onFocus = function onFocus(e) {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!$cVkRF$isFocusVisible()) state.selectionManager.setFocusedKey(node.key);\n      return;\n    } // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n\n\n    requestAnimationFrame(function () {\n      if (focusMode === 'child' && document.activeElement === ref.current) focus();\n    });\n  };\n\n  var gridCellProps = $cVkRF$mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture: onKeyDown,\n    onFocus: onFocus\n  });\n  if (isVirtualized) gridCellProps['aria-colindex'] = node.index + 1; // aria-colindex is 1-based\n\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\n\nfunction $ab90dcbc1b5466d0$var$last(walker) {\n  var next;\n  var last;\n\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n\n  return next;\n}\n\nvar $7cb39d07f245a780$exports = {};\n$parcel$export($7cb39d07f245a780$exports, \"useGridSelectionCheckbox\", function () {\n  return $7cb39d07f245a780$export$70e2eed1a92976ad;\n});\n\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  var key = props.key;\n  var manager = state.selectionManager;\n  var checkboxId = $cVkRF$useId();\n  var isDisabled = state.disabledKeys.has(key);\n  var isSelected = state.selectionManager.isSelected(key);\n\n  var onChange = function onChange() {\n    return manager.select(key);\n  };\n\n  var formatMessage = $cVkRF$useMessageFormatter( /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports));\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': formatMessage('select'),\n      isSelected: isSelected,\n      isDisabled: isDisabled || manager.selectionMode === 'none',\n      onChange: onChange\n    }\n  };\n}\n\nexport { $d1c300d9c497e402$export$de9feff04fda126e as GridKeyboardDelegate, $83c6e2eafa584c67$export$f6b86a04e5d66d90 as useGrid, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf as useGridRowGroup, $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c as useGridCell, $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox };","map":{"version":3,"sources":["packages/@react-aria/grid/src/GridKeyboardDelegate.ts","packages/@react-aria/grid/src/useGrid.ts","packages/@react-aria/grid/src/utils.ts","packages/@react-aria/grid/intl/*.js","packages/@react-aria/grid/intl/ar-AE.json","packages/@react-aria/grid/intl/bg-BG.json","packages/@react-aria/grid/intl/cs-CZ.json","packages/@react-aria/grid/intl/da-DK.json","packages/@react-aria/grid/intl/de-DE.json","packages/@react-aria/grid/intl/el-GR.json","packages/@react-aria/grid/intl/en-US.json","packages/@react-aria/grid/intl/es-ES.json","packages/@react-aria/grid/intl/et-EE.json","packages/@react-aria/grid/intl/fi-FI.json","packages/@react-aria/grid/intl/fr-FR.json","packages/@react-aria/grid/intl/he-IL.json","packages/@react-aria/grid/intl/hr-HR.json","packages/@react-aria/grid/intl/hu-HU.json","packages/@react-aria/grid/intl/it-IT.json","packages/@react-aria/grid/intl/ja-JP.json","packages/@react-aria/grid/intl/ko-KR.json","packages/@react-aria/grid/intl/lt-LT.json","packages/@react-aria/grid/intl/lv-LV.json","packages/@react-aria/grid/intl/nb-NO.json","packages/@react-aria/grid/intl/nl-NL.json","packages/@react-aria/grid/intl/pl-PL.json","packages/@react-aria/grid/intl/pt-BR.json","packages/@react-aria/grid/intl/pt-PT.json","packages/@react-aria/grid/intl/ro-RO.json","packages/@react-aria/grid/intl/ru-RU.json","packages/@react-aria/grid/intl/sk-SK.json","packages/@react-aria/grid/intl/sl-SI.json","packages/@react-aria/grid/intl/sr-SP.json","packages/@react-aria/grid/intl/sv-SE.json","packages/@react-aria/grid/intl/tr-TR.json","packages/@react-aria/grid/intl/uk-UA.json","packages/@react-aria/grid/intl/zh-CN.json","packages/@react-aria/grid/intl/zh-TW.json","packages/@react-aria/grid/src/useHighlightSelectionDescription.ts","packages/@react-aria/grid/src/useGridRowGroup.ts","packages/@react-aria/grid/src/useGridRow.ts","packages/@react-aria/grid/src/useGridCell.ts","packages/@react-aria/grid/src/useGridSelectionCheckbox.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {Key, RefObject} from 'react';\nimport {Layout, Rect} from '@react-stately/virtualizer';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[children.length - 1].key\n        : children[0].key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl'\n        ? children[item.index - 1]\n        : children[item.index + 1];\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[0].key\n        : children[children.length - 1].key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl'\n        ? children[item.index + 1]\n        : children[item.index - 1];\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return [...item.childNodes][0].key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {AriaLabelingProps, DOMProps, KeyboardDelegate, Selection} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId, useUpdateEffect} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, Key, RefObject, useMemo, useRef} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {useCollator, useLocale, useMessageFormatter} from '@react-aria/i18n';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    getRowText = (key) => state.collection.getItem(key)?.textValue,\n    scrollRef,\n    onRowAction,\n    onCellAction\n  } = props;\n  let formatMessage = useMessageFormatter(intlMessages);\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId();\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let gridProps: HTMLAttributes<HTMLElement> = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    collectionProps,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(formatMessage('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(formatMessage('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(formatMessage('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? formatMessage('selectedAll')\n          : formatMessage('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n\n  return {\n    gridProps\n  };\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport {Key} from 'react';\nimport type {KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n","{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n","{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n","{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n","{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n","{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n","{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n","{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n","{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n","{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n","{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n","{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n","{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n","{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n","{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n","{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n","{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n","{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n","{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n","{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n","{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n","{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n","{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useMemo} from 'react';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface UseHighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: UseHighlightSelectionDescriptionProps): AriaLabelingProps {\n  let formatMessage = useMessageFormatter(intlMessages);\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = formatMessage('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, formatMessage, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes} from 'react';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {Node} from '@react-types/shared';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: Node<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria {\n  /** Props for the grid row element. */\n  rowProps: HTMLAttributes<HTMLElement>,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<HTMLElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: HTMLAttributes<HTMLElement> = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {HTMLAttributes, KeyboardEvent as ReactKeyboardEvent, RefObject} from 'react';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {mergeProps} from '@react-aria/utils';\nimport {Node as RSNode} from '@react-types/shared';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: RSNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\ninterface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: HTMLAttributes<HTMLElement>,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<HTMLElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as HTMLElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction\n  });\n\n  let onKeyDown = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as HTMLElement)) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as HTMLElement\n          : walker.previousNode() as HTMLElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as HTMLElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as HTMLElement\n          : walker.nextNode() as HTMLElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as HTMLElement;\n            if (focusable) {\n              focusSafely(focusable);\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as HTMLElement)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: HTMLAttributes<HTMLElement> = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture: onKeyDown,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = node.index + 1; // aria-colindex is 1-based\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: HTMLElement;\n  let last: HTMLElement;\n  do {\n    last = walker.lastChild() as HTMLElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useMessageFormatter} from '@react-aria/i18n';\n\ninterface SelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\ninterface SelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: SelectionCheckboxProps, state: GridState<T, C>): SelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = state.disabledKeys.has(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const formatMessage = useMessageFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': formatMessage('select'),\n      isSelected,\n      isDisabled: isDisabled || manager.selectionMode === 'none',\n      onChange\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
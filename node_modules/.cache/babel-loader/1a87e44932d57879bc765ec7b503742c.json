{"ast":null,"code":"import _objectSpread from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _inherits from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createForOfIteratorHelper from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _slicedToArray from \"/Users/fateenahmed/Documents/IIT/Sem3/webapps/Project-II/alacart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar $2fe286d2fb449abb$export$7a5acbd77d414bd9 = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AT: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BY: 1,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  HR: 1,\n  HU: 1,\n  IE: 1,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JO: 6,\n  KG: 1,\n  KW: 6,\n  KZ: 1,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MK: 1,\n  MN: 1,\n  MQ: 1,\n  MV: 5,\n  MY: 1,\n  NL: 1,\n  NO: 1,\n  NZ: 1,\n  OM: 6,\n  PL: 1,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SD: 6,\n  SE: 1,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SY: 6,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  UA: 1,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VN: 1,\n  XK: 1\n};\n\nfunction $14e0f24ef4ac5c92$export$ea39ec197993aef0(a, b) {\n  b = $11d87f3f76e88657$export$b4a036af3fc0b032(b, a.calendar);\n  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nfunction $14e0f24ef4ac5c92$export$a18c89cbd24170ff(a, b) {\n  b = $11d87f3f76e88657$export$b4a036af3fc0b032(b, a.calendar); // In the Japanese calendar, months can span multiple eras/years, so only compare the first of the month.\n\n  a = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(a);\n  b = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(b);\n  return a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nfunction $14e0f24ef4ac5c92$export$5841f9eb9773f25f(a, b) {\n  b = $11d87f3f76e88657$export$b4a036af3fc0b032(b, a.calendar);\n  a = $14e0f24ef4ac5c92$export$f91e89d3d0406102(a);\n  b = $14e0f24ef4ac5c92$export$f91e89d3d0406102(b);\n  return a.era === b.era && a.year === b.year;\n}\n\nfunction $14e0f24ef4ac5c92$export$91b62ebf2ba703ee(a, b) {\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\nfunction $14e0f24ef4ac5c92$export$5a8da0c44a3afdf2(a, b) {\n  a = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(a);\n  b = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\nfunction $14e0f24ef4ac5c92$export$ea840f5a6dda8147(a, b) {\n  a = $14e0f24ef4ac5c92$export$f91e89d3d0406102(a);\n  b = $14e0f24ef4ac5c92$export$f91e89d3d0406102(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year;\n}\n\nfunction $14e0f24ef4ac5c92$export$629b0a497aa65267(date, timeZone) {\n  return $14e0f24ef4ac5c92$export$ea39ec197993aef0(date, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone));\n}\n\nfunction $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale) {\n  var julian = date.calendar.toJulianDay(date); // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n\n  var dayOfWeek = Math.ceil(julian + 1 - $14e0f24ef4ac5c92$var$getWeekStart(locale)) % 7;\n  if (dayOfWeek < 0) dayOfWeek += 7;\n  return dayOfWeek;\n}\n\nfunction $14e0f24ef4ac5c92$export$461939dd4422153(timeZone) {\n  return $11d87f3f76e88657$export$1b96692a1ba042ac(Date.now(), timeZone);\n}\n\nfunction $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone) {\n  return $11d87f3f76e88657$export$93522d1a439f3617($14e0f24ef4ac5c92$export$461939dd4422153(timeZone));\n}\n\nfunction $14e0f24ef4ac5c92$export$68781ddf31c0090f(a, b) {\n  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);\n}\n\nfunction $14e0f24ef4ac5c92$export$c19a80a9721b80f6(a, b) {\n  return $14e0f24ef4ac5c92$var$timeToMs(a) - $14e0f24ef4ac5c92$var$timeToMs(b);\n}\n\nfunction $14e0f24ef4ac5c92$var$timeToMs(a) {\n  return a.hour * 3600000 + a.minute * 60000 + a.second * 1000 + a.millisecond;\n}\n\nfunction $14e0f24ef4ac5c92$export$126c91c941de7e(a, timeZone) {\n  var ms = $11d87f3f76e88657$export$5107c82f94518f5c(a, timeZone);\n  var tomorrow = a.add({\n    days: 1\n  });\n  var tomorrowMs = $11d87f3f76e88657$export$5107c82f94518f5c(tomorrow, timeZone);\n  return (tomorrowMs - ms) / 3600000;\n}\n\nvar $14e0f24ef4ac5c92$var$localTimeZone = null;\n\nfunction $14e0f24ef4ac5c92$export$aa8b41735afcabd2() {\n  // TODO: invalidate this somehow?\n  if ($14e0f24ef4ac5c92$var$localTimeZone == null) $14e0f24ef4ac5c92$var$localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  return $14e0f24ef4ac5c92$var$localTimeZone;\n}\n\nfunction $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date) {\n  // Use `subtract` instead of `set` so we don't get constrained in an era.\n  return date.subtract({\n    days: date.day - 1\n  });\n}\n\nfunction $14e0f24ef4ac5c92$export$a2258d9c4118825c(date) {\n  return date.add({\n    days: date.calendar.getDaysInMonth(date) - date.day\n  });\n}\n\nfunction $14e0f24ef4ac5c92$export$f91e89d3d0406102(date) {\n  return $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date.subtract({\n    months: date.month - 1\n  }));\n}\n\nfunction $14e0f24ef4ac5c92$export$8b7aa55c66d5569e(date) {\n  return $14e0f24ef4ac5c92$export$a2258d9c4118825c(date.add({\n    months: date.calendar.getMonthsInYear(date) - date.month\n  }));\n}\n\nfunction $14e0f24ef4ac5c92$export$5412ac11713b72ad(date) {\n  if (date.calendar.getMinimumMonthInYear) return date.calendar.getMinimumMonthInYear(date);\n  return 1;\n}\n\nfunction $14e0f24ef4ac5c92$export$b2f4953d301981d5(date) {\n  if (date.calendar.getMinimumDayInMonth) return date.calendar.getMinimumDayInMonth(date);\n  return 1;\n}\n\nfunction $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale) {\n  var dayOfWeek = $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale);\n  return date.subtract({\n    days: dayOfWeek\n  });\n}\n\nfunction $14e0f24ef4ac5c92$export$ef8b6d9133084f4e(date, locale) {\n  return $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale).add({\n    days: 6\n  });\n}\n\nvar $14e0f24ef4ac5c92$var$cachedRegions = new Map();\n\nfunction $14e0f24ef4ac5c92$var$getRegion(locale) {\n  // If the Intl.Locale API is available, use it to get the region for the locale.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // Constructing an Intl.Locale is expensive, so cache the result.\n    var region = $14e0f24ef4ac5c92$var$cachedRegions.get(locale);\n\n    if (!region) {\n      // @ts-ignore\n      region = new Intl.Locale(locale).maximize().region;\n      $14e0f24ef4ac5c92$var$cachedRegions.set(locale, region);\n    }\n\n    return region;\n  } // If not, just try splitting the string.\n  // If the second part of the locale string is 'u',\n  // then this is a unicode extension, so ignore it.\n  // Otherwise, it should be the region.\n\n\n  var part = locale.split('-')[1];\n  return part === 'u' ? null : part;\n}\n\nfunction $14e0f24ef4ac5c92$var$getWeekStart(locale) {\n  // TODO: use Intl.Locale for this once browsers support the weekInfo property\n  // https://github.com/tc39/proposal-intl-locale-info\n  var region = $14e0f24ef4ac5c92$var$getRegion(locale);\n  return $2fe286d2fb449abb$export$7a5acbd77d414bd9[region] || 0;\n}\n\nfunction $14e0f24ef4ac5c92$export$ccc1b2479e7dd654(date, locale) {\n  var days = date.calendar.getDaysInMonth(date);\n  return Math.ceil(($14e0f24ef4ac5c92$export$2061056d06d7cdf7($14e0f24ef4ac5c92$export$a5a3b454ada2268e(date), locale) + days) / 7);\n}\n\nfunction $14e0f24ef4ac5c92$export$5c333a116e949cdd(a, b) {\n  if (a && b) return a.compare(b) <= 0 ? a : b;\n  return a || b;\n}\n\nfunction $14e0f24ef4ac5c92$export$a75f2bff57811055(a, b) {\n  if (a && b) return a.compare(b) >= 0 ? a : b;\n  return a || b;\n}\n\nvar $14e0f24ef4ac5c92$var$WEEKEND_DATA = {\n  AF: [4, 5],\n  AE: [5, 6],\n  BH: [5, 6],\n  DZ: [5, 6],\n  EG: [5, 6],\n  IL: [5, 6],\n  IQ: [5, 6],\n  IR: [5, 5],\n  JO: [5, 6],\n  KW: [5, 6],\n  LY: [5, 6],\n  OM: [5, 6],\n  QA: [5, 6],\n  SA: [5, 6],\n  SD: [5, 6],\n  SY: [5, 6],\n  YE: [5, 6]\n};\n\nfunction $14e0f24ef4ac5c92$export$618d60ea299da42(date, locale) {\n  var julian = date.calendar.toJulianDay(date); // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n\n  var dayOfWeek = Math.ceil(julian + 1) % 7;\n  if (dayOfWeek < 0) dayOfWeek += 7;\n  var region = $14e0f24ef4ac5c92$var$getRegion(locale); // Use Intl.Locale for this once weekInfo is supported.\n  // https://github.com/tc39/proposal-intl-locale-info\n\n  var _ref = $14e0f24ef4ac5c92$var$WEEKEND_DATA[region] || [6, 0],\n      _ref2 = _slicedToArray(_ref, 2),\n      start = _ref2[0],\n      end = _ref2[1];\n\n  return dayOfWeek === start || dayOfWeek === end;\n}\n\nfunction $14e0f24ef4ac5c92$export$ee9d87258e1d19ed(date, locale) {\n  return !$14e0f24ef4ac5c92$export$618d60ea299da42(date, locale);\n}\n\nfunction $2b4dce13dd5a17fa$export$842a2cf37af977e1(amount, numerator) {\n  return amount - numerator * Math.floor(amount / numerator);\n}\n\nfunction $2b4dce13dd5a17fa$export$784d13d8ee351f07(date) {\n  if (date.era) return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(date.calendar, date.era, date.year, date.month, date.day);else return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(date.calendar, date.year, date.month, date.day);\n}\n\nfunction $2b4dce13dd5a17fa$export$27fa0172ae2644b3(date) {\n  if (date.era) return new $35ea8db9cb2ccb90$export$ca871e8dbb80966f(date.calendar, date.era, date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);else return new $35ea8db9cb2ccb90$export$ca871e8dbb80966f(date.calendar, date.year, date.month, date.day, date.hour, date.minute, date.second);\n}\n\nvar $3b62074eb05584b2$var$EPOCH = 1721426; // 001/01/03 Julian C.E.\n\nfunction $3b62074eb05584b2$export$f297eb839006d339(era, year, month, day) {\n  year = $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year);\n  var y1 = year - 1;\n  var monthOffset = -2;\n  if (month <= 2) monthOffset = 0;else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year)) monthOffset = -1;\n  return $3b62074eb05584b2$var$EPOCH - 1 + 365 * y1 + Math.floor(y1 / 4) - Math.floor(y1 / 100) + Math.floor(y1 / 400) + Math.floor((367 * month - 362) / 12 + monthOffset + day);\n}\n\nfunction $3b62074eb05584b2$export$553d7fa8e3805fc0(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nfunction $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year) {\n  return era === 'BC' ? 1 - year : year;\n}\n\nfunction $3b62074eb05584b2$export$4475b7e617eb123c(year) {\n  var era = 'AD';\n\n  if (year <= 0) {\n    era = 'BC';\n    year = 1 - year;\n  }\n\n  return [era, year];\n}\n\nvar $3b62074eb05584b2$var$daysInMonth = {\n  standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n  leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n};\n\nvar $3b62074eb05584b2$export$80ee6245ec4f29ec = /*#__PURE__*/function () {\n  function $3b62074eb05584b2$export$80ee6245ec4f29ec() {\n    _classCallCheck(this, $3b62074eb05584b2$export$80ee6245ec4f29ec);\n\n    this.identifier = 'gregory';\n  }\n\n  _createClass($3b62074eb05584b2$export$80ee6245ec4f29ec, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var jd0 = jd;\n      var depoch = jd0 - $3b62074eb05584b2$var$EPOCH;\n      var quadricent = Math.floor(depoch / 146097);\n      var dqc = $2b4dce13dd5a17fa$export$842a2cf37af977e1(depoch, 146097);\n      var cent = Math.floor(dqc / 36524);\n      var dcent = $2b4dce13dd5a17fa$export$842a2cf37af977e1(dqc, 36524);\n      var quad = Math.floor(dcent / 1461);\n      var dquad = $2b4dce13dd5a17fa$export$842a2cf37af977e1(dcent, 1461);\n      var yindex = Math.floor(dquad / 365);\n      var extendedYear = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);\n\n      var _$3b62074eb05584b2$ex = $3b62074eb05584b2$export$4475b7e617eb123c(extendedYear),\n          _$3b62074eb05584b2$ex2 = _slicedToArray(_$3b62074eb05584b2$ex, 2),\n          era = _$3b62074eb05584b2$ex2[0],\n          year = _$3b62074eb05584b2$ex2[1];\n\n      var yearDay = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, 1, 1);\n      var leapAdj = 2;\n      if (jd0 < $3b62074eb05584b2$export$f297eb839006d339(era, year, 3, 1)) leapAdj = 0;else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year)) leapAdj = 1;\n      var month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);\n      var day = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, month, 1) + 1;\n      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(era, year, month, day);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      return $3b62074eb05584b2$export$f297eb839006d339(date.era, date.year, date.month, date.day);\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      return $3b62074eb05584b2$var$daysInMonth[$3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? 'leapyear' : 'standard'][date.month - 1];\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"getMonthsInYear\",\n    value: function getMonthsInYear(date) {\n      return 12;\n    }\n  }, {\n    key: \"getDaysInYear\",\n    value: function getDaysInYear(date) {\n      return $3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? 366 : 365;\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"getYearsInEra\",\n    value: function getYearsInEra(date) {\n      return 9999;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['BC', 'AD'];\n    }\n  }, {\n    key: \"getYearsToAdd\",\n    value: function getYearsToAdd(date, years) {\n      return date.era === 'BC' ? -years : years;\n    }\n  }, {\n    key: \"balanceDate\",\n    value: function balanceDate(date) {\n      if (date.year <= 0) {\n        date.era = date.era === 'BC' ? 'AD' : 'BC';\n        date.year = 1 - date.year;\n      }\n    }\n  }]);\n\n  return $3b62074eb05584b2$export$80ee6245ec4f29ec;\n}();\n\nfunction $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) {\n  date = $11d87f3f76e88657$export$b4a036af3fc0b032(date, new $3b62074eb05584b2$export$80ee6245ec4f29ec());\n  return $11d87f3f76e88657$var$epochFromParts(date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n}\n\nfunction $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, millisecond) {\n  // Note: Date.UTC() interprets one and two-digit years as being in the\n  // 20th century, so don't use it\n  var date = new Date();\n  date.setUTCHours(hour, minute, second, millisecond);\n  date.setUTCFullYear(year, month - 1, day);\n  return date.getTime();\n}\n\nfunction $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone) {\n  // Fast path: for local timezone, use native Date.\n  if (timeZone === $14e0f24ef4ac5c92$export$aa8b41735afcabd2()) return new Date(ms).getTimezoneOffset() * -60000;\n\n  var _$11d87f3f76e88657$va = $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone),\n      year = _$11d87f3f76e88657$va.year,\n      month = _$11d87f3f76e88657$va.month,\n      day = _$11d87f3f76e88657$va.day,\n      hour = _$11d87f3f76e88657$va.hour,\n      minute = _$11d87f3f76e88657$va.minute,\n      second = _$11d87f3f76e88657$va.second;\n\n  var utc = $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, 0);\n  return utc - Math.floor(ms / 1000) * 1000;\n}\n\nvar $11d87f3f76e88657$var$formattersByTimeZone = new Map();\n\nfunction $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone) {\n  var formatter = $11d87f3f76e88657$var$formattersByTimeZone.get(timeZone);\n\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat('en-US', {\n      timeZone: timeZone,\n      hour12: false,\n      era: 'short',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    });\n    $11d87f3f76e88657$var$formattersByTimeZone.set(timeZone, formatter);\n  }\n\n  var parts = formatter.formatToParts(new Date(ms));\n  var namedParts = {};\n\n  var _iterator = _createForOfIteratorHelper(parts),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var part = _step.value;\n      if (part.type !== 'literal') namedParts[part.type] = part.value;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    year: namedParts.era === 'BC' ? -namedParts.year + 1 : +namedParts.year,\n    month: +namedParts.month,\n    day: +namedParts.day,\n    hour: namedParts.hour === '24' ? 0 : +namedParts.hour,\n    minute: +namedParts.minute,\n    second: +namedParts.second\n  };\n}\n\nvar $11d87f3f76e88657$var$DAYMILLIS = 86400000;\n\nfunction $11d87f3f76e88657$export$136f38efe7caf549(date, timeZone) {\n  var ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date);\n  var earlier = ms - $11d87f3f76e88657$export$59c99f3515d3493f(ms - $11d87f3f76e88657$var$DAYMILLIS, timeZone);\n  var later = ms - $11d87f3f76e88657$export$59c99f3515d3493f(ms + $11d87f3f76e88657$var$DAYMILLIS, timeZone);\n  return $11d87f3f76e88657$var$getValidWallTimes(date, timeZone, earlier, later);\n}\n\nfunction $11d87f3f76e88657$var$getValidWallTimes(date, timeZone, earlier, later) {\n  var found = earlier === later ? [earlier] : [earlier, later];\n  return found.filter(function (absolute) {\n    return $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute);\n  });\n}\n\nfunction $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute) {\n  var parts = $11d87f3f76e88657$var$getTimeZoneParts(absolute, timeZone);\n  return date.year === parts.year && date.month === parts.month && date.day === parts.day && date.hour === parts.hour && date.minute === parts.minute && date.second === parts.second;\n}\n\nfunction $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone) {\n  var disambiguation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'compatible';\n  var dateTime = $11d87f3f76e88657$export$b21e0b124e224484(date); // Fast path: if the time zone is the local timezone and disambiguation is compatible, use native Date.\n\n  if (timeZone === $14e0f24ef4ac5c92$export$aa8b41735afcabd2() && disambiguation === 'compatible') {\n    dateTime = $11d87f3f76e88657$export$b4a036af3fc0b032(dateTime, new $3b62074eb05584b2$export$80ee6245ec4f29ec()); // Don't use Date constructor here because two-digit years are interpreted in the 20th century.\n\n    var _date = new Date();\n\n    _date.setFullYear(dateTime.year, dateTime.month - 1, dateTime.day);\n\n    _date.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n\n    return _date.getTime();\n  }\n\n  var ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime);\n  var offsetBefore = $11d87f3f76e88657$export$59c99f3515d3493f(ms - $11d87f3f76e88657$var$DAYMILLIS, timeZone);\n  var offsetAfter = $11d87f3f76e88657$export$59c99f3515d3493f(ms + $11d87f3f76e88657$var$DAYMILLIS, timeZone);\n  var valid = $11d87f3f76e88657$var$getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);\n  if (valid.length === 1) return valid[0];\n  if (valid.length > 1) switch (disambiguation) {\n    // 'compatible' means 'earlier' for \"fall back\" transitions\n    case 'compatible':\n    case 'earlier':\n      return valid[0];\n\n    case 'later':\n      return valid[valid.length - 1];\n\n    case 'reject':\n      throw new RangeError('Multiple possible absolute times found');\n  }\n\n  switch (disambiguation) {\n    case 'earlier':\n      return Math.min(ms - offsetBefore, ms - offsetAfter);\n    // 'compatible' means 'later' for \"spring forward\" transitions\n\n    case 'compatible':\n    case 'later':\n      return Math.max(ms - offsetBefore, ms - offsetAfter);\n\n    case 'reject':\n      throw new RangeError('No such absolute time found');\n  }\n}\n\nfunction $11d87f3f76e88657$export$e67a095c620b86fe(dateTime, timeZone) {\n  var disambiguation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'compatible';\n  return new Date($11d87f3f76e88657$export$5107c82f94518f5c(dateTime, timeZone, disambiguation));\n}\n\nfunction $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone) {\n  var offset = $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone);\n  var date = new Date(ms + offset);\n  var year = date.getUTCFullYear();\n  var month = date.getUTCMonth() + 1;\n  var day = date.getUTCDate();\n  var hour = date.getUTCHours();\n  var minute = date.getUTCMinutes();\n  var second = date.getUTCSeconds();\n  var millisecond = date.getUTCMilliseconds();\n  return new $35ea8db9cb2ccb90$export$d3b7288e7994edea(year, month, day, timeZone, offset, hour, minute, second, millisecond);\n}\n\nfunction $11d87f3f76e88657$export$e57ff100d91bd4b9(date, timeZone) {\n  return $11d87f3f76e88657$export$1b96692a1ba042ac(date.getTime(), timeZone);\n}\n\nfunction $11d87f3f76e88657$export$d7f92bcd3596b086(date) {\n  return $11d87f3f76e88657$export$e57ff100d91bd4b9(date, $14e0f24ef4ac5c92$export$aa8b41735afcabd2());\n}\n\nfunction $11d87f3f76e88657$export$93522d1a439f3617(dateTime) {\n  return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);\n}\n\nfunction $11d87f3f76e88657$export$6f4d78149f3f53ac(date) {\n  return {\n    era: date.era,\n    year: date.year,\n    month: date.month,\n    day: date.day\n  };\n}\n\nfunction $11d87f3f76e88657$export$4d0393e732857be5(date) {\n  return {\n    hour: date.hour,\n    minute: date.minute,\n    second: date.second,\n    millisecond: date.millisecond\n  };\n}\n\nfunction $11d87f3f76e88657$export$b21e0b124e224484(date, time) {\n  var hour = 0,\n      minute = 0,\n      second = 0,\n      millisecond = 0;\n\n  if ('timeZone' in date) {\n    hour = date.hour;\n    minute = date.minute;\n    second = date.second;\n    millisecond = date.millisecond;\n  } else if ('hour' in date && !time) return date;\n\n  if (time) {\n    hour = time.hour;\n    minute = time.minute;\n    second = time.second;\n    millisecond = time.millisecond;\n  }\n\n  return new $35ea8db9cb2ccb90$export$ca871e8dbb80966f(date.calendar, date.era, date.year, date.month, date.day, hour, minute, second, millisecond);\n}\n\nfunction $11d87f3f76e88657$export$d33f79e3ffc3dc83(dateTime) {\n  return new $35ea8db9cb2ccb90$export$680ea196effce5f(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n}\n\nfunction $11d87f3f76e88657$export$b4a036af3fc0b032(date, calendar) {\n  if (date.calendar.identifier === calendar.identifier) return date;\n  var calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));\n  var copy = date.copy();\n  copy.calendar = calendar;\n  copy.era = calendarDate.era;\n  copy.year = calendarDate.year;\n  copy.month = calendarDate.month;\n  copy.day = calendarDate.day;\n  return copy;\n}\n\nfunction $11d87f3f76e88657$export$84c95a83c799e074(date, timeZone, disambiguation) {\n  if (date instanceof $35ea8db9cb2ccb90$export$d3b7288e7994edea) {\n    if (date.timeZone === timeZone) return date;\n    return $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone);\n  }\n\n  var ms = $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone, disambiguation);\n  return $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone);\n}\n\nfunction $11d87f3f76e88657$export$83aac07b4c37b25(date) {\n  var ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;\n  return new Date(ms);\n}\n\nfunction $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone) {\n  var ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;\n  return $11d87f3f76e88657$export$b4a036af3fc0b032($11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone), date.calendar);\n}\n\nfunction $11d87f3f76e88657$export$d9b67bc93c097491(date) {\n  return $11d87f3f76e88657$export$538b00033cc11c75(date, $14e0f24ef4ac5c92$export$aa8b41735afcabd2());\n}\n\nvar $735220c2d4774dd3$var$ONE_HOUR = 3600000;\n\nfunction $735220c2d4774dd3$export$e16d8520af44a096(date, duration) {\n  var mutableDate = date.copy();\n  var days = 'hour' in date ? $735220c2d4774dd3$var$addTimeFields(date, duration) : 0;\n  $735220c2d4774dd3$var$addYears(mutableDate, duration.years || 0);\n  if (mutableDate.calendar.balanceYearMonth) mutableDate.calendar.balanceYearMonth(mutableDate, date);\n  mutableDate.month += duration.months || 0;\n  $735220c2d4774dd3$var$balanceYearMonth(mutableDate);\n  $735220c2d4774dd3$var$constrainMonthDay(mutableDate);\n  mutableDate.day += (duration.weeks || 0) * 7;\n  mutableDate.day += duration.days || 0;\n  mutableDate.day += days;\n  $735220c2d4774dd3$var$balanceDay(mutableDate);\n  if (mutableDate.calendar.balanceDate) mutableDate.calendar.balanceDate(mutableDate);\n  return mutableDate;\n}\n\nfunction $735220c2d4774dd3$var$addYears(date, years) {\n  if (date.calendar.getYearsToAdd) years = date.calendar.getYearsToAdd(date, years);\n  date.year += years;\n}\n\nfunction $735220c2d4774dd3$var$balanceYearMonth(date) {\n  while (date.month < 1) {\n    $735220c2d4774dd3$var$addYears(date, -1);\n    date.month += date.calendar.getMonthsInYear(date);\n  }\n\n  var monthsInYear = 0;\n\n  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {\n    date.month -= monthsInYear;\n    $735220c2d4774dd3$var$addYears(date, 1);\n  }\n}\n\nfunction $735220c2d4774dd3$var$balanceDay(date) {\n  while (date.day < 1) {\n    date.month--;\n    $735220c2d4774dd3$var$balanceYearMonth(date);\n    date.day += date.calendar.getDaysInMonth(date);\n  }\n\n  while (date.day > date.calendar.getDaysInMonth(date)) {\n    date.day -= date.calendar.getDaysInMonth(date);\n    date.month++;\n    $735220c2d4774dd3$var$balanceYearMonth(date);\n  }\n}\n\nfunction $735220c2d4774dd3$var$constrainMonthDay(date) {\n  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\n\nfunction $735220c2d4774dd3$export$c4e2ecac49351ef2(date) {\n  if (date.calendar.constrainDate) date.calendar.constrainDate(date);\n  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n  $735220c2d4774dd3$var$constrainMonthDay(date);\n}\n\nfunction $735220c2d4774dd3$export$3e2544e88a25bff8(duration) {\n  var inverseDuration = {};\n\n  for (var key in duration) {\n    if (typeof duration[key] === 'number') inverseDuration[key] = -duration[key];\n  }\n\n  return inverseDuration;\n}\n\nfunction $735220c2d4774dd3$export$4e2d2ead65e5f7e3(date, duration) {\n  return $735220c2d4774dd3$export$e16d8520af44a096(date, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\n\nfunction $735220c2d4774dd3$export$adaa4cf7ef1b65be(date, fields) {\n  var mutableDate = date.copy();\n  if (fields.era != null) mutableDate.era = fields.era;\n  if (fields.year != null) mutableDate.year = fields.year;\n  if (fields.month != null) mutableDate.month = fields.month;\n  if (fields.day != null) mutableDate.day = fields.day;\n  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutableDate);\n  return mutableDate;\n}\n\nfunction $735220c2d4774dd3$export$e5d5e1c1822b6e56(value, fields) {\n  var mutableValue = value.copy();\n  if (fields.hour != null) mutableValue.hour = fields.hour;\n  if (fields.minute != null) mutableValue.minute = fields.minute;\n  if (fields.second != null) mutableValue.second = fields.second;\n  if (fields.millisecond != null) mutableValue.millisecond = fields.millisecond;\n  $735220c2d4774dd3$export$7555de1e070510cb(mutableValue);\n  return mutableValue;\n}\n\nfunction $735220c2d4774dd3$var$balanceTime(time) {\n  time.second += Math.floor(time.millisecond / 1000);\n  time.millisecond = $735220c2d4774dd3$var$nonNegativeMod(time.millisecond, 1000);\n  time.minute += Math.floor(time.second / 60);\n  time.second = $735220c2d4774dd3$var$nonNegativeMod(time.second, 60);\n  time.hour += Math.floor(time.minute / 60);\n  time.minute = $735220c2d4774dd3$var$nonNegativeMod(time.minute, 60);\n  var days = Math.floor(time.hour / 24);\n  time.hour = $735220c2d4774dd3$var$nonNegativeMod(time.hour, 24);\n  return days;\n}\n\nfunction $735220c2d4774dd3$export$7555de1e070510cb(time) {\n  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n  time.second = Math.max(0, Math.min(time.second, 59));\n  time.minute = Math.max(0, Math.min(time.minute, 59));\n  time.hour = Math.max(0, Math.min(time.hour, 23));\n}\n\nfunction $735220c2d4774dd3$var$nonNegativeMod(a, b) {\n  var result = a % b;\n  if (result < 0) result += b;\n  return result;\n}\n\nfunction $735220c2d4774dd3$var$addTimeFields(time, duration) {\n  time.hour += duration.hours || 0;\n  time.minute += duration.minutes || 0;\n  time.second += duration.seconds || 0;\n  time.millisecond += duration.milliseconds || 0;\n  return $735220c2d4774dd3$var$balanceTime(time);\n}\n\nfunction $735220c2d4774dd3$export$7ed87b6bc2506470(time, duration) {\n  var res = time.copy();\n  $735220c2d4774dd3$var$addTimeFields(res, duration);\n  return res;\n}\n\nfunction $735220c2d4774dd3$export$fe34d3a381cd7501(time, duration) {\n  return $735220c2d4774dd3$export$7ed87b6bc2506470(time, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\n\nfunction $735220c2d4774dd3$export$d52ced6badfb9a4c(value, field, amount, options) {\n  var mutable = value.copy();\n\n  switch (field) {\n    case 'era':\n      {\n        var eras = value.calendar.getEras();\n        var eraIndex = eras.indexOf(value.era);\n        if (eraIndex < 0) throw new Error('Invalid era: ' + value.era);\n        eraIndex = $735220c2d4774dd3$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options === null || options === void 0 ? void 0 : options.round);\n        mutable.era = eras[eraIndex]; // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n\n        $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);\n        break;\n      }\n\n    case 'year':\n      if (mutable.calendar.getYearsToAdd) amount = mutable.calendar.getYearsToAdd(mutable, amount); // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n      // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n      // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n\n      mutable.year = $735220c2d4774dd3$var$cycleValue(value.year, amount, -Infinity, 9999, options === null || options === void 0 ? void 0 : options.round);\n      if (mutable.year === -Infinity) mutable.year = 1;\n      if (mutable.calendar.balanceYearMonth) mutable.calendar.balanceYearMonth(mutable, value);\n      break;\n\n    case 'month':\n      mutable.month = $735220c2d4774dd3$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    case 'day':\n      mutable.day = $735220c2d4774dd3$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  if (value.calendar.balanceDate) value.calendar.balanceDate(mutable);\n  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);\n  return mutable;\n}\n\nfunction $735220c2d4774dd3$export$dd02b3e0007dfe28(value, field, amount, options) {\n  var mutable = value.copy();\n\n  switch (field) {\n    case 'hour':\n      {\n        var hours = value.hour;\n        var min = 0;\n        var max = 23;\n\n        if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n          var isPM = hours >= 12;\n          min = isPM ? 12 : 0;\n          max = isPM ? 23 : 11;\n        }\n\n        mutable.hour = $735220c2d4774dd3$var$cycleValue(hours, amount, min, max, options === null || options === void 0 ? void 0 : options.round);\n        break;\n      }\n\n    case 'minute':\n      mutable.minute = $735220c2d4774dd3$var$cycleValue(value.minute, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    case 'second':\n      mutable.second = $735220c2d4774dd3$var$cycleValue(value.second, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    case 'millisecond':\n      mutable.millisecond = $735220c2d4774dd3$var$cycleValue(value.millisecond, amount, 0, 999, options === null || options === void 0 ? void 0 : options.round);\n      break;\n\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  return mutable;\n}\n\nfunction $735220c2d4774dd3$var$cycleValue(value, amount, min, max) {\n  var round = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (round) {\n    value += Math.sign(amount);\n    if (value < min) value = max;\n    var div = Math.abs(amount);\n    if (amount > 0) value = Math.ceil(value / div) * div;else value = Math.floor(value / div) * div;\n    if (value > max) value = min;\n  } else {\n    value += amount;\n    if (value < min) value = max - (min - value - 1);else if (value > max) value = min + (value - max - 1);\n  }\n\n  return value;\n}\n\nfunction $735220c2d4774dd3$export$96b1d28349274637(dateTime, duration) {\n  var ms;\n\n  if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.days != null && duration.days !== 0) {\n    var _res = $735220c2d4774dd3$export$e16d8520af44a096($11d87f3f76e88657$export$b21e0b124e224484(dateTime), {\n      years: duration.years,\n      months: duration.months,\n      days: duration.days\n    }); // Changing the date may change the timezone offset, so we need to recompute\n    // using the 'compatible' disambiguation.\n\n\n    ms = $11d87f3f76e88657$export$5107c82f94518f5c(_res, dateTime.timeZone);\n  } else // Otherwise, preserve the offset of the original date.\n    ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime) - dateTime.offset; // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n  // For example, adding one hour during a DST transition may result in the hour field staying the same or\n  // skipping an hour. This results in the offset field changing value instead of the specified field.\n\n\n  ms += duration.milliseconds || 0;\n  ms += (duration.seconds || 0) * 1000;\n  ms += (duration.minutes || 0) * 60000;\n  ms += (duration.hours || 0) * 3600000;\n  var res = $11d87f3f76e88657$export$1b96692a1ba042ac(ms, dateTime.timeZone);\n  return $11d87f3f76e88657$export$b4a036af3fc0b032(res, dateTime.calendar);\n}\n\nfunction $735220c2d4774dd3$export$6814caac34ca03c7(dateTime, duration) {\n  return $735220c2d4774dd3$export$96b1d28349274637(dateTime, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));\n}\n\nfunction $735220c2d4774dd3$export$9a297d111fc86b79(dateTime, field, amount, options) {\n  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n  switch (field) {\n    case 'hour':\n      {\n        var min = 0;\n        var max = 23;\n\n        if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {\n          var isPM = dateTime.hour >= 12;\n          min = isPM ? 12 : 0;\n          max = isPM ? 23 : 11;\n        } // The minimum and maximum hour may be affected by daylight saving time.\n        // For example, it might jump forward at midnight, and skip 1am.\n        // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n        // the possible absolute times for the min and max, and find the maximum range\n        // that is within the current day.\n\n\n        var plainDateTime = $11d87f3f76e88657$export$b21e0b124e224484(dateTime);\n        var minDate = $11d87f3f76e88657$export$b4a036af3fc0b032($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {\n          hour: min\n        }), new $3b62074eb05584b2$export$80ee6245ec4f29ec());\n        var minAbsolute = [$11d87f3f76e88657$export$5107c82f94518f5c(minDate, dateTime.timeZone, 'earlier'), $11d87f3f76e88657$export$5107c82f94518f5c(minDate, dateTime.timeZone, 'later')].filter(function (ms) {\n          return $11d87f3f76e88657$export$1b96692a1ba042ac(ms, dateTime.timeZone).day === minDate.day;\n        })[0];\n        var maxDate = $11d87f3f76e88657$export$b4a036af3fc0b032($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {\n          hour: max\n        }), new $3b62074eb05584b2$export$80ee6245ec4f29ec());\n        var maxAbsolute = [$11d87f3f76e88657$export$5107c82f94518f5c(maxDate, dateTime.timeZone, 'earlier'), $11d87f3f76e88657$export$5107c82f94518f5c(maxDate, dateTime.timeZone, 'later')].filter(function (ms) {\n          return $11d87f3f76e88657$export$1b96692a1ba042ac(ms, dateTime.timeZone).day === maxDate.day;\n        }).pop(); // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n        // This is done in hours from the Unix epoch so that cycleValue works correctly,\n        // and then converted back to milliseconds.\n\n        var ms1 = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime) - dateTime.offset;\n        var hours = Math.floor(ms1 / $735220c2d4774dd3$var$ONE_HOUR);\n        var remainder = ms1 % $735220c2d4774dd3$var$ONE_HOUR;\n        ms1 = $735220c2d4774dd3$var$cycleValue(hours, amount, Math.floor(minAbsolute / $735220c2d4774dd3$var$ONE_HOUR), Math.floor(maxAbsolute / $735220c2d4774dd3$var$ONE_HOUR), options === null || options === void 0 ? void 0 : options.round) * $735220c2d4774dd3$var$ONE_HOUR + remainder; // Now compute the new timezone offset, and convert the absolute time back to local time.\n\n        return $11d87f3f76e88657$export$b4a036af3fc0b032($11d87f3f76e88657$export$1b96692a1ba042ac(ms1, dateTime.timeZone), dateTime.calendar);\n      }\n\n    case 'minute':\n    case 'second':\n    case 'millisecond':\n      // @ts-ignore\n      return $735220c2d4774dd3$export$dd02b3e0007dfe28(dateTime, field, amount, options);\n\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day':\n      {\n        var res = $735220c2d4774dd3$export$d52ced6badfb9a4c($11d87f3f76e88657$export$b21e0b124e224484(dateTime), field, amount, options);\n        var ms = $11d87f3f76e88657$export$5107c82f94518f5c(res, dateTime.timeZone);\n        return $11d87f3f76e88657$export$b4a036af3fc0b032($11d87f3f76e88657$export$1b96692a1ba042ac(ms, dateTime.timeZone), dateTime.calendar);\n      }\n\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n}\n\nfunction $735220c2d4774dd3$export$31b5430eb18be4f8(dateTime, fields, disambiguation) {\n  // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n  var plainDateTime = $11d87f3f76e88657$export$b21e0b124e224484(dateTime);\n  var res = $735220c2d4774dd3$export$e5d5e1c1822b6e56($735220c2d4774dd3$export$adaa4cf7ef1b65be(plainDateTime, fields), fields); // If the resulting plain date time values are equal, return the original time.\n  // We don't want to change the offset when setting the time to the same value.\n\n  if (res.compare(plainDateTime) === 0) return dateTime;\n  var ms = $11d87f3f76e88657$export$5107c82f94518f5c(res, dateTime.timeZone, disambiguation);\n  return $11d87f3f76e88657$export$b4a036af3fc0b032($11d87f3f76e88657$export$1b96692a1ba042ac(ms, dateTime.timeZone), dateTime.calendar);\n}\n\nvar $fae977aafc393c5c$var$TIME_RE = /^(\\d{2})(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nvar $fae977aafc393c5c$var$DATE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nvar $fae977aafc393c5c$var$DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nvar $fae977aafc393c5c$var$ZONED_DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:([+-]\\d{2})(?::(\\d{2}))?)?\\[(.*?)\\]$/;\nvar $fae977aafc393c5c$var$ABSOLUTE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:(?:([+-]\\d{2})(?::(\\d{2}))?)|Z)$/;\n\nfunction $fae977aafc393c5c$export$c9698ec7f05a07e1(value) {\n  var m = value.match($fae977aafc393c5c$var$TIME_RE);\n  if (!m) throw new Error('Invalid ISO 8601 time string: ' + value);\n  return new $35ea8db9cb2ccb90$export$680ea196effce5f($fae977aafc393c5c$var$parseNumber(m[1], 0, 23), m[2] ? $fae977aafc393c5c$var$parseNumber(m[2], 0, 59) : 0, m[3] ? $fae977aafc393c5c$var$parseNumber(m[3], 0, 59) : 0, m[4] ? $fae977aafc393c5c$var$parseNumber(m[4], 0, Infinity) * 1000 : 0);\n}\n\nfunction $fae977aafc393c5c$export$6b862160d295c8e(value) {\n  var m = value.match($fae977aafc393c5c$var$DATE_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date string: ' + value);\n  var date = new $35ea8db9cb2ccb90$export$99faa760c7908e4f($fae977aafc393c5c$var$parseNumber(m[1], 0, 9999), $fae977aafc393c5c$var$parseNumber(m[2], 1, 12), 1);\n  date.day = $fae977aafc393c5c$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date;\n}\n\nfunction $fae977aafc393c5c$export$588937bcd60ade55(value) {\n  var m = value.match($fae977aafc393c5c$var$DATE_TIME_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date time string: ' + value);\n  var date = new $35ea8db9cb2ccb90$export$ca871e8dbb80966f($fae977aafc393c5c$var$parseNumber(m[1], 1, 9999), $fae977aafc393c5c$var$parseNumber(m[2], 1, 12), 1, m[4] ? $fae977aafc393c5c$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $fae977aafc393c5c$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $fae977aafc393c5c$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $fae977aafc393c5c$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);\n  date.day = $fae977aafc393c5c$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date;\n}\n\nfunction $fae977aafc393c5c$export$fd7893f06e92a6a4(value, disambiguation) {\n  var m = value.match($fae977aafc393c5c$var$ZONED_DATE_TIME_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date time string: ' + value);\n  var date = new $35ea8db9cb2ccb90$export$d3b7288e7994edea($fae977aafc393c5c$var$parseNumber(m[1], 1, 9999), $fae977aafc393c5c$var$parseNumber(m[2], 1, 12), 1, m[10], 0, m[4] ? $fae977aafc393c5c$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $fae977aafc393c5c$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $fae977aafc393c5c$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $fae977aafc393c5c$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);\n  date.day = $fae977aafc393c5c$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  var plainDateTime = $11d87f3f76e88657$export$b21e0b124e224484(date);\n  var ms;\n\n  if (m[8]) {\n    var ref;\n    date.offset = $fae977aafc393c5c$var$parseNumber(m[8], -23, 23) * 3600000 + $fae977aafc393c5c$var$parseNumber((ref = m[9]) !== null && ref !== void 0 ? ref : '0', 0, 59) * 60000;\n    ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset; // Validate offset against parsed date.\n\n    var absolutes = $11d87f3f76e88657$export$136f38efe7caf549(plainDateTime, date.timeZone);\n    if (!absolutes.includes(ms)) throw new Error(\"Offset \".concat($fae977aafc393c5c$var$offsetToString(date.offset), \" is invalid for \").concat($fae977aafc393c5c$export$4223de14708adc63(date), \" in \").concat(date.timeZone));\n  } else // Convert to absolute and back to fix invalid times due to DST.\n    ms = $11d87f3f76e88657$export$5107c82f94518f5c($11d87f3f76e88657$export$b21e0b124e224484(plainDateTime), date.timeZone, disambiguation);\n\n  return $11d87f3f76e88657$export$1b96692a1ba042ac(ms, date.timeZone);\n}\n\nfunction $fae977aafc393c5c$export$5adfdab05168c219(value, timeZone) {\n  var m = value.match($fae977aafc393c5c$var$ABSOLUTE_RE);\n  if (!m) throw new Error('Invalid ISO 8601 date time string: ' + value);\n  var date = new $35ea8db9cb2ccb90$export$d3b7288e7994edea($fae977aafc393c5c$var$parseNumber(m[1], 1, 9999), $fae977aafc393c5c$var$parseNumber(m[2], 1, 12), 1, timeZone, 0, m[4] ? $fae977aafc393c5c$var$parseNumber(m[4], 0, 23) : 0, m[5] ? $fae977aafc393c5c$var$parseNumber(m[5], 0, 59) : 0, m[6] ? $fae977aafc393c5c$var$parseNumber(m[6], 0, 59) : 0, m[7] ? $fae977aafc393c5c$var$parseNumber(m[7], 0, Infinity) * 1000 : 0);\n  date.day = $fae977aafc393c5c$var$parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  var ref;\n  if (m[8]) date.offset = $fae977aafc393c5c$var$parseNumber(m[8], -23, 23) * 3600000 + $fae977aafc393c5c$var$parseNumber((ref = m[9]) !== null && ref !== void 0 ? ref : '0', 0, 59) * 60000;\n  return $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone);\n}\n\nfunction $fae977aafc393c5c$export$8e384432362ed0f0(value) {\n  return $fae977aafc393c5c$export$5adfdab05168c219(value, $14e0f24ef4ac5c92$export$aa8b41735afcabd2());\n}\n\nfunction $fae977aafc393c5c$var$parseNumber(value, min, max) {\n  var val = Number(value);\n  if (val < min || val > max) throw new RangeError(\"Value out of range: \".concat(min, \" <= \").concat(val, \" <= \").concat(max));\n  return val;\n}\n\nfunction $fae977aafc393c5c$export$f59dee82248f5ad4(time) {\n  return \"\".concat(String(time.hour).padStart(2, '0'), \":\").concat(String(time.minute).padStart(2, '0'), \":\").concat(String(time.second).padStart(2, '0')).concat(time.millisecond ? String(time.millisecond / 1000).slice(1) : '');\n}\n\nfunction $fae977aafc393c5c$export$60dfd74aa96791bd(date) {\n  var gregorianDate = $11d87f3f76e88657$export$b4a036af3fc0b032(date, new $3b62074eb05584b2$export$80ee6245ec4f29ec());\n  return \"\".concat(String(gregorianDate.year).padStart(4, '0'), \"-\").concat(String(gregorianDate.month).padStart(2, '0'), \"-\").concat(String(gregorianDate.day).padStart(2, '0'));\n}\n\nfunction $fae977aafc393c5c$export$4223de14708adc63(date) {\n  // @ts-ignore\n  return \"\".concat($fae977aafc393c5c$export$60dfd74aa96791bd(date), \"T\").concat($fae977aafc393c5c$export$f59dee82248f5ad4(date));\n}\n\nfunction $fae977aafc393c5c$var$offsetToString(offset) {\n  var sign = Math.sign(offset) < 0 ? '-' : '+';\n  offset = Math.abs(offset);\n  var offsetHours = Math.floor(offset / 3600000);\n  var offsetMinutes = offset % 3600000 / 60000;\n  return \"\".concat(sign).concat(String(offsetHours).padStart(2, '0'), \":\").concat(String(offsetMinutes).padStart(2, '0'));\n}\n\nfunction $fae977aafc393c5c$export$bf79f1ebf4b18792(date) {\n  return \"\".concat($fae977aafc393c5c$export$4223de14708adc63(date)).concat($fae977aafc393c5c$var$offsetToString(date.offset), \"[\").concat(date.timeZone, \"]\");\n}\n\nfunction $35ea8db9cb2ccb90$var$shiftArgs(args) {\n  var calendar = typeof args[0] === 'object' ? args.shift() : new $3b62074eb05584b2$export$80ee6245ec4f29ec();\n  var era;\n  if (typeof args[0] === 'string') era = args.shift();else {\n    var eras = calendar.getEras();\n    era = eras[eras.length - 1];\n  }\n  var year = args.shift();\n  var month = args.shift();\n  var day = args.shift();\n  return [calendar, era, year, month, day];\n}\n\nvar $35ea8db9cb2ccb90$export$99faa760c7908e4f = /*#__PURE__*/function () {\n  function $35ea8db9cb2ccb90$export$99faa760c7908e4f() {\n    _classCallCheck(this, $35ea8db9cb2ccb90$export$99faa760c7908e4f);\n\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    // i.e. a ZonedDateTime should not be be passable to a parameter that expects CalendarDate.\n    // If that behavior is desired, use the AnyCalendarDate interface instead.\n    _type.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _$35ea8db9cb2ccb90$va = $35ea8db9cb2ccb90$var$shiftArgs(args),\n        _$35ea8db9cb2ccb90$va2 = _slicedToArray(_$35ea8db9cb2ccb90$va, 5),\n        calendar = _$35ea8db9cb2ccb90$va2[0],\n        era = _$35ea8db9cb2ccb90$va2[1],\n        year = _$35ea8db9cb2ccb90$va2[2],\n        month = _$35ea8db9cb2ccb90$va2[3],\n        day = _$35ea8db9cb2ccb90$va2[4];\n\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    $735220c2d4774dd3$export$c4e2ecac49351ef2(this);\n  }\n\n  _createClass($35ea8db9cb2ccb90$export$99faa760c7908e4f, [{\n    key: \"copy\",\n    value:\n    /** Returns a copy of this date. */\n    function copy() {\n      if (this.era) return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.era, this.year, this.month, this.day);else return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.year, this.month, this.day);\n    }\n    /** Returns a new `CalendarDate` with the given duration added to it. */\n\n  }, {\n    key: \"add\",\n    value: function add(duration) {\n      return $735220c2d4774dd3$export$e16d8520af44a096(this, duration);\n    }\n    /** Returns a new `CalendarDate` with the given duration subtracted from it. */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(duration) {\n      return $735220c2d4774dd3$export$4e2d2ead65e5f7e3(this, duration);\n    }\n    /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n\n  }, {\n    key: \"set\",\n    value: function set(fields) {\n      return $735220c2d4774dd3$export$adaa4cf7ef1b65be(this, fields);\n    }\n    /**\n    * Returns a new `CalendarDate` with the given field adjusted by a specified amount.\n    * When the resulting value reaches the limits of the field, it wraps around.\n    */\n\n  }, {\n    key: \"cycle\",\n    value: function cycle(field, amount, options) {\n      return $735220c2d4774dd3$export$d52ced6badfb9a4c(this, field, amount, options);\n    }\n    /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */\n\n  }, {\n    key: \"toDate\",\n    value: function toDate(timeZone) {\n      return $11d87f3f76e88657$export$e67a095c620b86fe(this, timeZone);\n    }\n    /** Converts the date to an ISO 8601 formatted string. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return $fae977aafc393c5c$export$60dfd74aa96791bd(this);\n    }\n    /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n\n  }, {\n    key: \"compare\",\n    value: function compare(b) {\n      return $14e0f24ef4ac5c92$export$68781ddf31c0090f(this, b);\n    }\n  }]);\n\n  return $35ea8db9cb2ccb90$export$99faa760c7908e4f;\n}();\n\nvar _type = new WeakMap();\n\nvar $35ea8db9cb2ccb90$export$680ea196effce5f = /*#__PURE__*/function () {\n  function $35ea8db9cb2ccb90$export$680ea196effce5f() {\n    var hour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var minute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var second = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var millisecond = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    _classCallCheck(this, $35ea8db9cb2ccb90$export$680ea196effce5f);\n\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    _type1.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond;\n    $735220c2d4774dd3$export$7555de1e070510cb(this);\n  }\n\n  _createClass($35ea8db9cb2ccb90$export$680ea196effce5f, [{\n    key: \"copy\",\n    value:\n    /** Returns a copy of this time. */\n    function copy() {\n      return new $35ea8db9cb2ccb90$export$680ea196effce5f(this.hour, this.minute, this.second, this.millisecond);\n    }\n    /** Returns a new `Time` with the given duration added to it. */\n\n  }, {\n    key: \"add\",\n    value: function add(duration) {\n      return $735220c2d4774dd3$export$7ed87b6bc2506470(this, duration);\n    }\n    /** Returns a new `Time` with the given duration subtracted from it. */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(duration) {\n      return $735220c2d4774dd3$export$fe34d3a381cd7501(this, duration);\n    }\n    /** Returns a new `Time` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n\n  }, {\n    key: \"set\",\n    value: function set(fields) {\n      return $735220c2d4774dd3$export$e5d5e1c1822b6e56(this, fields);\n    }\n    /**\n    * Returns a new `Time` with the given field adjusted by a specified amount.\n    * When the resulting value reaches the limits of the field, it wraps around.\n    */\n\n  }, {\n    key: \"cycle\",\n    value: function cycle(field, amount, options) {\n      return $735220c2d4774dd3$export$dd02b3e0007dfe28(this, field, amount, options);\n    }\n    /** Converts the time to an ISO 8601 formatted string. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return $fae977aafc393c5c$export$f59dee82248f5ad4(this);\n    }\n    /** Compares this time with another. A negative result indicates that this time is before the given one, and a positive time indicates that it is after. */\n\n  }, {\n    key: \"compare\",\n    value: function compare(b) {\n      return $14e0f24ef4ac5c92$export$c19a80a9721b80f6(this, b);\n    }\n  }]);\n\n  return $35ea8db9cb2ccb90$export$680ea196effce5f;\n}();\n\nvar _type1 = new WeakMap();\n\nvar $35ea8db9cb2ccb90$export$ca871e8dbb80966f = /*#__PURE__*/function () {\n  function $35ea8db9cb2ccb90$export$ca871e8dbb80966f() {\n    _classCallCheck(this, $35ea8db9cb2ccb90$export$ca871e8dbb80966f);\n\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    _type2.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _$35ea8db9cb2ccb90$va3 = $35ea8db9cb2ccb90$var$shiftArgs(args),\n        _$35ea8db9cb2ccb90$va4 = _slicedToArray(_$35ea8db9cb2ccb90$va3, 5),\n        calendar = _$35ea8db9cb2ccb90$va4[0],\n        era = _$35ea8db9cb2ccb90$va4[1],\n        year = _$35ea8db9cb2ccb90$va4[2],\n        month = _$35ea8db9cb2ccb90$va4[3],\n        day = _$35ea8db9cb2ccb90$va4[4];\n\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n    $735220c2d4774dd3$export$c4e2ecac49351ef2(this);\n  }\n\n  _createClass($35ea8db9cb2ccb90$export$ca871e8dbb80966f, [{\n    key: \"copy\",\n    value:\n    /** Returns a copy of this date. */\n    function copy() {\n      if (this.era) return new $35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);else return new $35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    }\n    /** Returns a new `CalendarDateTime` with the given duration added to it. */\n\n  }, {\n    key: \"add\",\n    value: function add(duration) {\n      return $735220c2d4774dd3$export$e16d8520af44a096(this, duration);\n    }\n    /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(duration) {\n      return $735220c2d4774dd3$export$4e2d2ead65e5f7e3(this, duration);\n    }\n    /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n\n  }, {\n    key: \"set\",\n    value: function set(fields) {\n      return $735220c2d4774dd3$export$adaa4cf7ef1b65be($735220c2d4774dd3$export$e5d5e1c1822b6e56(this, fields), fields);\n    }\n    /**\n    * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.\n    * When the resulting value reaches the limits of the field, it wraps around.\n    */\n\n  }, {\n    key: \"cycle\",\n    value: function cycle(field, amount, options) {\n      switch (field) {\n        case 'era':\n        case 'year':\n        case 'month':\n        case 'day':\n          return $735220c2d4774dd3$export$d52ced6badfb9a4c(this, field, amount, options);\n\n        default:\n          return $735220c2d4774dd3$export$dd02b3e0007dfe28(this, field, amount, options);\n      }\n    }\n    /** Converts the date to a native JavaScript Date object in the given time zone. */\n\n  }, {\n    key: \"toDate\",\n    value: function toDate(timeZone, disambiguation) {\n      return $11d87f3f76e88657$export$e67a095c620b86fe(this, timeZone, disambiguation);\n    }\n    /** Converts the date to an ISO 8601 formatted string. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return $fae977aafc393c5c$export$4223de14708adc63(this);\n    }\n    /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n\n  }, {\n    key: \"compare\",\n    value: function compare(b) {\n      var res = $14e0f24ef4ac5c92$export$68781ddf31c0090f(this, b);\n      if (res === 0) return $14e0f24ef4ac5c92$export$c19a80a9721b80f6(this, $11d87f3f76e88657$export$b21e0b124e224484(b));\n      return res;\n    }\n  }]);\n\n  return $35ea8db9cb2ccb90$export$ca871e8dbb80966f;\n}();\n\nvar _type2 = new WeakMap();\n\nvar $35ea8db9cb2ccb90$export$d3b7288e7994edea = /*#__PURE__*/function () {\n  function $35ea8db9cb2ccb90$export$d3b7288e7994edea() {\n    _classCallCheck(this, $35ea8db9cb2ccb90$export$d3b7288e7994edea);\n\n    // This prevents TypeScript from allowing other types with the same fields to match.\n    _type3.set(this, {\n      writable: true,\n      value: void 0\n    });\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var _$35ea8db9cb2ccb90$va5 = $35ea8db9cb2ccb90$var$shiftArgs(args),\n        _$35ea8db9cb2ccb90$va6 = _slicedToArray(_$35ea8db9cb2ccb90$va5, 5),\n        calendar = _$35ea8db9cb2ccb90$va6[0],\n        era = _$35ea8db9cb2ccb90$va6[1],\n        year = _$35ea8db9cb2ccb90$va6[2],\n        month = _$35ea8db9cb2ccb90$va6[3],\n        day = _$35ea8db9cb2ccb90$va6[4];\n\n    var timeZone = args.shift();\n    var offset = args.shift();\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.timeZone = timeZone;\n    this.offset = offset;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n    $735220c2d4774dd3$export$c4e2ecac49351ef2(this);\n  }\n\n  _createClass($35ea8db9cb2ccb90$export$d3b7288e7994edea, [{\n    key: \"copy\",\n    value:\n    /** Returns a copy of this date. */\n    function copy() {\n      if (this.era) return new $35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);else return new $35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    }\n    /** Returns a new `ZonedDateTime` with the given duration added to it. */\n\n  }, {\n    key: \"add\",\n    value: function add(duration) {\n      return $735220c2d4774dd3$export$96b1d28349274637(this, duration);\n    }\n    /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(duration) {\n      return $735220c2d4774dd3$export$6814caac34ca03c7(this, duration);\n    }\n    /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n\n  }, {\n    key: \"set\",\n    value: function set(fields, disambiguation) {\n      return $735220c2d4774dd3$export$31b5430eb18be4f8(this, fields, disambiguation);\n    }\n    /**\n    * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.\n    * When the resulting value reaches the limits of the field, it wraps around.\n    */\n\n  }, {\n    key: \"cycle\",\n    value: function cycle(field, amount, options) {\n      return $735220c2d4774dd3$export$9a297d111fc86b79(this, field, amount, options);\n    }\n    /** Converts the date to a native JavaScript Date object. */\n\n  }, {\n    key: \"toDate\",\n    value: function toDate() {\n      return $11d87f3f76e88657$export$83aac07b4c37b25(this);\n    }\n    /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return $fae977aafc393c5c$export$bf79f1ebf4b18792(this);\n    }\n    /** Converts the date to an ISO 8601 formatted string in UTC. */\n\n  }, {\n    key: \"toAbsoluteString\",\n    value: function toAbsoluteString() {\n      return this.toDate().toISOString();\n    }\n    /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n\n  }, {\n    key: \"compare\",\n    value: function compare(b) {\n      // TODO: Is this a bad idea??\n      return this.toDate().getTime() - $11d87f3f76e88657$export$84c95a83c799e074(b, this.timeZone).toDate().getTime();\n    }\n  }]);\n\n  return $35ea8db9cb2ccb90$export$d3b7288e7994edea;\n}();\n\nvar _type3 = new WeakMap();\n\nvar $62225008020f0a13$var$ERA_START_DATES = [[1868, 9, 8], [1912, 7, 30], [1926, 12, 25], [1989, 1, 8], [2019, 5, 1]];\nvar $62225008020f0a13$var$ERA_END_DATES = [[1912, 7, 29], [1926, 12, 24], [1989, 1, 7], [2019, 4, 30]];\nvar $62225008020f0a13$var$ERA_ADDENDS = [1867, 1911, 1925, 1988, 2018];\nvar $62225008020f0a13$var$ERA_NAMES = ['meiji', 'taisho', 'showa', 'heisei', 'reiwa'];\n\nfunction $62225008020f0a13$var$findEraFromGregorianDate(date) {\n  var idx = $62225008020f0a13$var$ERA_START_DATES.findIndex(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 3),\n        year = _ref4[0],\n        month = _ref4[1],\n        day = _ref4[2];\n\n    if (date.year < year) return true;\n    if (date.year === year && date.month < month) return true;\n    if (date.year === year && date.month === month && date.day < day) return true;\n    return false;\n  });\n  if (idx === -1) return $62225008020f0a13$var$ERA_START_DATES.length - 1;\n  if (idx === 0) return 0;\n  return idx - 1;\n}\n\nfunction $62225008020f0a13$var$toGregorian(date) {\n  var eraAddend = $62225008020f0a13$var$ERA_ADDENDS[$62225008020f0a13$var$ERA_NAMES.indexOf(date.era)];\n  if (!eraAddend) throw new Error('Unknown era: ' + date.era);\n  return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(date.year + eraAddend, date.month, date.day);\n}\n\nvar $62225008020f0a13$export$b746ab2b60cdffbf = /*#__PURE__*/function (_$3b62074eb05584b2$ex3) {\n  _inherits($62225008020f0a13$export$b746ab2b60cdffbf, _$3b62074eb05584b2$ex3);\n\n  var _super = _createSuper($62225008020f0a13$export$b746ab2b60cdffbf);\n\n  function $62225008020f0a13$export$b746ab2b60cdffbf() {\n    var _this;\n\n    _classCallCheck(this, $62225008020f0a13$export$b746ab2b60cdffbf);\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.identifier = 'japanese';\n    return _this;\n  }\n\n  _createClass($62225008020f0a13$export$b746ab2b60cdffbf, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var date = _get(_getPrototypeOf($62225008020f0a13$export$b746ab2b60cdffbf.prototype), \"fromJulianDay\", this).call(this, jd);\n\n      var era = $62225008020f0a13$var$findEraFromGregorianDate(date);\n      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this, $62225008020f0a13$var$ERA_NAMES[era], date.year - $62225008020f0a13$var$ERA_ADDENDS[era], date.month, date.day);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      return _get(_getPrototypeOf($62225008020f0a13$export$b746ab2b60cdffbf.prototype), \"toJulianDay\", this).call(this, $62225008020f0a13$var$toGregorian(date));\n    }\n  }, {\n    key: \"balanceDate\",\n    value: function balanceDate(date) {\n      var gregorianDate = $62225008020f0a13$var$toGregorian(date);\n      var era = $62225008020f0a13$var$findEraFromGregorianDate(gregorianDate);\n\n      if ($62225008020f0a13$var$ERA_NAMES[era] !== date.era) {\n        date.era = $62225008020f0a13$var$ERA_NAMES[era];\n        date.year = gregorianDate.year - $62225008020f0a13$var$ERA_ADDENDS[era];\n      } // Constrain in case we went before the first supported era.\n\n\n      this.constrainDate(date);\n    }\n  }, {\n    key: \"constrainDate\",\n    value: function constrainDate(date) {\n      var idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);\n      var end = $62225008020f0a13$var$ERA_END_DATES[idx];\n\n      if (end != null) {\n        var _end = _slicedToArray(end, 3),\n            endYear = _end[0],\n            endMonth = _end[1],\n            endDay = _end[2]; // Constrain the year to the maximum possible value in the era.\n        // Then constrain the month and day fields within that.\n\n\n        var maxYear = endYear - $62225008020f0a13$var$ERA_ADDENDS[idx];\n        date.year = Math.max(1, Math.min(maxYear, date.year));\n\n        if (date.year === maxYear) {\n          date.month = Math.min(endMonth, date.month);\n          if (date.month === endMonth) date.day = Math.min(endDay, date.day);\n        }\n\n        if (date.year === 1) {\n          var _$62225008020f0a13$va = _slicedToArray($62225008020f0a13$var$ERA_START_DATES[idx], 3),\n              startMonth = _$62225008020f0a13$va[1],\n              startDay = _$62225008020f0a13$va[2];\n\n          date.month = Math.max(startMonth, date.month);\n          if (date.month === startMonth) date.day = Math.max(startDay, date.day);\n        }\n      }\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return $62225008020f0a13$var$ERA_NAMES;\n    }\n  }, {\n    key: \"getYearsInEra\",\n    value: function getYearsInEra(date) {\n      // Get the number of years in the era, taking into account the date's month and day fields.\n      var era = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);\n      var next = $62225008020f0a13$var$ERA_START_DATES[era + 1];\n      if (next == null) return 9999;\n      var cur = $62225008020f0a13$var$ERA_START_DATES[era];\n      var years = next[0] - cur[0];\n      if (date.month < next[1] || date.month === next[1] && date.day < next[2]) years++;\n      return years;\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      return _get(_getPrototypeOf($62225008020f0a13$export$b746ab2b60cdffbf.prototype), \"getDaysInMonth\", this).call(this, $62225008020f0a13$var$toGregorian(date));\n    }\n  }, {\n    key: \"getMinimumMonthInYear\",\n    value: function getMinimumMonthInYear(date) {\n      var start = $62225008020f0a13$var$getMinimums(date);\n      return start ? start[1] : 1;\n    }\n  }, {\n    key: \"getMinimumDayInMonth\",\n    value: function getMinimumDayInMonth(date) {\n      var start = $62225008020f0a13$var$getMinimums(date);\n      return start && date.month === start[1] ? start[2] : 1;\n    }\n  }]);\n\n  return $62225008020f0a13$export$b746ab2b60cdffbf;\n}($3b62074eb05584b2$export$80ee6245ec4f29ec);\n\nfunction $62225008020f0a13$var$getMinimums(date) {\n  if (date.year === 1) {\n    var idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);\n    return $62225008020f0a13$var$ERA_START_DATES[idx];\n  }\n}\n\nvar $8d73d47422ca7302$var$BUDDHIST_ERA_START = -543;\n\nvar $8d73d47422ca7302$export$42d20a78301dee44 = /*#__PURE__*/function (_$3b62074eb05584b2$ex4) {\n  _inherits($8d73d47422ca7302$export$42d20a78301dee44, _$3b62074eb05584b2$ex4);\n\n  var _super2 = _createSuper($8d73d47422ca7302$export$42d20a78301dee44);\n\n  function $8d73d47422ca7302$export$42d20a78301dee44() {\n    var _this2;\n\n    _classCallCheck(this, $8d73d47422ca7302$export$42d20a78301dee44);\n\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    _this2 = _super2.call.apply(_super2, [this].concat(args));\n    _this2.identifier = 'buddhist';\n    return _this2;\n  }\n\n  _createClass($8d73d47422ca7302$export$42d20a78301dee44, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var gregorianDate = _get(_getPrototypeOf($8d73d47422ca7302$export$42d20a78301dee44.prototype), \"fromJulianDay\", this).call(this, jd);\n\n      var year = $3b62074eb05584b2$export$c36e0ecb2d4fa69d(gregorianDate.era, gregorianDate.year);\n      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this, year - $8d73d47422ca7302$var$BUDDHIST_ERA_START, gregorianDate.month, gregorianDate.day);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      return _get(_getPrototypeOf($8d73d47422ca7302$export$42d20a78301dee44.prototype), \"toJulianDay\", this).call(this, $8d73d47422ca7302$var$toGregorian(date));\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['BE'];\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      return _get(_getPrototypeOf($8d73d47422ca7302$export$42d20a78301dee44.prototype), \"getDaysInMonth\", this).call(this, $8d73d47422ca7302$var$toGregorian(date));\n    }\n  }]);\n\n  return $8d73d47422ca7302$export$42d20a78301dee44;\n}($3b62074eb05584b2$export$80ee6245ec4f29ec);\n\nfunction $8d73d47422ca7302$var$toGregorian(date) {\n  var _$3b62074eb05584b2$ex5 = $3b62074eb05584b2$export$4475b7e617eb123c(date.year + $8d73d47422ca7302$var$BUDDHIST_ERA_START),\n      _$3b62074eb05584b2$ex6 = _slicedToArray(_$3b62074eb05584b2$ex5, 2),\n      era = _$3b62074eb05584b2$ex6[0],\n      year = _$3b62074eb05584b2$ex6[1];\n\n  return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(era, year, date.month, date.day);\n}\n\nvar $5f31bd6f0c8940b2$var$TAIWAN_ERA_START = 1911;\n\nfunction $5f31bd6f0c8940b2$var$gregorianYear(date) {\n  return date.era === 'minguo' ? date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START : 1 - date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;\n}\n\nfunction $5f31bd6f0c8940b2$var$gregorianToTaiwan(year) {\n  var y = year - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;\n  if (y > 0) return ['minguo', y];else return ['before_minguo', 1 - y];\n}\n\nvar $5f31bd6f0c8940b2$export$65e01080afcb0799 = /*#__PURE__*/function (_$3b62074eb05584b2$ex7) {\n  _inherits($5f31bd6f0c8940b2$export$65e01080afcb0799, _$3b62074eb05584b2$ex7);\n\n  var _super3 = _createSuper($5f31bd6f0c8940b2$export$65e01080afcb0799);\n\n  function $5f31bd6f0c8940b2$export$65e01080afcb0799() {\n    var _this3;\n\n    _classCallCheck(this, $5f31bd6f0c8940b2$export$65e01080afcb0799);\n\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n    _this3.identifier // Republic of China\n    = 'roc';\n    return _this3;\n  }\n\n  _createClass($5f31bd6f0c8940b2$export$65e01080afcb0799, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var date = _get(_getPrototypeOf($5f31bd6f0c8940b2$export$65e01080afcb0799.prototype), \"fromJulianDay\", this).call(this, jd);\n\n      var extendedYear = $3b62074eb05584b2$export$c36e0ecb2d4fa69d(date.era, date.year);\n\n      var _$5f31bd6f0c8940b2$va = $5f31bd6f0c8940b2$var$gregorianToTaiwan(extendedYear),\n          _$5f31bd6f0c8940b2$va2 = _slicedToArray(_$5f31bd6f0c8940b2$va, 2),\n          era = _$5f31bd6f0c8940b2$va2[0],\n          year = _$5f31bd6f0c8940b2$va2[1];\n\n      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this, era, year, date.month, date.day);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      return _get(_getPrototypeOf($5f31bd6f0c8940b2$export$65e01080afcb0799.prototype), \"toJulianDay\", this).call(this, $5f31bd6f0c8940b2$var$toGregorian(date));\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['before_minguo', 'minguo'];\n    }\n  }, {\n    key: \"balanceDate\",\n    value: function balanceDate(date) {\n      var _$5f31bd6f0c8940b2$va3 = $5f31bd6f0c8940b2$var$gregorianToTaiwan($5f31bd6f0c8940b2$var$gregorianYear(date)),\n          _$5f31bd6f0c8940b2$va4 = _slicedToArray(_$5f31bd6f0c8940b2$va3, 2),\n          era = _$5f31bd6f0c8940b2$va4[0],\n          year = _$5f31bd6f0c8940b2$va4[1];\n\n      date.era = era;\n      date.year = year;\n    }\n  }, {\n    key: \"getYearsToAdd\",\n    value: function getYearsToAdd(date, years) {\n      return date.era === 'before_minguo' ? -years : years;\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      return _get(_getPrototypeOf($5f31bd6f0c8940b2$export$65e01080afcb0799.prototype), \"getDaysInMonth\", this).call(this, $5f31bd6f0c8940b2$var$toGregorian(date));\n    }\n  }]);\n\n  return $5f31bd6f0c8940b2$export$65e01080afcb0799;\n}($3b62074eb05584b2$export$80ee6245ec4f29ec);\n\nfunction $5f31bd6f0c8940b2$var$toGregorian(date) {\n  var _$3b62074eb05584b2$ex8 = $3b62074eb05584b2$export$4475b7e617eb123c($5f31bd6f0c8940b2$var$gregorianYear(date)),\n      _$3b62074eb05584b2$ex9 = _slicedToArray(_$3b62074eb05584b2$ex8, 2),\n      era = _$3b62074eb05584b2$ex9[0],\n      year = _$3b62074eb05584b2$ex9[1];\n\n  return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(era, year, date.month, date.day);\n}\n\nvar $f3ed2e4472ae7e25$var$PERSIAN_EPOCH = 1948321; // 622/03/19 Julian C.E.\n\nfunction $f3ed2e4472ae7e25$var$isLeapYear(year) {\n  var y0 = year > 0 ? year - 474 : year - 473;\n  var y1 = $2b4dce13dd5a17fa$export$842a2cf37af977e1(y0, 2820) + 474;\n  return $2b4dce13dd5a17fa$export$842a2cf37af977e1((y1 + 38) * 31, 128) < 31;\n}\n\nfunction $f3ed2e4472ae7e25$var$persianToJulianDay(year, month, day) {\n  var y0 = year > 0 ? year - 474 : year - 473;\n  var y1 = $2b4dce13dd5a17fa$export$842a2cf37af977e1(y0, 2820) + 474;\n  var offset = month <= 7 ? 31 * (month - 1) : 30 * (month - 1) + 6;\n  return $f3ed2e4472ae7e25$var$PERSIAN_EPOCH - 1 + 1029983 * Math.floor(y0 / 2820) + 365 * (y1 - 1) + Math.floor((31 * y1 - 5) / 128) + offset + day;\n}\n\nvar $f3ed2e4472ae7e25$export$37fccdbfd14c5939 = /*#__PURE__*/function () {\n  function $f3ed2e4472ae7e25$export$37fccdbfd14c5939() {\n    _classCallCheck(this, $f3ed2e4472ae7e25$export$37fccdbfd14c5939);\n\n    this.identifier = 'persian';\n  }\n\n  _createClass($f3ed2e4472ae7e25$export$37fccdbfd14c5939, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var d0 = jd - $f3ed2e4472ae7e25$var$persianToJulianDay(475, 1, 1);\n      var n2820 = Math.floor(d0 / 1029983);\n      var d1 = $2b4dce13dd5a17fa$export$842a2cf37af977e1(d0, 1029983);\n      var y2820 = d1 === 1029982 ? 2820 : Math.floor((128 * d1 + 46878) / 46751);\n      var year = 474 + 2820 * n2820 + y2820;\n      if (year <= 0) year--;\n      var yDay = jd - $f3ed2e4472ae7e25$var$persianToJulianDay(year, 1, 1) + 1;\n      var month = yDay <= 186 ? Math.ceil(yDay / 31) : Math.ceil((yDay - 6) / 31);\n      var day = jd - $f3ed2e4472ae7e25$var$persianToJulianDay(year, month, 1) + 1;\n      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this, year, month, day);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      return $f3ed2e4472ae7e25$var$persianToJulianDay(date.year, date.month, date.day);\n    }\n  }, {\n    key: \"getMonthsInYear\",\n    value: function getMonthsInYear() {\n      return 12;\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      if (date.month <= 6) return 31;\n      if (date.month <= 11) return 30;\n      return $f3ed2e4472ae7e25$var$isLeapYear(date.year) ? 30 : 29;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['AP'];\n    }\n  }, {\n    key: \"getYearsInEra\",\n    value: function getYearsInEra() {\n      return 9999;\n    }\n  }]);\n\n  return $f3ed2e4472ae7e25$export$37fccdbfd14c5939;\n}(); // Starts in 78 AD,\n\n\nvar $82c358003bdda0a8$var$INDIAN_ERA_START = 78; // The Indian year starts 80 days later than the Gregorian year.\n\nvar $82c358003bdda0a8$var$INDIAN_YEAR_START = 80;\n\nvar $82c358003bdda0a8$export$39f31c639fa15726 = /*#__PURE__*/function (_$3b62074eb05584b2$ex10) {\n  _inherits($82c358003bdda0a8$export$39f31c639fa15726, _$3b62074eb05584b2$ex10);\n\n  var _super4 = _createSuper($82c358003bdda0a8$export$39f31c639fa15726);\n\n  function $82c358003bdda0a8$export$39f31c639fa15726() {\n    var _this4;\n\n    _classCallCheck(this, $82c358003bdda0a8$export$39f31c639fa15726);\n\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    _this4 = _super4.call.apply(_super4, [this].concat(args));\n    _this4.identifier = 'indian';\n    return _this4;\n  }\n\n  _createClass($82c358003bdda0a8$export$39f31c639fa15726, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      // Gregorian date for Julian day\n      var date = _get(_getPrototypeOf($82c358003bdda0a8$export$39f31c639fa15726.prototype), \"fromJulianDay\", this).call(this, jd); // Year in Saka era\n\n\n      var indianYear = date.year - $82c358003bdda0a8$var$INDIAN_ERA_START; // Day number in Gregorian year (starting from 0)\n\n      var yDay = jd - $3b62074eb05584b2$export$f297eb839006d339(date.era, date.year, 1, 1);\n      var leapMonth;\n\n      if (yDay < $82c358003bdda0a8$var$INDIAN_YEAR_START) {\n        //  Day is at the end of the preceding Saka year\n        indianYear--; // Days in leapMonth this year, previous Gregorian year\n\n        leapMonth = $3b62074eb05584b2$export$553d7fa8e3805fc0(date.year - 1) ? 31 : 30;\n        yDay += leapMonth + 155 + 90 + 10;\n      } else {\n        // Days in leapMonth this year\n        leapMonth = $3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? 31 : 30;\n        yDay -= $82c358003bdda0a8$var$INDIAN_YEAR_START;\n      }\n\n      var indianMonth;\n      var indianDay;\n\n      if (yDay < leapMonth) {\n        indianMonth = 1;\n        indianDay = yDay + 1;\n      } else {\n        var mDay = yDay - leapMonth;\n\n        if (mDay < 155) {\n          indianMonth = Math.floor(mDay / 31) + 2;\n          indianDay = mDay % 31 + 1;\n        } else {\n          mDay -= 155;\n          indianMonth = Math.floor(mDay / 30) + 7;\n          indianDay = mDay % 30 + 1;\n        }\n      }\n\n      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this, indianYear, indianMonth, indianDay);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      var extendedYear = date.year + $82c358003bdda0a8$var$INDIAN_ERA_START;\n\n      var _$3b62074eb05584b2$ex11 = $3b62074eb05584b2$export$4475b7e617eb123c(extendedYear),\n          _$3b62074eb05584b2$ex12 = _slicedToArray(_$3b62074eb05584b2$ex11, 2),\n          era = _$3b62074eb05584b2$ex12[0],\n          year = _$3b62074eb05584b2$ex12[1];\n\n      var leapMonth;\n      var jd;\n\n      if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year)) {\n        leapMonth = 31;\n        jd = $3b62074eb05584b2$export$f297eb839006d339(era, year, 3, 21);\n      } else {\n        leapMonth = 30;\n        jd = $3b62074eb05584b2$export$f297eb839006d339(era, year, 3, 22);\n      }\n\n      if (date.month === 1) return jd + date.day - 1;\n      jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n      if (date.month >= 8) jd += (date.month - 7) * 30;\n      jd += date.day - 1;\n      return jd;\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      if (date.month === 1 && $3b62074eb05584b2$export$553d7fa8e3805fc0(date.year + $82c358003bdda0a8$var$INDIAN_ERA_START)) return 31;\n      if (date.month >= 2 && date.month <= 6) return 31;\n      return 30;\n    }\n  }, {\n    key: \"getYearsInEra\",\n    value: function getYearsInEra() {\n      return 9999;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['saka'];\n    }\n  }]);\n\n  return $82c358003bdda0a8$export$39f31c639fa15726;\n}($3b62074eb05584b2$export$80ee6245ec4f29ec);\n\nvar $f2f3e0e3a817edbd$var$CIVIL_EPOC = 1948440; // CE 622 July 16 Friday (Julian calendar) / CE 622 July 19 (Gregorian calendar)\n\nvar $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC = 1948439; // CE 622 July 15 Thursday (Julian calendar)\n\nvar $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START = 1300;\nvar $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END = 1600;\nvar $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS = 460322;\n\nfunction $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, day) {\n  return day + Math.ceil(29.5 * (month - 1)) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30) + epoch - 1;\n}\n\nfunction $f2f3e0e3a817edbd$var$julianDayToIslamic(calendar, epoch, jd) {\n  var year = Math.floor((30 * (jd - epoch) + 10646) / 10631);\n  var month = Math.min(12, Math.ceil((jd - (29 + $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);\n  var day = jd - $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, 1) + 1;\n  return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(calendar, year, month, day);\n}\n\nfunction $f2f3e0e3a817edbd$var$isLeapYear(year) {\n  return (14 + 11 * year) % 30 < 11;\n}\n\nvar $f2f3e0e3a817edbd$export$2066795aadd37bfc = /*#__PURE__*/function () {\n  function $f2f3e0e3a817edbd$export$2066795aadd37bfc() {\n    _classCallCheck(this, $f2f3e0e3a817edbd$export$2066795aadd37bfc);\n\n    this.identifier = 'islamic-civil';\n  }\n\n  _createClass($f2f3e0e3a817edbd$export$2066795aadd37bfc, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$CIVIL_EPOC, jd);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$CIVIL_EPOC, date.year, date.month, date.day);\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      var length = 29 + date.month % 2;\n      if (date.month === 12 && $f2f3e0e3a817edbd$var$isLeapYear(date.year)) length++;\n      return length;\n    }\n  }, {\n    key: \"getMonthsInYear\",\n    value: function getMonthsInYear() {\n      return 12;\n    }\n  }, {\n    key: \"getDaysInYear\",\n    value: function getDaysInYear(date) {\n      return $f2f3e0e3a817edbd$var$isLeapYear(date.year) ? 355 : 354;\n    }\n  }, {\n    key: \"getYearsInEra\",\n    value: function getYearsInEra() {\n      return 9999;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['AH'];\n    }\n  }]);\n\n  return $f2f3e0e3a817edbd$export$2066795aadd37bfc;\n}();\n\nvar $f2f3e0e3a817edbd$export$37f0887f2f9d22f7 = /*#__PURE__*/function (_$f2f3e0e3a817edbd$ex) {\n  _inherits($f2f3e0e3a817edbd$export$37f0887f2f9d22f7, _$f2f3e0e3a817edbd$ex);\n\n  var _super5 = _createSuper($f2f3e0e3a817edbd$export$37f0887f2f9d22f7);\n\n  function $f2f3e0e3a817edbd$export$37f0887f2f9d22f7() {\n    var _this5;\n\n    _classCallCheck(this, $f2f3e0e3a817edbd$export$37f0887f2f9d22f7);\n\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    _this5 = _super5.call.apply(_super5, [this].concat(args));\n    _this5.identifier = 'islamic-tbla';\n    return _this5;\n  }\n\n  _createClass($f2f3e0e3a817edbd$export$37f0887f2f9d22f7, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, jd);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, date.year, date.month, date.day);\n    }\n  }]);\n\n  return $f2f3e0e3a817edbd$export$37f0887f2f9d22f7;\n}($f2f3e0e3a817edbd$export$2066795aadd37bfc); // Generated by scripts/generate-umalqura.js\n\n\nvar $f2f3e0e3a817edbd$var$UMALQURA_DATA = 'qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=';\nvar $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH;\nvar $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE;\n\nfunction $f2f3e0e3a817edbd$var$umalquraYearStart(year) {\n  return $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS + $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];\n}\n\nfunction $f2f3e0e3a817edbd$var$umalquraMonthLength(year, month) {\n  var idx = year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START;\n  var mask = 1 << 11 - (month - 1);\n  if (($f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH[idx] & mask) === 0) return 29;else return 30;\n}\n\nfunction $f2f3e0e3a817edbd$var$umalquraMonthStart(year, month) {\n  var day = $f2f3e0e3a817edbd$var$umalquraYearStart(year);\n\n  for (var i = 1; i < month; i++) {\n    day += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);\n  }\n\n  return day;\n}\n\nfunction $f2f3e0e3a817edbd$var$umalquraYearLength(year) {\n  return $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year + 1 - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];\n}\n\nvar $f2f3e0e3a817edbd$export$5baab4758c231076 = /*#__PURE__*/function (_$f2f3e0e3a817edbd$ex2) {\n  _inherits($f2f3e0e3a817edbd$export$5baab4758c231076, _$f2f3e0e3a817edbd$ex2);\n\n  var _super6 = _createSuper($f2f3e0e3a817edbd$export$5baab4758c231076);\n\n  function $f2f3e0e3a817edbd$export$5baab4758c231076() {\n    var _this6;\n\n    _classCallCheck(this, $f2f3e0e3a817edbd$export$5baab4758c231076);\n\n    _this6 = _super6.call(this);\n    _this6.identifier = 'islamic-umalqura';\n    if (!$f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH) $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob($f2f3e0e3a817edbd$var$UMALQURA_DATA), function (c) {\n      return c.charCodeAt(0);\n    }).buffer);\n\n    if (!$f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE) {\n      $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE = new Uint32Array($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START + 1);\n      var yearStart = 0;\n\n      for (var year = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START; year <= $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END; year++) {\n        $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] = yearStart;\n\n        for (var i = 1; i <= 12; i++) {\n          yearStart += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);\n        }\n      }\n    }\n\n    return _this6;\n  }\n\n  _createClass($f2f3e0e3a817edbd$export$5baab4758c231076, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var days = jd - $f2f3e0e3a817edbd$var$CIVIL_EPOC;\n      var startDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_START);\n      var endDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END);\n      if (days < startDays || days > endDays) return _get(_getPrototypeOf($f2f3e0e3a817edbd$export$5baab4758c231076.prototype), \"fromJulianDay\", this).call(this, jd);else {\n        var y = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START - 1;\n        var m = 1;\n        var d = 1;\n\n        while (d > 0) {\n          y++;\n          d = days - $f2f3e0e3a817edbd$var$umalquraYearStart(y) + 1;\n          var yearLength = $f2f3e0e3a817edbd$var$umalquraYearLength(y);\n\n          if (d === yearLength) {\n            m = 12;\n            break;\n          } else if (d < yearLength) {\n            var monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m);\n            m = 1;\n\n            while (d > monthLength) {\n              d -= monthLength;\n              m++;\n              monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m);\n            }\n\n            break;\n          }\n        }\n\n        return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this, y, m, days - $f2f3e0e3a817edbd$var$umalquraMonthStart(y, m) + 1);\n      }\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return _get(_getPrototypeOf($f2f3e0e3a817edbd$export$5baab4758c231076.prototype), \"toJulianDay\", this).call(this, date);\n      return $f2f3e0e3a817edbd$var$CIVIL_EPOC + $f2f3e0e3a817edbd$var$umalquraMonthStart(date.year, date.month) + (date.day - 1);\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return _get(_getPrototypeOf($f2f3e0e3a817edbd$export$5baab4758c231076.prototype), \"getDaysInMonth\", this).call(this, date);\n      return $f2f3e0e3a817edbd$var$umalquraMonthLength(date.year, date.month);\n    }\n  }, {\n    key: \"getDaysInYear\",\n    value: function getDaysInYear(date) {\n      if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END) return _get(_getPrototypeOf($f2f3e0e3a817edbd$export$5baab4758c231076.prototype), \"getDaysInYear\", this).call(this, date);\n      return $f2f3e0e3a817edbd$var$umalquraYearLength(date.year);\n    }\n  }]);\n\n  return $f2f3e0e3a817edbd$export$5baab4758c231076;\n}($f2f3e0e3a817edbd$export$2066795aadd37bfc);\n\nvar $7c5f6fbf42389787$var$HEBREW_EPOCH = 347997; // Hebrew date calculations are performed in terms of days, hours, and\n// \"parts\" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.\n\nvar $7c5f6fbf42389787$var$HOUR_PARTS = 1080;\nvar $7c5f6fbf42389787$var$DAY_PARTS = 24 * $7c5f6fbf42389787$var$HOUR_PARTS; // An approximate value for the length of a lunar month.\n// It is used to calculate the approximate year and month of a given\n// absolute date.\n\nvar $7c5f6fbf42389787$var$MONTH_DAYS = 29;\nvar $7c5f6fbf42389787$var$MONTH_FRACT = 12 * $7c5f6fbf42389787$var$HOUR_PARTS + 793;\nvar $7c5f6fbf42389787$var$MONTH_PARTS = $7c5f6fbf42389787$var$MONTH_DAYS * $7c5f6fbf42389787$var$DAY_PARTS + $7c5f6fbf42389787$var$MONTH_FRACT;\n\nfunction $7c5f6fbf42389787$var$isLeapYear(year) {\n  return $2b4dce13dd5a17fa$export$842a2cf37af977e1(year * 7 + 1, 19) < 7;\n} // Test for delay of start of new year and to avoid\n// Sunday, Wednesday, and Friday as start of the new year.\n\n\nfunction $7c5f6fbf42389787$var$hebrewDelay1(year) {\n  var months = Math.floor((235 * year - 234) / 19);\n  var parts = 12084 + 13753 * months;\n  var day = months * 29 + Math.floor(parts / 25920);\n  if ($2b4dce13dd5a17fa$export$842a2cf37af977e1(3 * (day + 1), 7) < 3) day += 1;\n  return day;\n} // Check for delay in start of new year due to length of adjacent years\n\n\nfunction $7c5f6fbf42389787$var$hebrewDelay2(year) {\n  var last = $7c5f6fbf42389787$var$hebrewDelay1(year - 1);\n  var present = $7c5f6fbf42389787$var$hebrewDelay1(year);\n  var next = $7c5f6fbf42389787$var$hebrewDelay1(year + 1);\n  if (next - present === 356) return 2;\n  if (present - last === 382) return 1;\n  return 0;\n}\n\nfunction $7c5f6fbf42389787$var$startOfYear(year) {\n  return $7c5f6fbf42389787$var$hebrewDelay1(year) + $7c5f6fbf42389787$var$hebrewDelay2(year);\n}\n\nfunction $7c5f6fbf42389787$var$getDaysInYear(year) {\n  return $7c5f6fbf42389787$var$startOfYear(year + 1) - $7c5f6fbf42389787$var$startOfYear(year);\n}\n\nfunction $7c5f6fbf42389787$var$getYearType(year) {\n  var yearLength = $7c5f6fbf42389787$var$getDaysInYear(year);\n  if (yearLength > 380) yearLength -= 30; // Subtract length of leap month.\n\n  switch (yearLength) {\n    case 353:\n      return 0;\n    // deficient\n\n    case 354:\n      return 1;\n    // normal\n\n    case 355:\n      return 2;\n    // complete\n  }\n}\n\nfunction $7c5f6fbf42389787$var$getDaysInMonth(year, month) {\n  // Normalize month numbers from 1 - 13, even on non-leap years\n  if (month >= 6 && !$7c5f6fbf42389787$var$isLeapYear(year)) month++; // First of all, dispose of fixed-length 29 day months\n\n  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) return 29;\n  var yearType = $7c5f6fbf42389787$var$getYearType(year); // If it's Heshvan, days depend on length of year\n\n  if (month === 2) return yearType === 2 ? 30 : 29; // Similarly, Kislev varies with the length of year\n\n  if (month === 3) return yearType === 0 ? 29 : 30; // Adar I only exists in leap years\n\n  if (month === 6) return $7c5f6fbf42389787$var$isLeapYear(year) ? 30 : 0;\n  return 30;\n}\n\nvar $7c5f6fbf42389787$export$ca405048b8fb5af = /*#__PURE__*/function () {\n  function $7c5f6fbf42389787$export$ca405048b8fb5af() {\n    _classCallCheck(this, $7c5f6fbf42389787$export$ca405048b8fb5af);\n\n    this.identifier = 'hebrew';\n  }\n\n  _createClass($7c5f6fbf42389787$export$ca405048b8fb5af, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var d = jd - $7c5f6fbf42389787$var$HEBREW_EPOCH;\n      var m = d * $7c5f6fbf42389787$var$DAY_PARTS / $7c5f6fbf42389787$var$MONTH_PARTS; // Months (approx)\n\n      var year = Math.floor((19 * m + 234) / 235) + 1; // Years (approx)\n\n      var ys = $7c5f6fbf42389787$var$startOfYear(year); // 1st day of year\n\n      var dayOfYear = Math.floor(d - ys); // Because of the postponement rules, it's possible to guess wrong.  Fix it.\n\n      while (dayOfYear < 1) {\n        year--;\n        ys = $7c5f6fbf42389787$var$startOfYear(year);\n        dayOfYear = Math.floor(d - ys);\n      } // Now figure out which month we're in, and the date within that month\n\n\n      var month = 1;\n      var monthStart = 0;\n\n      while (monthStart < dayOfYear) {\n        monthStart += $7c5f6fbf42389787$var$getDaysInMonth(year, month);\n        month++;\n      }\n\n      month--;\n      monthStart -= $7c5f6fbf42389787$var$getDaysInMonth(year, month);\n      var day = dayOfYear - monthStart;\n      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this, year, month, day);\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      var jd = $7c5f6fbf42389787$var$startOfYear(date.year);\n\n      for (var month = 1; month < date.month; month++) {\n        jd += $7c5f6fbf42389787$var$getDaysInMonth(date.year, month);\n      }\n\n      return jd + date.day + $7c5f6fbf42389787$var$HEBREW_EPOCH;\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      return $7c5f6fbf42389787$var$getDaysInMonth(date.year, date.month);\n    }\n  }, {\n    key: \"getMonthsInYear\",\n    value: function getMonthsInYear(date) {\n      return $7c5f6fbf42389787$var$isLeapYear(date.year) ? 13 : 12;\n    }\n  }, {\n    key: \"getDaysInYear\",\n    value: function getDaysInYear(date) {\n      return $7c5f6fbf42389787$var$getDaysInYear(date.year);\n    }\n  }, {\n    key: \"getYearsInEra\",\n    value: function getYearsInEra() {\n      return 9999;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['AM'];\n    }\n  }, {\n    key: \"balanceYearMonth\",\n    value: function balanceYearMonth(date, previousDate) {\n      // Keep date in the same month when switching between leap years and non leap years\n      if (previousDate.year !== date.year) {\n        if ($7c5f6fbf42389787$var$isLeapYear(previousDate.year) && !$7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6) date.month--;else if (!$7c5f6fbf42389787$var$isLeapYear(previousDate.year) && $7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6) date.month++;\n      }\n    }\n  }]);\n\n  return $7c5f6fbf42389787$export$ca405048b8fb5af;\n}();\n\nvar $b956b2d7a6cf451f$var$ETHIOPIC_EPOCH = 1723856;\nvar $b956b2d7a6cf451f$var$COPTIC_EPOCH = 1824665; // The delta between Amete Alem 1 and Amete Mihret 1\n// AA 5501 = AM 1\n\nvar $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA = 5500;\n\nfunction $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, day) {\n  return epoch // difference from Julian epoch to 1,1,1\n  + 365 * year // number of days from years\n  + Math.floor(year / 4) // extra day of leap year\n  + 30 * (month - 1) // number of days from months (1 based)\n  + day - 1 // number of days for present month (1 based)\n  ;\n}\n\nfunction $b956b2d7a6cf451f$var$julianDayToCE(calendar, epoch, jd) {\n  var year = Math.floor(4 * (jd - epoch) / 1461);\n  var month = 1 + Math.floor((jd - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, 1, 1)) / 30);\n  var day = jd + 1 - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, 1);\n  return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(calendar, year, month, day);\n}\n\nfunction $b956b2d7a6cf451f$var$getLeapDay(year) {\n  return Math.floor(year % 4 / 3);\n}\n\nfunction $b956b2d7a6cf451f$var$getDaysInMonth(year, month) {\n  // The Ethiopian and Coptic calendars have 13 months, 12 of 30 days each and\n  // an intercalary month at the end of the year of 5 or 6 days, depending whether\n  // the year is a leap year or not. The Leap Year follows the same rules as the\n  // Julian Calendar so that the extra month always has six days in the year before\n  // a Julian Leap Year.\n  if (month % 13 !== 0) // not intercalary month\n    return 30;else // intercalary month 5 days + possible leap day\n    return $b956b2d7a6cf451f$var$getLeapDay(year) + 5;\n}\n\nvar $b956b2d7a6cf451f$export$26ba6eab5e20cd7d = /*#__PURE__*/function () {\n  function $b956b2d7a6cf451f$export$26ba6eab5e20cd7d() {\n    _classCallCheck(this, $b956b2d7a6cf451f$export$26ba6eab5e20cd7d);\n\n    this.identifier = 'ethiopic';\n  }\n\n  _createClass($b956b2d7a6cf451f$export$26ba6eab5e20cd7d, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var date = $b956b2d7a6cf451f$var$julianDayToCE(this, $b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);\n      if (date.year > 0) date.era = 'AM';else {\n        date.era = 'AA';\n        date.year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;\n      }\n      return date;\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      var year = date.year;\n      if (date.era === 'AA') year -= $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;\n      return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, year, date.month, date.day);\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      var year = date.year;\n      if (date.era === 'AA') year -= $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;\n      return $b956b2d7a6cf451f$var$getDaysInMonth(year, date.month);\n    }\n  }, {\n    key: \"getMonthsInYear\",\n    value: function getMonthsInYear() {\n      return 13;\n    }\n  }, {\n    key: \"getDaysInYear\",\n    value: function getDaysInYear(date) {\n      return 365 + $b956b2d7a6cf451f$var$getLeapDay(date.year);\n    }\n  }, {\n    key: \"getYearsInEra\",\n    value: function getYearsInEra() {\n      return 9999;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['AA', 'AM'];\n    }\n  }]);\n\n  return $b956b2d7a6cf451f$export$26ba6eab5e20cd7d;\n}();\n\nvar $b956b2d7a6cf451f$export$d72e0c37005a4914 = /*#__PURE__*/function (_$b956b2d7a6cf451f$ex) {\n  _inherits($b956b2d7a6cf451f$export$d72e0c37005a4914, _$b956b2d7a6cf451f$ex);\n\n  var _super7 = _createSuper($b956b2d7a6cf451f$export$d72e0c37005a4914);\n\n  function $b956b2d7a6cf451f$export$d72e0c37005a4914() {\n    var _this7;\n\n    _classCallCheck(this, $b956b2d7a6cf451f$export$d72e0c37005a4914);\n\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    _this7 = _super7.call.apply(_super7, [this].concat(args));\n    _this7.identifier // also known as 'ethiopic-amete-alem' in ICU\n    = 'ethioaa';\n    return _this7;\n  }\n\n  _createClass($b956b2d7a6cf451f$export$d72e0c37005a4914, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var date = $b956b2d7a6cf451f$var$julianDayToCE(this, $b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);\n      date.era = 'AA';\n      date.year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;\n      return date;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['AA'];\n    }\n  }]);\n\n  return $b956b2d7a6cf451f$export$d72e0c37005a4914;\n}($b956b2d7a6cf451f$export$26ba6eab5e20cd7d);\n\nvar $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1 = /*#__PURE__*/function (_$b956b2d7a6cf451f$ex2) {\n  _inherits($b956b2d7a6cf451f$export$fe6243cbe1a4b7c1, _$b956b2d7a6cf451f$ex2);\n\n  var _super8 = _createSuper($b956b2d7a6cf451f$export$fe6243cbe1a4b7c1);\n\n  function $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1() {\n    var _this8;\n\n    _classCallCheck(this, $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1);\n\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    _this8 = _super8.call.apply(_super8, [this].concat(args));\n    _this8.identifier = 'coptic';\n    return _this8;\n  }\n\n  _createClass($b956b2d7a6cf451f$export$fe6243cbe1a4b7c1, [{\n    key: \"fromJulianDay\",\n    value: function fromJulianDay(jd) {\n      var date = $b956b2d7a6cf451f$var$julianDayToCE(this, $b956b2d7a6cf451f$var$COPTIC_EPOCH, jd);\n\n      if (date.year <= 0) {\n        date.era = 'BCE';\n        date.year = 1 - date.year;\n      } else date.era = 'CE';\n\n      return date;\n    }\n  }, {\n    key: \"toJulianDay\",\n    value: function toJulianDay(date) {\n      var year = date.year;\n      if (date.era === 'BCE') year = 1 - year;\n      return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$COPTIC_EPOCH, year, date.month, date.day);\n    }\n  }, {\n    key: \"getDaysInMonth\",\n    value: function getDaysInMonth(date) {\n      var year = date.year;\n      if (date.era === 'BCE') year = 1 - year;\n      return $b956b2d7a6cf451f$var$getDaysInMonth(year, date.month);\n    }\n  }, {\n    key: \"getYearsToAdd\",\n    value: function getYearsToAdd(date, years) {\n      return date.era === 'BCE' ? -years : years;\n    }\n  }, {\n    key: \"getEras\",\n    value: function getEras() {\n      return ['BCE', 'CE'];\n    }\n  }]);\n\n  return $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1;\n}($b956b2d7a6cf451f$export$26ba6eab5e20cd7d);\n\nfunction $64244302c3013299$export$dd0bbc9b26defe37(name) {\n  switch (name) {\n    case 'buddhist':\n      return new $8d73d47422ca7302$export$42d20a78301dee44();\n\n    case 'ethiopic':\n      return new $b956b2d7a6cf451f$export$26ba6eab5e20cd7d();\n\n    case 'ethioaa':\n      return new $b956b2d7a6cf451f$export$d72e0c37005a4914();\n\n    case 'coptic':\n      return new $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1();\n\n    case 'hebrew':\n      return new $7c5f6fbf42389787$export$ca405048b8fb5af();\n\n    case 'indian':\n      return new $82c358003bdda0a8$export$39f31c639fa15726();\n\n    case 'islamic-civil':\n      return new $f2f3e0e3a817edbd$export$2066795aadd37bfc();\n\n    case 'islamic-tbla':\n      return new $f2f3e0e3a817edbd$export$37f0887f2f9d22f7();\n\n    case 'islamic-umalqura':\n      return new $f2f3e0e3a817edbd$export$5baab4758c231076();\n\n    case 'japanese':\n      return new $62225008020f0a13$export$b746ab2b60cdffbf();\n\n    case 'persian':\n      return new $f3ed2e4472ae7e25$export$37fccdbfd14c5939();\n\n    case 'roc':\n      return new $5f31bd6f0c8940b2$export$65e01080afcb0799();\n\n    case 'gregory':\n    default:\n      return new $3b62074eb05584b2$export$80ee6245ec4f29ec();\n  }\n}\n\nvar $484f90c8d1b5efb9$exports = {};\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nvar $fb18d541ea1ad717$var$formatterCache = new Map();\n\nvar $fb18d541ea1ad717$export$ad991b66133851cf = /*#__PURE__*/function () {\n  function $fb18d541ea1ad717$export$ad991b66133851cf(locale) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, $fb18d541ea1ad717$export$ad991b66133851cf);\n\n    this.formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options);\n    this.options = options;\n  }\n\n  _createClass($fb18d541ea1ad717$export$ad991b66133851cf, [{\n    key: \"format\",\n    value:\n    /** Formats a date as a string according to the locale and format options passed to the constructor. */\n    function format(value) {\n      return this.formatter.format(value);\n    }\n    /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */\n\n  }, {\n    key: \"formatToParts\",\n    value: function formatToParts(value) {\n      return this.formatter.formatToParts(value);\n    }\n    /** Formats a date range as a string. */\n\n  }, {\n    key: \"formatRange\",\n    value: function formatRange(start, end) {\n      // @ts-ignore\n      if (typeof this.formatter.formatRange === 'function') // @ts-ignore\n        return this.formatter.formatRange(start, end);\n      if (end < start) throw new RangeError('End date must be >= start date'); // Very basic fallback for old browsers.\n\n      return \"\".concat(this.formatter.format(start), \" \\u2013 \").concat(this.formatter.format(end));\n    }\n    /** Formats a date range as an array of parts. */\n\n  }, {\n    key: \"formatRangeToParts\",\n    value: function formatRangeToParts(start, end) {\n      // @ts-ignore\n      if (typeof this.formatter.formatRangeToParts === 'function') // @ts-ignore\n        return this.formatter.formatRangeToParts(start, end);\n      if (end < start) throw new RangeError('End date must be >= start date');\n      var startParts = this.formatter.formatToParts(start);\n      var endParts = this.formatter.formatToParts(end);\n      return [].concat(_toConsumableArray(startParts.map(function (p) {\n        return _objectSpread(_objectSpread({}, p), {}, {\n          source: 'startRange'\n        });\n      })), [{\n        type: 'literal',\n        value: ' – ',\n        source: 'shared'\n      }], _toConsumableArray(endParts.map(function (p) {\n        return _objectSpread(_objectSpread({}, p), {}, {\n          source: 'endRange'\n        });\n      })));\n    }\n    /** Returns the resolved formatting options based on the values passed to the constructor. */\n\n  }, {\n    key: \"resolvedOptions\",\n    value: function resolvedOptions() {\n      var resolvedOptions = this.formatter.resolvedOptions();\n\n      if ($fb18d541ea1ad717$var$hasBuggyResolvedHourCycle()) {\n        if (!this.resolvedHourCycle) this.resolvedHourCycle = $fb18d541ea1ad717$var$getResolvedHourCycle(resolvedOptions.locale, this.options);\n        resolvedOptions.hourCycle = this.resolvedHourCycle;\n        resolvedOptions.hour12 = this.resolvedHourCycle === 'h11' || this.resolvedHourCycle === 'h12';\n      }\n\n      return resolvedOptions;\n    }\n  }]);\n\n  return $fb18d541ea1ad717$export$ad991b66133851cf;\n}(); // There are multiple bugs involving the hour12 and hourCycle options in various browser engines.\n//   - Chrome [1] (and the ECMA 402 spec [2]) resolve hour12: false in English and other locales to h24 (24:00 - 23:59)\n//     rather than h23 (00:00 - 23:59). Same can happen with hour12: true in French, which Chrome resolves to h11 (00:00 - 11:59)\n//     rather than h12 (12:00 - 11:59).\n//   - WebKit returns an incorrect hourCycle resolved option in the French locale due to incorrect parsing of 'h' literal\n//     in the resolved pattern. It also formats incorrectly when specifying the hourCycle option for the same reason. [3]\n// [1] https://bugs.chromium.org/p/chromium/issues/detail?id=1045791\n// [2] https://github.com/tc39/ecma402/issues/402\n// [3] https://bugs.webkit.org/show_bug.cgi?id=229313\n// https://github.com/unicode-org/cldr/blob/018b55eff7ceb389c7e3fc44e2f657eae3b10b38/common/supplemental/supplementalData.xml#L4774-L4802\n\n\nvar $fb18d541ea1ad717$var$hour12Preferences = {\n  true: {\n    // Only Japanese uses the h11 style for 12 hour time. All others use h12.\n    ja: 'h11'\n  },\n  false: {}\n};\n\nfunction $fb18d541ea1ad717$var$getCachedDateFormatter(locale) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Work around buggy hour12 behavior in Chrome / ECMA 402 spec by using hourCycle instead.\n  // Only apply the workaround if the issue is detected, because the hourCycle option is buggy in Safari.\n  if (typeof options.hour12 === 'boolean' && $fb18d541ea1ad717$var$hasBuggyHour12Behavior()) {\n    options = _objectSpread({}, options);\n    var pref = $fb18d541ea1ad717$var$hour12Preferences[String(options.hour12)][locale.split('-')[0]];\n    var defaultHourCycle = options.hour12 ? 'h12' : 'h23';\n    options.hourCycle = pref !== null && pref !== void 0 ? pref : defaultHourCycle;\n    delete options.hour12;\n  }\n\n  var cacheKey = locale + (options ? Object.entries(options).sort(function (a, b) {\n    return a[0] < b[0] ? -1 : 1;\n  }).join() : '');\n  if ($fb18d541ea1ad717$var$formatterCache.has(cacheKey)) return $fb18d541ea1ad717$var$formatterCache.get(cacheKey);\n  var numberFormatter = new Intl.DateTimeFormat(locale, options);\n  $fb18d541ea1ad717$var$formatterCache.set(cacheKey, numberFormatter);\n  return numberFormatter;\n}\n\nvar $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = null;\n\nfunction $fb18d541ea1ad717$var$hasBuggyHour12Behavior() {\n  if ($fb18d541ea1ad717$var$_hasBuggyHour12Behavior == null) $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = new Intl.DateTimeFormat('en-US', {\n    hour: 'numeric',\n    hour12: false\n  }).format(new Date(2020, 2, 3, 0)) === '24';\n  return $fb18d541ea1ad717$var$_hasBuggyHour12Behavior;\n}\n\nvar $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = null;\n\nfunction $fb18d541ea1ad717$var$hasBuggyResolvedHourCycle() {\n  if ($fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle == null) $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = new Intl.DateTimeFormat('fr', {\n    hour: 'numeric',\n    hour12: false\n  }).resolvedOptions().hourCycle === 'h12';\n  return $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle;\n}\n\nfunction $fb18d541ea1ad717$var$getResolvedHourCycle(locale, options) {\n  if (!options.timeStyle && !options.hour) return undefined; // Work around buggy results in resolved hourCycle and hour12 options in WebKit.\n  // Format the minimum possible hour and maximum possible hour in a day and parse the results.\n\n  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, '');\n  locale += (locale.includes('-u-') ? '' : '-u') + '-nu-latn';\n  var formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, _objectSpread(_objectSpread({}, options), {}, {\n    timeZone: undefined // use local timezone\n\n  }));\n  var min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find(function (p) {\n    return p.type === 'hour';\n  }).value, 10);\n  var max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find(function (p) {\n    return p.type === 'hour';\n  }).value, 10);\n  if (min === 0 && max === 23) return 'h23';\n  if (min === 24 && max === 23) return 'h24';\n  if (min === 0 && max === 11) return 'h11';\n  if (min === 12 && max === 11) return 'h12';\n  throw new Error('Unexpected hour cycle result');\n}\n\nexport { $35ea8db9cb2ccb90$export$99faa760c7908e4f as CalendarDate, $35ea8db9cb2ccb90$export$ca871e8dbb80966f as CalendarDateTime, $35ea8db9cb2ccb90$export$680ea196effce5f as Time, $35ea8db9cb2ccb90$export$d3b7288e7994edea as ZonedDateTime, $3b62074eb05584b2$export$80ee6245ec4f29ec as GregorianCalendar, $62225008020f0a13$export$b746ab2b60cdffbf as JapaneseCalendar, $8d73d47422ca7302$export$42d20a78301dee44 as BuddhistCalendar, $5f31bd6f0c8940b2$export$65e01080afcb0799 as TaiwanCalendar, $f3ed2e4472ae7e25$export$37fccdbfd14c5939 as PersianCalendar, $82c358003bdda0a8$export$39f31c639fa15726 as IndianCalendar, $f2f3e0e3a817edbd$export$2066795aadd37bfc as IslamicCivilCalendar, $f2f3e0e3a817edbd$export$37f0887f2f9d22f7 as IslamicTabularCalendar, $f2f3e0e3a817edbd$export$5baab4758c231076 as IslamicUmalquraCalendar, $7c5f6fbf42389787$export$ca405048b8fb5af as HebrewCalendar, $b956b2d7a6cf451f$export$26ba6eab5e20cd7d as EthiopicCalendar, $b956b2d7a6cf451f$export$d72e0c37005a4914 as EthiopicAmeteAlemCalendar, $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1 as CopticCalendar, $64244302c3013299$export$dd0bbc9b26defe37 as createCalendar, $11d87f3f76e88657$export$93522d1a439f3617 as toCalendarDate, $11d87f3f76e88657$export$b21e0b124e224484 as toCalendarDateTime, $11d87f3f76e88657$export$d33f79e3ffc3dc83 as toTime, $11d87f3f76e88657$export$b4a036af3fc0b032 as toCalendar, $11d87f3f76e88657$export$84c95a83c799e074 as toZoned, $11d87f3f76e88657$export$538b00033cc11c75 as toTimeZone, $11d87f3f76e88657$export$d9b67bc93c097491 as toLocalTimeZone, $14e0f24ef4ac5c92$export$ea39ec197993aef0 as isSameDay, $14e0f24ef4ac5c92$export$a18c89cbd24170ff as isSameMonth, $14e0f24ef4ac5c92$export$5841f9eb9773f25f as isSameYear, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee as isEqualDay, $14e0f24ef4ac5c92$export$5a8da0c44a3afdf2 as isEqualMonth, $14e0f24ef4ac5c92$export$ea840f5a6dda8147 as isEqualYear, $14e0f24ef4ac5c92$export$629b0a497aa65267 as isToday, $14e0f24ef4ac5c92$export$2061056d06d7cdf7 as getDayOfWeek, $14e0f24ef4ac5c92$export$461939dd4422153 as now, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3 as today, $14e0f24ef4ac5c92$export$126c91c941de7e as getHoursInDay, $14e0f24ef4ac5c92$export$aa8b41735afcabd2 as getLocalTimeZone, $14e0f24ef4ac5c92$export$a5a3b454ada2268e as startOfMonth, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4 as startOfWeek, $14e0f24ef4ac5c92$export$f91e89d3d0406102 as startOfYear, $14e0f24ef4ac5c92$export$a2258d9c4118825c as endOfMonth, $14e0f24ef4ac5c92$export$ef8b6d9133084f4e as endOfWeek, $14e0f24ef4ac5c92$export$8b7aa55c66d5569e as endOfYear, $14e0f24ef4ac5c92$export$5412ac11713b72ad as getMinimumMonthInYear, $14e0f24ef4ac5c92$export$b2f4953d301981d5 as getMinimumDayInMonth, $14e0f24ef4ac5c92$export$ccc1b2479e7dd654 as getWeeksInMonth, $14e0f24ef4ac5c92$export$5c333a116e949cdd as minDate, $14e0f24ef4ac5c92$export$a75f2bff57811055 as maxDate, $14e0f24ef4ac5c92$export$618d60ea299da42 as isWeekend, $14e0f24ef4ac5c92$export$ee9d87258e1d19ed as isWeekday, $fae977aafc393c5c$export$6b862160d295c8e as parseDate, $fae977aafc393c5c$export$588937bcd60ade55 as parseDateTime, $fae977aafc393c5c$export$c9698ec7f05a07e1 as parseTime, $fae977aafc393c5c$export$5adfdab05168c219 as parseAbsolute, $fae977aafc393c5c$export$8e384432362ed0f0 as parseAbsoluteToLocal, $fae977aafc393c5c$export$fd7893f06e92a6a4 as parseZonedDateTime, $fb18d541ea1ad717$export$ad991b66133851cf as DateFormatter };","map":{"version":3,"sources":["packages/@internationalized/date/src/CalendarDate.ts","packages/@internationalized/date/src/manipulation.ts","packages/@internationalized/date/src/conversion.ts","packages/@internationalized/date/src/queries.ts","packages/@internationalized/date/src/weekStartData.ts","packages/@internationalized/date/src/calendars/GregorianCalendar.ts","packages/@internationalized/date/src/utils.ts","packages/@internationalized/date/src/string.ts","packages/@internationalized/date/src/calendars/JapaneseCalendar.ts","packages/@internationalized/date/src/calendars/BuddhistCalendar.ts","packages/@internationalized/date/src/calendars/TaiwanCalendar.ts","packages/@internationalized/date/src/calendars/PersianCalendar.ts","packages/@internationalized/date/src/calendars/IndianCalendar.ts","packages/@internationalized/date/src/calendars/IslamicCalendar.ts","packages/@internationalized/date/src/calendars/HebrewCalendar.ts","packages/@internationalized/date/src/calendars/EthiopicCalendar.ts","packages/@internationalized/date/src/createCalendar.ts","packages/@internationalized/date/src/DateFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {add, addTime, addZoned, constrain, constrainTime, cycleDate, cycleTime, cycleZoned, set, setTime, setZoned, subtract, subtractTime, subtractZoned} from './manipulation';\nimport {AnyCalendarDate, AnyTime, Calendar, CycleOptions, CycleTimeOptions, DateDuration, DateField, DateFields, DateTimeDuration, Disambiguation, TimeDuration, TimeField, TimeFields} from './types';\nimport {compareDate, compareTime} from './queries';\nimport {dateTimeToString, dateToString, timeToString, zonedDateTimeToString} from './string';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {toCalendarDateTime, toDate, toZoned, zonedToDate} from './conversion';\n\nfunction shiftArgs(args: any[]) {\n  let calendar: Calendar = typeof args[0] === 'object'\n    ? args.shift()\n    : new GregorianCalendar();\n\n  let era: string;\n  if (typeof args[0] === 'string') {\n    era = args.shift();\n  } else {\n    let eras = calendar.getEras();\n    era = eras[eras.length - 1];\n  }\n\n  let year = args.shift();\n  let month = args.shift();\n  let day = args.shift();\n\n  return [calendar, era, year, month, day];\n}\n\n/** A CalendarDate represents a date without any time components in a specific calendar system. */\nexport class CalendarDate {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  // i.e. a ZonedDateTime should not be be passable to a parameter that expects CalendarDate.\n  // If that behavior is desired, use the AnyCalendarDate interface instead.\n  #type;\n  /** The calendar system associated with this date, e.g. Gregorian. */\n  public readonly calendar: Calendar;\n  /** The calendar era for this date, e.g. \"BC\" or \"AD\". */\n  public readonly era: string;\n  /** The year of this date within the era. */\n  public readonly year: number;\n  /**\n   * The month number within the year. Note that some calendar systems such as Hebrew\n   * may have a variable number of months per year. Therefore, month numbers may not\n   * always correspond to the same month names in different years.\n   */\n  public readonly month: number;\n  /** The day number within the month. */\n  public readonly day: number;\n\n  constructor(year: number, month: number, day: number);\n  constructor(era: string, year: number, month: number, day: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n\n    constrain(this);\n  }\n\n  /** Returns a copy of this date. */\n  copy(): CalendarDate {\n    if (this.era) {\n      return new CalendarDate(this.calendar, this.era, this.year, this.month, this.day);\n    } else {\n      return new CalendarDate(this.calendar, this.year, this.month, this.day);\n    }\n  }\n\n  /** Returns a new `CalendarDate` with the given duration added to it. */\n  add(duration: DateDuration): CalendarDate {\n    return add(this, duration);\n  }\n\n  /** Returns a new `CalendarDate` with the given duration subtracted from it. */\n  subtract(duration: DateDuration): CalendarDate {\n    return subtract(this, duration);\n  }\n\n  /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: DateFields): CalendarDate {\n    return set(this, fields);\n  }\n\n  /**\n   * Returns a new `CalendarDate` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: DateField, amount: number, options?: CycleOptions): CalendarDate {\n    return cycleDate(this, field, amount, options);\n  }\n\n  /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */\n  toDate(timeZone: string): Date {\n    return toDate(this, timeZone);\n  }\n\n  /** Converts the date to an ISO 8601 formatted string. */\n  toString(): string {\n    return dateToString(this);\n  }\n\n  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n  compare(b: AnyCalendarDate): number {\n    return compareDate(this, b);\n  }\n}\n\n/** A Time represents a clock time without any date components. */\nexport class Time {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n  /** The hour, numbered from 0 to 23. */\n  public readonly hour: number;\n  /** The minute in the hour. */\n  public readonly minute: number;\n  /** The second in the minute. */\n  public readonly second: number;\n  /** The millisecond in the second. */\n  public readonly millisecond: number;\n\n  constructor(\n    hour: number = 0,\n    minute: number = 0,\n    second: number = 0,\n    millisecond: number = 0\n  ) {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond;\n    constrainTime(this);\n  }\n\n  /** Returns a copy of this time. */\n  copy(): Time {\n    return new Time(this.hour, this.minute, this.second, this.millisecond);\n  }\n\n  /** Returns a new `Time` with the given duration added to it. */\n  add(duration: TimeDuration) {\n    return addTime(this, duration);\n  }\n\n  /** Returns a new `Time` with the given duration subtracted from it. */\n  subtract(duration: TimeDuration) {\n    return subtractTime(this, duration);\n  }\n\n  /** Returns a new `Time` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: TimeFields) {\n    return setTime(this, fields);\n  }\n\n  /**\n   * Returns a new `Time` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: TimeField, amount: number, options?: CycleTimeOptions) {\n    return cycleTime(this, field, amount, options);\n  }\n\n  /** Converts the time to an ISO 8601 formatted string. */\n  toString() {\n    return timeToString(this);\n  }\n\n  /** Compares this time with another. A negative result indicates that this time is before the given one, and a positive time indicates that it is after. */\n  compare(b: AnyTime) {\n    return compareTime(this, b);\n  }\n}\n\n/** A CalendarDateTime represents a date and time without a time zone, in a specific calendar system. */\nexport class CalendarDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n  /** The calendar system associated with this date, e.g. Gregorian. */\n  public readonly calendar: Calendar;\n  /** The calendar era for this date, e.g. \"BC\" or \"AD\". */\n  public readonly era: string;\n  /** The year of this date within the era. */\n  public readonly year: number;\n  /**\n   * The month number within the year. Note that some calendar systems such as Hebrew\n   * may have a variable number of months per year. Therefore, month numbers may not\n   * always correspond to the same month names in different years.\n   */\n  public readonly month: number;\n  /** The day number within the month. */\n  public readonly day: number;\n  /** The hour in the day, numbered from 0 to 23. */\n  public readonly hour: number;\n  /** The minute in the hour. */\n  public readonly minute: number;\n  /** The second in the minute. */\n  public readonly second: number;\n  /** The millisecond in the second. */\n  public readonly millisecond: number;\n\n  constructor(year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(era: string, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  /** Returns a copy of this date. */\n  copy(): CalendarDateTime {\n    if (this.era) {\n      return new CalendarDateTime(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new CalendarDateTime(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  /** Returns a new `CalendarDateTime` with the given duration added to it. */\n  add(duration: DateTimeDuration): CalendarDateTime {\n    return add(this, duration);\n  }\n\n  /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */\n  subtract(duration: DateTimeDuration): CalendarDateTime {\n    return subtract(this, duration);\n  }\n\n  /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: DateFields & TimeFields): CalendarDateTime {\n    return set(setTime(this, fields), fields);\n  }\n\n  /**\n   * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions): CalendarDateTime {\n    switch (field) {\n      case 'era':\n      case 'year':\n      case 'month':\n      case 'day':\n        return cycleDate(this, field, amount, options);\n      default:\n        return cycleTime(this, field, amount, options);\n    }\n  }\n\n  /** Converts the date to a native JavaScript Date object in the given time zone. */\n  toDate(timeZone: string, disambiguation?: Disambiguation): Date {\n    return toDate(this, timeZone, disambiguation);\n  }\n\n  /** Converts the date to an ISO 8601 formatted string. */\n  toString(): string {\n    return dateTimeToString(this);\n  }\n\n  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime): number {\n    let res = compareDate(this, b);\n    if (res === 0) {\n      return compareTime(this, toCalendarDateTime(b));\n    }\n\n    return res;\n  }\n}\n\n/** A ZonedDateTime represents a date and time in a specific time zone and calendar system. */\nexport class ZonedDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  #type;\n  /** The calendar system associated with this date, e.g. Gregorian. */\n  public readonly calendar: Calendar;\n  /** The calendar era for this date, e.g. \"BC\" or \"AD\". */\n  public readonly era: string;\n  /** The year of this date within the era. */\n  public readonly year: number;\n  /**\n   * The month number within the year. Note that some calendar systems such as Hebrew\n   * may have a variable number of months per year. Therefore, month numbers may not\n   * always correspond to the same month names in different years.\n   */\n  public readonly month: number;\n  /** The day number within the month. */\n  public readonly day: number;\n  /** The hour in the day, numbered from 0 to 23. */\n  public readonly hour: number;\n  /** The minute in the hour. */\n  public readonly minute: number;\n  /** The second in the minute. */\n  public readonly second: number;\n  /** The millisecond in the second. */\n  public readonly millisecond: number;\n  /** The IANA time zone identifier that this date and time is represented in. */\n  public readonly timeZone: string;\n  /** The UTC offset for this time, in seconds. */\n  public readonly offset: number;\n\n  constructor(year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(era: string, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    let timeZone = args.shift();\n    let offset = args.shift();\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.timeZone = timeZone;\n    this.offset = offset;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  /** Returns a copy of this date. */\n  copy(): ZonedDateTime {\n    if (this.era) {\n      return new ZonedDateTime(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new ZonedDateTime(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  /** Returns a new `ZonedDateTime` with the given duration added to it. */\n  add(duration: DateTimeDuration) {\n    return addZoned(this, duration);\n  }\n\n  /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */\n  subtract(duration: DateTimeDuration) {\n    return subtractZoned(this, duration);\n  }\n\n  /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: DateFields & TimeFields, disambiguation?: Disambiguation) {\n    return setZoned(this, fields, disambiguation);\n  }\n\n  /**\n   * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions) {\n    return cycleZoned(this, field, amount, options);\n  }\n\n  /** Converts the date to a native JavaScript Date object. */\n  toDate() {\n    return zonedToDate(this);\n  }\n\n   /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */\n  toString() {\n    return zonedDateTimeToString(this);\n  }\n\n   /** Converts the date to an ISO 8601 formatted string in UTC. */\n  toAbsoluteString() {\n    return this.toDate().toISOString();\n  }\n\n  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime) {\n    // TODO: Is this a bad idea??\n    return this.toDate().getTime() - toZoned(b, this.timeZone).toDate().getTime();\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyTime, CycleOptions, CycleTimeOptions, DateDuration, DateField, DateFields, DateTimeDuration, Disambiguation, TimeDuration, TimeField, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, toAbsolute, toCalendar, toCalendarDateTime} from './conversion';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst ONE_HOUR = 3600000;\n\nexport function add(date: CalendarDateTime, duration: DateTimeDuration): CalendarDateTime;\nexport function add(date: CalendarDate, duration: DateDuration): CalendarDate;\nexport function add(date: CalendarDate | CalendarDateTime, duration: DateTimeDuration): CalendarDate | CalendarDateTime;\nexport function add(date: CalendarDate | CalendarDateTime, duration: DateTimeDuration) {\n  let mutableDate: Mutable<AnyCalendarDate> = date.copy();\n  let days = 'hour' in date ? addTimeFields(date, duration) : 0;\n\n  addYears(mutableDate, duration.years || 0);\n  if (mutableDate.calendar.balanceYearMonth) {\n    mutableDate.calendar.balanceYearMonth(mutableDate, date);\n  }\n\n  mutableDate.month += duration.months || 0;\n\n  balanceYearMonth(mutableDate);\n  constrainMonthDay(mutableDate);\n\n  mutableDate.day += (duration.weeks || 0) * 7;\n  mutableDate.day += duration.days || 0;\n  mutableDate.day += days;\n\n  balanceDay(mutableDate);\n\n  if (mutableDate.calendar.balanceDate) {\n    mutableDate.calendar.balanceDate(mutableDate);\n  }\n\n  return mutableDate;\n}\n\nfunction addYears(date: Mutable<AnyCalendarDate>, years: number) {\n  if (date.calendar.getYearsToAdd) {\n    years = date.calendar.getYearsToAdd(date, years);\n  }\n\n  date.year += years;\n}\n\nfunction balanceYearMonth(date: Mutable<AnyCalendarDate>) {\n  while (date.month < 1) {\n    addYears(date, -1);\n    date.month += date.calendar.getMonthsInYear(date);\n  }\n\n  let monthsInYear = 0;\n  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {\n    date.month -= monthsInYear;\n    addYears(date, 1);\n  }\n}\n\nfunction balanceDay(date: Mutable<AnyCalendarDate>) {\n  while (date.day < 1) {\n    date.month--;\n    balanceYearMonth(date);\n    date.day += date.calendar.getDaysInMonth(date);\n  }\n\n  while (date.day > date.calendar.getDaysInMonth(date)) {\n    date.day -= date.calendar.getDaysInMonth(date);\n    date.month++;\n    balanceYearMonth(date);\n  }\n}\n\nfunction constrainMonthDay(date: Mutable<AnyCalendarDate>) {\n  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\n\nexport function constrain(date: Mutable<AnyCalendarDate>) {\n  if (date.calendar.constrainDate) {\n    date.calendar.constrainDate(date);\n  }\n\n  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n  constrainMonthDay(date);\n}\n\nexport function invertDuration(duration: DateTimeDuration): DateTimeDuration {\n  let inverseDuration = {};\n  for (let key in duration) {\n    if (typeof duration[key] === 'number') {\n      inverseDuration[key] = -duration[key];\n    }\n  }\n\n  return inverseDuration;\n}\n\nexport function subtract(date: CalendarDateTime, duration: DateTimeDuration): CalendarDateTime;\nexport function subtract(date: CalendarDate, duration: DateDuration): CalendarDate;\nexport function subtract(date: CalendarDate | CalendarDateTime, duration: DateTimeDuration): CalendarDate | CalendarDateTime {\n  return add(date, invertDuration(duration));\n}\n\nexport function set(date: CalendarDateTime, fields: DateFields): CalendarDateTime;\nexport function set(date: CalendarDate, fields: DateFields): CalendarDate;\nexport function set(date: CalendarDate | CalendarDateTime, fields: DateFields) {\n  let mutableDate: Mutable<AnyCalendarDate> = date.copy();\n\n  if (fields.era != null) {\n    mutableDate.era = fields.era;\n  }\n\n  if (fields.year != null) {\n    mutableDate.year = fields.year;\n  }\n\n  if (fields.month != null) {\n    mutableDate.month = fields.month;\n  }\n\n  if (fields.day != null) {\n    mutableDate.day = fields.day;\n  }\n\n  constrain(mutableDate);\n  return mutableDate;\n}\n\nexport function setTime(value: CalendarDateTime, fields: TimeFields): CalendarDateTime;\nexport function setTime(value: Time, fields: TimeFields): Time;\nexport function setTime(value: Time | CalendarDateTime, fields: TimeFields) {\n  let mutableValue: Mutable<Time | CalendarDateTime> = value.copy();\n\n  if (fields.hour != null) {\n    mutableValue.hour = fields.hour;\n  }\n\n  if (fields.minute != null) {\n    mutableValue.minute = fields.minute;\n  }\n\n  if (fields.second != null) {\n    mutableValue.second = fields.second;\n  }\n\n  if (fields.millisecond != null) {\n    mutableValue.millisecond = fields.millisecond;\n  }\n\n  constrainTime(mutableValue);\n  return mutableValue;\n}\n\nfunction balanceTime(time: Mutable<AnyTime>): number {\n  time.second += Math.floor(time.millisecond / 1000);\n  time.millisecond = nonNegativeMod(time.millisecond, 1000);\n\n  time.minute += Math.floor(time.second / 60);\n  time.second = nonNegativeMod(time.second, 60);\n\n  time.hour += Math.floor(time.minute / 60);\n  time.minute = nonNegativeMod(time.minute, 60);\n\n  let days = Math.floor(time.hour / 24);\n  time.hour = nonNegativeMod(time.hour, 24);\n\n  return days;\n}\n\nexport function constrainTime(time: Mutable<AnyTime>) {\n  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n  time.second = Math.max(0, Math.min(time.second, 59));\n  time.minute = Math.max(0, Math.min(time.minute, 59));\n  time.hour = Math.max(0, Math.min(time.hour, 23));\n}\n\nfunction nonNegativeMod(a: number, b: number) {\n  let result = a % b;\n  if (result < 0) {\n    result += b;\n  }\n  return result;\n}\n\nfunction addTimeFields(time: Mutable<AnyTime>, duration: TimeDuration): number {\n  time.hour += duration.hours || 0;\n  time.minute += duration.minutes || 0;\n  time.second += duration.seconds || 0;\n  time.millisecond += duration.milliseconds || 0;\n  return balanceTime(time);\n}\n\nexport function addTime(time: Time, duration: TimeDuration): Time {\n  let res = time.copy();\n  addTimeFields(res, duration);\n  return res;\n}\n\nexport function subtractTime(time: Time, duration: TimeDuration): Time {\n  return addTime(time, invertDuration(duration));\n}\n\nexport function cycleDate(value: CalendarDateTime, field: DateField, amount: number, options?: CycleOptions): CalendarDateTime;\nexport function cycleDate(value: CalendarDate, field: DateField, amount: number, options?: CycleOptions): CalendarDate;\nexport function cycleDate(value: CalendarDate | CalendarDateTime, field: DateField, amount: number, options?: CycleOptions) {\n  let mutable: Mutable<CalendarDate | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'era': {\n      let eras = value.calendar.getEras();\n      let eraIndex = eras.indexOf(value.era);\n      if (eraIndex < 0) {\n        throw new Error('Invalid era: ' + value.era);\n      }\n      eraIndex = cycleValue(eraIndex, amount, 0, eras.length - 1, options?.round);\n      mutable.era = eras[eraIndex];\n\n      // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n      constrain(mutable);\n      break;\n    }\n    case 'year': {\n      if (mutable.calendar.getYearsToAdd) {\n        amount = mutable.calendar.getYearsToAdd(mutable, amount);\n      }\n\n      // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n      // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n      // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n      mutable.year = cycleValue(value.year, amount, -Infinity, 9999, options?.round);\n      if (mutable.year === -Infinity) {\n        mutable.year = 1;\n      }\n\n      if (mutable.calendar.balanceYearMonth) {\n        mutable.calendar.balanceYearMonth(mutable, value);\n      }\n      break;\n    }\n    case 'month':\n      mutable.month = cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options?.round);\n      break;\n    case 'day':\n      mutable.day = cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  if (value.calendar.balanceDate) {\n    value.calendar.balanceDate(mutable);\n  }\n\n  constrain(mutable);\n  return mutable;\n}\n\nexport function cycleTime(value: CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions): CalendarDateTime;\nexport function cycleTime(value: Time, field: TimeField, amount: number, options?: CycleTimeOptions): Time;\nexport function cycleTime(value: Time | CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions) {\n  let mutable: Mutable<Time | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'hour': {\n      let hours = value.hour;\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = hours >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n      mutable.hour = cycleValue(hours, amount, min, max, options?.round);\n      break;\n    }\n    case 'minute':\n      mutable.minute = cycleValue(value.minute, amount, 0, 59, options?.round);\n      break;\n    case 'second':\n      mutable.second = cycleValue(value.second, amount, 0, 59, options?.round);\n      break;\n    case 'millisecond':\n      mutable.millisecond = cycleValue(value.millisecond, amount, 0, 999, options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  return mutable;\n}\n\nfunction cycleValue(value: number, amount: number, min: number, max: number, round = false) {\n  if (round) {\n    value += Math.sign(amount);\n\n    if (value < min) {\n      value = max;\n    }\n\n    let div = Math.abs(amount);\n    if (amount > 0) {\n      value = Math.ceil(value / div) * div;\n    } else {\n      value = Math.floor(value / div) * div;\n    }\n\n    if (value > max) {\n      value = min;\n    }\n  } else {\n    value += amount;\n    if (value < min) {\n      value = max - (min - value - 1);\n    } else if (value > max) {\n      value = min + (value - max - 1);\n    }\n  }\n\n  return value;\n}\n\nexport function addZoned(dateTime: ZonedDateTime, duration: DateTimeDuration): ZonedDateTime {\n  let ms: number;\n  if ((duration.years != null && duration.years !== 0) || (duration.months != null && duration.months !== 0) || (duration.days != null && duration.days !== 0)) {\n    let res = add(toCalendarDateTime(dateTime), {\n      years: duration.years,\n      months: duration.months,\n      days: duration.days\n    });\n\n    // Changing the date may change the timezone offset, so we need to recompute\n    // using the 'compatible' disambiguation.\n    ms = toAbsolute(res, dateTime.timeZone);\n  } else {\n    // Otherwise, preserve the offset of the original date.\n    ms = epochFromDate(dateTime) - dateTime.offset;\n  }\n\n  // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n  // For example, adding one hour during a DST transition may result in the hour field staying the same or\n  // skipping an hour. This results in the offset field changing value instead of the specified field.\n  ms += duration.milliseconds || 0;\n  ms += (duration.seconds || 0) * 1000;\n  ms += (duration.minutes || 0) * 60 * 1000;\n  ms += (duration.hours || 0) * 60 * 60 * 1000;\n\n  let res = fromAbsolute(ms, dateTime.timeZone);\n  return toCalendar(res, dateTime.calendar);\n}\n\nexport function subtractZoned(dateTime: ZonedDateTime, duration: DateTimeDuration): ZonedDateTime {\n  return addZoned(dateTime, invertDuration(duration));\n}\n\nexport function cycleZoned(dateTime: ZonedDateTime, field: DateField | TimeField, amount: number, options?: CycleTimeOptions): ZonedDateTime {\n  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n  switch (field) {\n    case 'hour': {\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = dateTime.hour >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n\n      // The minimum and maximum hour may be affected by daylight saving time.\n      // For example, it might jump forward at midnight, and skip 1am.\n      // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n      // the possible absolute times for the min and max, and find the maximum range\n      // that is within the current day.\n      let plainDateTime = toCalendarDateTime(dateTime);\n      let minDate = toCalendar(setTime(plainDateTime, {hour: min}), new GregorianCalendar());\n      let minAbsolute = [toAbsolute(minDate, dateTime.timeZone, 'earlier'), toAbsolute(minDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === minDate.day)[0];\n\n      let maxDate = toCalendar(setTime(plainDateTime, {hour: max}), new GregorianCalendar());\n      let maxAbsolute = [toAbsolute(maxDate, dateTime.timeZone, 'earlier'), toAbsolute(maxDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === maxDate.day).pop();\n\n      // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n      // This is done in hours from the Unix epoch so that cycleValue works correctly,\n      // and then converted back to milliseconds.\n      let ms = epochFromDate(dateTime) - dateTime.offset;\n      let hours = Math.floor(ms / ONE_HOUR);\n      let remainder = ms % ONE_HOUR;\n      ms = cycleValue(\n        hours,\n        amount,\n        Math.floor(minAbsolute / ONE_HOUR),\n        Math.floor(maxAbsolute / ONE_HOUR),\n        options?.round\n      ) * ONE_HOUR + remainder;\n\n      // Now compute the new timezone offset, and convert the absolute time back to local time.\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    case 'minute':\n    case 'second':\n    case 'millisecond':\n      // @ts-ignore\n      return cycleTime(dateTime, field, amount, options);\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day': {\n      let res = cycleDate(toCalendarDateTime(dateTime), field, amount, options);\n      let ms = toAbsolute(res, dateTime.timeZone);\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n}\n\nexport function setZoned(dateTime: ZonedDateTime, fields: DateFields & TimeFields, disambiguation?: Disambiguation): ZonedDateTime {\n  // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n  let plainDateTime = toCalendarDateTime(dateTime);\n  let res = setTime(set(plainDateTime, fields), fields);\n\n  // If the resulting plain date time values are equal, return the original time.\n  // We don't want to change the offset when setting the time to the same value.\n  if (res.compare(plainDateTime) === 0) {\n    return dateTime;\n  }\n\n  let ms = toAbsolute(res, dateTime.timeZone, disambiguation);\n  return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, AnyDateTime, AnyTime, Calendar, DateFields, Disambiguation, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {getLocalTimeZone} from './queries';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nexport function epochFromDate(date: AnyDateTime) {\n  date = toCalendar(date, new GregorianCalendar());\n  return epochFromParts(date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n}\n\nfunction epochFromParts(year: number, month: number, day: number, hour: number, minute: number, second: number, millisecond: number) {\n  // Note: Date.UTC() interprets one and two-digit years as being in the\n  // 20th century, so don't use it\n  let date = new Date();\n  date.setUTCHours(hour, minute, second, millisecond);\n  date.setUTCFullYear(year, month - 1, day);\n  return date.getTime();\n}\n\nexport function getTimeZoneOffset(ms: number, timeZone: string) {\n  // Fast path: for local timezone, use native Date.\n  if (timeZone === getLocalTimeZone()) {\n    return new Date(ms).getTimezoneOffset() * -60 * 1000;\n  }\n\n  let {year, month, day, hour, minute, second} = getTimeZoneParts(ms, timeZone);\n  let utc = epochFromParts(year, month, day, hour, minute, second, 0);\n  return utc - Math.floor(ms / 1000) * 1000;\n}\n\nconst formattersByTimeZone = new Map<string, Intl.DateTimeFormat>();\n\nfunction getTimeZoneParts(ms: number, timeZone: string) {\n  let formatter = formattersByTimeZone.get(timeZone);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat('en-US', {\n      timeZone,\n      hour12: false,\n      era: 'short',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    });\n\n    formattersByTimeZone.set(timeZone, formatter);\n  }\n\n  let parts = formatter.formatToParts(new Date(ms));\n  let namedParts: {[name: string]: string} = {};\n  for (let part of parts) {\n    if (part.type !== 'literal') {\n      namedParts[part.type] = part.value;\n    }\n  }\n\n  return {\n    year: namedParts.era === 'BC' ? -namedParts.year + 1 : +namedParts.year,\n    month: +namedParts.month,\n    day: +namedParts.day,\n    hour: namedParts.hour === '24' ? 0 : +namedParts.hour, // bugs.chromium.org/p/chromium/issues/detail?id=1045791\n    minute: +namedParts.minute,\n    second: +namedParts.second\n  };\n}\n\nconst DAYMILLIS = 86400000;\n\nexport function possibleAbsolutes(date: CalendarDateTime, timeZone: string): number[] {\n  let ms = epochFromDate(date);\n  let earlier = ms - getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let later = ms - getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  return getValidWallTimes(date, timeZone, earlier, later);\n}\n\nfunction getValidWallTimes(date: CalendarDateTime, timeZone: string, earlier: number, later: number): number[] {\n  let found = earlier === later ? [earlier] : [earlier, later];\n  return found.filter(absolute => isValidWallTime(date, timeZone, absolute));\n}\n\nfunction isValidWallTime(date: CalendarDateTime, timeZone: string, absolute: number) {\n  let parts = getTimeZoneParts(absolute, timeZone);\n  return date.year === parts.year\n    && date.month === parts.month\n    && date.day === parts.day\n    && date.hour === parts.hour\n    && date.minute === parts.minute\n    && date.second === parts.second;\n}\n\nexport function toAbsolute(date: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): number {\n  let dateTime = toCalendarDateTime(date);\n\n  // Fast path: if the time zone is the local timezone and disambiguation is compatible, use native Date.\n  if (timeZone === getLocalTimeZone() && disambiguation === 'compatible') {\n    dateTime = toCalendar(dateTime, new GregorianCalendar());\n\n    // Don't use Date constructor here because two-digit years are interpreted in the 20th century.\n    let date = new Date();\n    date.setFullYear(dateTime.year, dateTime.month - 1, dateTime.day);\n    date.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n    return date.getTime();\n  }\n\n  let ms = epochFromDate(dateTime);\n  let offsetBefore = getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let offsetAfter = getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  let valid = getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);\n\n  if (valid.length === 1) {\n    return valid[0];\n  }\n\n  if (valid.length > 1) {\n    switch (disambiguation) {\n      // 'compatible' means 'earlier' for \"fall back\" transitions\n      case 'compatible':\n      case 'earlier':\n        return valid[0];\n      case 'later':\n        return valid[valid.length - 1];\n      case 'reject':\n        throw new RangeError('Multiple possible absolute times found');\n    }\n  }\n\n  switch (disambiguation) {\n    case 'earlier':\n      return Math.min(ms - offsetBefore, ms - offsetAfter);\n    // 'compatible' means 'later' for \"spring forward\" transitions\n    case 'compatible':\n    case 'later':\n      return Math.max(ms - offsetBefore, ms - offsetAfter);\n    case 'reject':\n      throw new RangeError('No such absolute time found');\n  }\n}\n\nexport function toDate(dateTime: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): Date {\n  return new Date(toAbsolute(dateTime, timeZone, disambiguation));\n}\n\nexport function fromAbsolute(ms: number, timeZone: string): ZonedDateTime {\n  let offset = getTimeZoneOffset(ms, timeZone);\n  let date = new Date(ms + offset);\n  let year = date.getUTCFullYear();\n  let month = date.getUTCMonth() + 1;\n  let day = date.getUTCDate();\n  let hour = date.getUTCHours();\n  let minute = date.getUTCMinutes();\n  let second = date.getUTCSeconds();\n  let millisecond = date.getUTCMilliseconds();\n\n  return new ZonedDateTime(year, month, day, timeZone, offset, hour, minute, second, millisecond);\n}\n\nexport function fromDate(date: Date, timeZone: string): ZonedDateTime {\n  return fromAbsolute(date.getTime(), timeZone);\n}\n\nexport function fromDateToLocal(date: Date): ZonedDateTime {\n  return fromDate(date, getLocalTimeZone());\n}\n\n/** Converts a value with date components such as a `CalendarDateTime` or `ZonedDateTime` into a `CalendarDate`. */\nexport function toCalendarDate(dateTime: AnyCalendarDate): CalendarDate {\n  return new CalendarDate(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);\n}\n\nexport function toDateFields(date: AnyCalendarDate): DateFields {\n  return {\n    era: date.era,\n    year: date.year,\n    month: date.month,\n    day: date.day\n  };\n}\n\nexport function toTimeFields(date: AnyTime): TimeFields {\n  return {\n    hour: date.hour,\n    minute: date.minute,\n    second: date.second,\n    millisecond: date.millisecond\n  };\n}\n\n/**\n * Converts a date value to a `CalendarDateTime`. An optional `Time` value can be passed to set the time\n * of the resulting value, otherwise it will default to midnight.\n */\nexport function toCalendarDateTime(date: CalendarDate | CalendarDateTime | ZonedDateTime, time?: AnyTime): CalendarDateTime {\n  let hour = 0, minute = 0, second = 0, millisecond = 0;\n  if ('timeZone' in date) {\n    ({hour, minute, second, millisecond} = date);\n  } else if ('hour' in date && !time) {\n    return date;\n  }\n\n  if (time) {\n    ({hour, minute, second, millisecond} = time);\n  }\n\n  return new CalendarDateTime(\n    date.calendar,\n    date.era,\n    date.year,\n    date.month,\n    date.day,\n    hour,\n    minute,\n    second,\n    millisecond\n  );\n}\n\n/** Extracts the time components from a value containing a date and time. */\nexport function toTime(dateTime: CalendarDateTime | ZonedDateTime): Time {\n  return new Time(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n}\n\n/** Converts a date from one calendar system to another. */\nexport function toCalendar<T extends AnyCalendarDate>(date: T, calendar: Calendar): T {\n  if (date.calendar.identifier === calendar.identifier) {\n    return date;\n  }\n\n  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));\n  let copy: Mutable<T> = date.copy();\n  copy.calendar = calendar;\n  copy.era = calendarDate.era;\n  copy.year = calendarDate.year;\n  copy.month = calendarDate.month;\n  copy.day = calendarDate.day;\n  return copy;\n}\n\n/**\n * Converts a date value to a `ZonedDateTime` in the provided time zone. The `disambiguation` option can be set\n * to control how values that fall on daylight saving time changes are interpreted.\n */\nexport function toZoned(date: CalendarDate | CalendarDateTime | ZonedDateTime, timeZone: string, disambiguation?: Disambiguation): ZonedDateTime {\n  if (date instanceof ZonedDateTime) {\n    if (date.timeZone === timeZone) {\n      return date;\n    }\n\n    return toTimeZone(date, timeZone);\n  }\n\n  let ms = toAbsolute(date, timeZone, disambiguation);\n  return fromAbsolute(ms, timeZone);\n}\n\nexport function zonedToDate(date: ZonedDateTime) {\n  let ms = epochFromDate(date) - date.offset;\n  return new Date(ms);\n}\n\n/** Converts a `ZonedDateTime` from one time zone to another. */\nexport function toTimeZone(date: ZonedDateTime, timeZone: string): ZonedDateTime {\n  let ms = epochFromDate(date) - date.offset;\n  return toCalendar(fromAbsolute(ms, timeZone), date.calendar);\n}\n\n/** Converts the given `ZonedDateTime` into the user's local time zone. */\nexport function toLocalTimeZone(date: ZonedDateTime): ZonedDateTime {\n  return toTimeZone(date, getLocalTimeZone());\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyTime} from './types';\nimport {CalendarDate, CalendarDateTime, ZonedDateTime} from './CalendarDate';\nimport {fromAbsolute, toAbsolute, toCalendar, toCalendarDate} from './conversion';\nimport {weekStartData} from './weekStartData';\n\ntype DateValue = CalendarDate | CalendarDateTime | ZonedDateTime;\n\n/** Returns whether the given dates occur on the same day, regardless of the time or calendar system. */\nexport function isSameDay(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\n/** Returns whether the given dates occur in the same month, using the calendar system of the first date. */\nexport function isSameMonth(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  // In the Japanese calendar, months can span multiple eras/years, so only compare the first of the month.\n  a = startOfMonth(a);\n  b = startOfMonth(b);\n  return a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\n/** Returns whether the given dates occur in the same year, using the calendar system of the first date. */\nexport function isSameYear(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  a = startOfYear(a);\n  b = startOfYear(b);\n  return a.era === b.era && a.year === b.year;\n}\n\n/** Returns whether the given dates occur on the same day, and are of the same calendar system. */\nexport function isEqualDay(a: DateValue, b: DateValue): boolean {\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\n/** Returns whether the given dates occur in the same month, and are of the same calendar system. */\nexport function isEqualMonth(a: DateValue, b: DateValue): boolean {\n  a = startOfMonth(a);\n  b = startOfMonth(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\n/** Returns whether the given dates occur in the same year, and are of the same calendar system. */\nexport function isEqualYear(a: DateValue, b: DateValue): boolean {\n  a = startOfYear(a);\n  b = startOfYear(b);\n  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year;\n}\n\n/** Returns whether the date is today in the given time zone. */\nexport function isToday(date: DateValue, timeZone: string): boolean {\n  return isSameDay(date, today(timeZone));\n}\n\n/**\n * Returns the day of week for the given date and locale. Days are numbered from zero to six,\n * where zero is the first day of the week in the given locale. For example, in the United States,\n * the first day of the week is Sunday, but in France it is Monday.\n */\nexport function getDayOfWeek(date: DateValue, locale: string): number {\n  let julian = date.calendar.toJulianDay(date);\n\n  // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n  let dayOfWeek = Math.ceil(julian + 1 - getWeekStart(locale)) % 7;\n  if (dayOfWeek < 0) {\n    dayOfWeek += 7;\n  }\n\n  return dayOfWeek;\n}\n\n/** Returns the current time in the given time zone. */\nexport function now(timeZone: string): ZonedDateTime {\n  return fromAbsolute(Date.now(), timeZone);\n}\n\n/** Returns today's date in the given time zone. */\nexport function today(timeZone: string): CalendarDate {\n  return toCalendarDate(now(timeZone));\n}\n\nexport function compareDate(a: AnyCalendarDate, b: AnyCalendarDate): number {\n  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);\n}\n\nexport function compareTime(a: AnyTime, b: AnyTime): number {\n  return timeToMs(a) - timeToMs(b);\n}\n\nfunction timeToMs(a: AnyTime): number {\n  return a.hour * 60 * 60 * 1000 + a.minute * 60 * 1000 + a.second * 1000 + a.millisecond;\n}\n\n/**\n * Returns the number of hours in the given date and time zone.\n * Usually this is 24, but it could be 23 or 25 if the date is on a daylight saving transition.\n */\nexport function getHoursInDay(a: CalendarDate, timeZone: string): number {\n  let ms = toAbsolute(a, timeZone);\n  let tomorrow = a.add({days: 1});\n  let tomorrowMs = toAbsolute(tomorrow, timeZone);\n  return (tomorrowMs - ms) / 3600000;\n}\n\nlet localTimeZone = null;\n\n/** Returns the time zone identifier for the current user. */\nexport function getLocalTimeZone(): string {\n  // TODO: invalidate this somehow?\n  if (localTimeZone == null) {\n    localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  return localTimeZone;\n}\n\n/** Returns the first date of the month for the given date. */\nexport function startOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function startOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function startOfMonth(date: CalendarDate): CalendarDate;\nexport function startOfMonth(date: DateValue): DateValue;\nexport function startOfMonth(date: DateValue): DateValue {\n  // Use `subtract` instead of `set` so we don't get constrained in an era.\n  return date.subtract({days: date.day - 1});\n}\n\n/** Returns the last date of the month for the given date. */\nexport function endOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function endOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function endOfMonth(date: CalendarDate): CalendarDate;\nexport function endOfMonth(date: DateValue): DateValue;\nexport function endOfMonth(date: DateValue): DateValue {\n  return date.add({days: date.calendar.getDaysInMonth(date) - date.day});\n}\n\n/** Returns the first day of the year for the given date. */\nexport function startOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function startOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function startOfYear(date: CalendarDate): CalendarDate;\nexport function startOfYear(date: DateValue): DateValue;\nexport function startOfYear(date: DateValue): DateValue {\n  return startOfMonth(date.subtract({months: date.month - 1}));\n}\n\n/** Returns the last day of the year for the given date. */\nexport function endOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function endOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function endOfYear(date: CalendarDate): CalendarDate;\nexport function endOfYear(date: DateValue): DateValue;\nexport function endOfYear(date: DateValue): DateValue {\n  return endOfMonth(date.add({months: date.calendar.getMonthsInYear(date) - date.month}));\n}\n\nexport function getMinimumMonthInYear(date: AnyCalendarDate) {\n  if (date.calendar.getMinimumMonthInYear) {\n    return date.calendar.getMinimumMonthInYear(date);\n  }\n\n  return 1;\n}\n\nexport function getMinimumDayInMonth(date: AnyCalendarDate) {\n  if (date.calendar.getMinimumDayInMonth) {\n    return date.calendar.getMinimumDayInMonth(date);\n  }\n\n  return 1;\n}\n\n/** Returns the first date of the week for the given date and locale. */\nexport function startOfWeek(date: ZonedDateTime, locale: string): ZonedDateTime;\nexport function startOfWeek(date: CalendarDateTime, locale: string): CalendarDateTime;\nexport function startOfWeek(date: CalendarDate, locale: string): CalendarDate;\nexport function startOfWeek(date: DateValue, locale: string): DateValue;\nexport function startOfWeek(date: DateValue, locale: string): DateValue {\n  let dayOfWeek = getDayOfWeek(date, locale);\n  return date.subtract({days: dayOfWeek});\n}\n\n/** Returns the last date of the week for the given date and locale. */\nexport function endOfWeek(date: ZonedDateTime, locale: string): ZonedDateTime;\nexport function endOfWeek(date: CalendarDateTime, locale: string): CalendarDateTime;\nexport function endOfWeek(date: CalendarDate, locale: string): CalendarDate;\nexport function endOfWeek(date: DateValue, locale: string): DateValue {\n  return startOfWeek(date, locale).add({days: 6});\n}\n\nconst cachedRegions = new Map<string, string>();\n\nfunction getRegion(locale: string) {\n  // If the Intl.Locale API is available, use it to get the region for the locale.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // Constructing an Intl.Locale is expensive, so cache the result.\n    let region = cachedRegions.get(locale);\n    if (!region) {\n      // @ts-ignore\n      region = new Intl.Locale(locale).maximize().region;\n      cachedRegions.set(locale, region);\n    }\n    return region;\n  }\n\n  // If not, just try splitting the string.\n  // If the second part of the locale string is 'u',\n  // then this is a unicode extension, so ignore it.\n  // Otherwise, it should be the region.\n  let part = locale.split('-')[1];\n  return part === 'u' ? null : part;\n}\n\nfunction getWeekStart(locale: string) {\n  // TODO: use Intl.Locale for this once browsers support the weekInfo property\n  // https://github.com/tc39/proposal-intl-locale-info\n  let region = getRegion(locale);\n  return weekStartData[region] || 0;\n}\n\n/** Returns the number of weeks in the given month and locale. */\nexport function getWeeksInMonth(date: DateValue, locale: string): number {\n  let days = date.calendar.getDaysInMonth(date);\n  return Math.ceil((getDayOfWeek(startOfMonth(date), locale) + days) / 7);\n}\n\n/** Returns the lesser of the two provider dates. */\nexport function minDate<A extends DateValue, B extends DateValue>(a: A, b: B): A | B {\n  if (a && b) {\n    return a.compare(b) <= 0 ? a : b;\n  }\n\n  return a || b;\n}\n\n/** Returns the greater of the two provider dates. */\nexport function maxDate<A extends DateValue, B extends DateValue>(a: A, b: B): A | B {\n  if (a && b) {\n    return a.compare(b) >= 0 ? a : b;\n  }\n\n  return a || b;\n}\n\nconst WEEKEND_DATA = {\n  AF: [4, 5],\n  AE: [5, 6],\n  BH: [5, 6],\n  DZ: [5, 6],\n  EG: [5, 6],\n  IL: [5, 6],\n  IQ: [5, 6],\n  IR: [5, 5],\n  JO: [5, 6],\n  KW: [5, 6],\n  LY: [5, 6],\n  OM: [5, 6],\n  QA: [5, 6],\n  SA: [5, 6],\n  SD: [5, 6],\n  SY: [5, 6],\n  YE: [5, 6]\n};\n\n/** Returns whether the given date is on a weekend in the given locale. */\nexport function isWeekend(date: DateValue, locale: string): boolean {\n  let julian = date.calendar.toJulianDay(date);\n\n  // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n  let dayOfWeek = Math.ceil(julian + 1) % 7;\n  if (dayOfWeek < 0) {\n    dayOfWeek += 7;\n  }\n\n  let region = getRegion(locale);\n  // Use Intl.Locale for this once weekInfo is supported.\n  // https://github.com/tc39/proposal-intl-locale-info\n  let [start, end] = WEEKEND_DATA[region] || [6, 0];\n  return dayOfWeek === start || dayOfWeek === end;\n}\n\n/** Returns whether the given date is on a weekday in the given locale. */\nexport function isWeekday(date: DateValue, locale: string): boolean {\n  return !isWeekend(date, locale);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Data from https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/weekData.json\n// Locales starting on Sunday have been removed for compression.\nexport const weekStartData = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AT: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BY: 1,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  HR: 1,\n  HU: 1,\n  IE: 1,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JO: 6,\n  KG: 1,\n  KW: 6,\n  KZ: 1,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MK: 1,\n  MN: 1,\n  MQ: 1,\n  MV: 5,\n  MY: 1,\n  NL: 1,\n  NO: 1,\n  NZ: 1,\n  OM: 6,\n  PL: 1,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SD: 6,\n  SE: 1,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SY: 6,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  UA: 1,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VN: 1,\n  XK: 1\n};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst EPOCH = 1721426; // 001/01/03 Julian C.E.\nexport function gregorianToJulianDay(era: string, year: number, month: number, day: number): number {\n  year = getExtendedYear(era, year);\n\n  let y1 = year - 1;\n  let monthOffset = -2;\n  if (month <= 2) {\n    monthOffset = 0;\n  } else if (isLeapYear(year)) {\n    monthOffset = -1;\n  }\n\n  return (\n    EPOCH -\n    1 +\n    365 * y1 +\n    Math.floor(y1 / 4) -\n    Math.floor(y1 / 100) +\n    Math.floor(y1 / 400) +\n    Math.floor((367 * month - 362) / 12 + monthOffset + day)\n  );\n}\n\nexport function isLeapYear(year: number): boolean {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function getExtendedYear(era: string, year: number): number {\n  return era === 'BC' ? 1 - year : year;\n}\n\nexport function fromExtendedYear(year: number): [string, number] {\n  let era = 'AD';\n  if (year <= 0) {\n    era = 'BC';\n    year = 1 - year;\n  }\n\n  return [era, year];\n}\n\nconst daysInMonth = {\n  standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n  leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n};\n\n/**\n * The Gregorian calendar is the most commonly used calendar system in the world. It supports two eras: BC, and AD.\n * Years always contain 12 months, and 365 or 366 days depending on whether it is a leap year.\n */\nexport class GregorianCalendar implements Calendar {\n  identifier = 'gregory';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let jd0 = jd;\n    let depoch = jd0 - EPOCH;\n    let quadricent = Math.floor(depoch / 146097);\n    let dqc = mod(depoch, 146097);\n    let cent = Math.floor(dqc / 36524);\n    let dcent = mod(dqc, 36524);\n    let quad = Math.floor(dcent / 1461);\n    let dquad = mod(dcent, 1461);\n    let yindex = Math.floor(dquad / 365);\n\n    let extendedYear = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);\n    let [era, year] = fromExtendedYear(extendedYear);\n    let yearDay = jd0 - gregorianToJulianDay(era, year, 1, 1);\n    let leapAdj = 2;\n    if (jd0 < gregorianToJulianDay(era, year, 3, 1)) {\n      leapAdj = 0;\n    } else if (isLeapYear(year)) {\n      leapAdj = 1;\n    }\n    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);\n    let day = jd0 - gregorianToJulianDay(era, year, month, 1) + 1;\n\n    return new CalendarDate(era, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return gregorianToJulianDay(date.era, date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return daysInMonth[isLeapYear(date.year) ? 'leapyear' : 'standard'][date.month - 1];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 366 : 365;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getYearsInEra(date: AnyCalendarDate): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['BC', 'AD'];\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'BC' ? -years : years;\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    if (date.year <= 0) {\n      date.era = date.era === 'BC' ? 'AD' : 'BC';\n      date.year = 1 - date.year;\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, CalendarDateTime} from './CalendarDate';\n\nexport type Mutable<T> = {\n  -readonly[P in keyof T]: T[P]\n};\n\nexport function mod(amount: number, numerator: number): number {\n  return amount - numerator * Math.floor(amount / numerator);\n}\n\nexport function copy(date: CalendarDate): Mutable<CalendarDate> {\n  if (date.era) {\n    return new CalendarDate(date.calendar, date.era, date.year, date.month, date.day);\n  } else {\n    return new CalendarDate(date.calendar, date.year, date.month, date.day);\n  }\n}\n\nexport function copyDateTime(date: CalendarDateTime): Mutable<CalendarDateTime> {\n  if (date.era) {\n    return new CalendarDateTime(date.calendar, date.era, date.year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n  } else {\n    return new CalendarDateTime(date.calendar, date.year, date.month, date.day, date.hour, date.minute, date.second);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyDateTime, Disambiguation} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, possibleAbsolutes, toAbsolute, toCalendar, toCalendarDateTime, toTimeZone} from './conversion';\nimport {getLocalTimeZone} from './queries';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst TIME_RE = /^(\\d{2})(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst DATE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nconst DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst ZONED_DATE_TIME_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:([+-]\\d{2})(?::(\\d{2}))?)?\\[(.*?)\\]$/;\nconst ABSOLUTE_RE = /^(\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:(?:([+-]\\d{2})(?::(\\d{2}))?)|Z)$/;\n\n/** Parses an ISO 8601 time string. */\nexport function parseTime(value: string): Time {\n  let m = value.match(TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 time string: ' + value);\n  }\n\n  return new Time(\n    parseNumber(m[1], 0, 23),\n    m[2] ? parseNumber(m[2], 0, 59) : 0,\n    m[3] ? parseNumber(m[3], 0, 59) : 0,\n    m[4] ? parseNumber(m[4], 0, Infinity) * 1000 : 0\n  );\n}\n\n/** Parses an ISO 8601 date string, with no time components. */\nexport function parseDate(value: string): CalendarDate {\n  let m = value.match(DATE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date string: ' + value);\n  }\n\n  let date: Mutable<CalendarDate> = new CalendarDate(\n    parseNumber(m[1], 0, 9999),\n    parseNumber(m[2], 1, 12),\n    1\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date as CalendarDate;\n}\n\n/** Parses an ISO 8601 date and time string, with no time zone. */\nexport function parseDateTime(value: string): CalendarDateTime {\n  let m = value.match(DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<CalendarDateTime> = new CalendarDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date as CalendarDateTime;\n}\n\n/**\n * Parses an ISO 8601 date and time string with a time zone extension and optional UTC offset\n * (e.g. \"2021-11-07T00:45[America/Los_Angeles]\" or \"2021-11-07T00:45-07:00[America/Los_Angeles]\").\n * Ambiguous times due to daylight saving time transitions are resolved according to the `disambiguation`\n * parameter.\n */\nexport function parseZonedDateTime(value: string, disambiguation?: Disambiguation): ZonedDateTime {\n  let m = value.match(ZONED_DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    m[10],\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  let plainDateTime = toCalendarDateTime(date as ZonedDateTime);\n\n  let ms: number;\n  if (m[8]) {\n    date.offset = parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000;\n    ms = epochFromDate(date as ZonedDateTime) - date.offset;\n\n    // Validate offset against parsed date.\n    let absolutes = possibleAbsolutes(plainDateTime, date.timeZone);\n    if (!absolutes.includes(ms)) {\n      throw new Error(`Offset ${offsetToString(date.offset)} is invalid for ${dateTimeToString(date)} in ${date.timeZone}`);\n    }\n  } else {\n    // Convert to absolute and back to fix invalid times due to DST.\n    ms = toAbsolute(toCalendarDateTime(plainDateTime), date.timeZone, disambiguation);\n  }\n\n  return fromAbsolute(ms, date.timeZone);\n}\n\n/**\n * Parses an ISO 8601 date and time string with a UTC offset (e.g. \"2021-11-07T07:45:00Z\"\n * or \"2021-11-07T07:45:00-07:00\"). The result is converted to the provided time zone.\n */\nexport function parseAbsolute(value: string, timeZone: string): ZonedDateTime {\n  let m = value.match(ABSOLUTE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    parseNumber(m[1], 1, 9999),\n    parseNumber(m[2], 1, 12),\n    1,\n    timeZone,\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  if (m[8]) {\n    date.offset = parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000;\n  }\n\n  return toTimeZone(date as ZonedDateTime, timeZone);\n}\n\n/**\n * Parses an ISO 8601 date and time string with a UTC offset (e.g. \"2021-11-07T07:45:00Z\"\n * or \"2021-11-07T07:45:00-07:00\"). The result is converted to the user's local time zone.\n */\nexport function parseAbsoluteToLocal(value: string): ZonedDateTime {\n  return parseAbsolute(value, getLocalTimeZone());\n}\n\nfunction parseNumber(value: string, min: number, max: number) {\n  let val = Number(value);\n  if (val < min || val > max) {\n    throw new RangeError(`Value out of range: ${min} <= ${val} <= ${max}`);\n  }\n\n  return val;\n}\n\nexport function timeToString(time: Time): string {\n  return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(time.second).padStart(2, '0')}${time.millisecond ? String(time.millisecond / 1000).slice(1) : ''}`;\n}\n\nexport function dateToString(date: CalendarDate): string {\n  let gregorianDate = toCalendar(date, new GregorianCalendar());\n  return `${String(gregorianDate.year).padStart(4, '0')}-${String(gregorianDate.month).padStart(2, '0')}-${String(gregorianDate.day).padStart(2, '0')}`;\n}\n\nexport function dateTimeToString(date: AnyDateTime): string {\n  // @ts-ignore\n  return `${dateToString(date)}T${timeToString(date)}`;\n}\n\nfunction offsetToString(offset: number) {\n  let sign = Math.sign(offset) < 0 ? '-' : '+';\n  offset = Math.abs(offset);\n  let offsetHours = Math.floor(offset / (60 * 60 * 1000));\n  let offsetMinutes = (offset % (60 * 60 * 1000)) / (60 * 1000);\n  return `${sign}${String(offsetHours).padStart(2, '0')}:${String(offsetMinutes).padStart(2, '0')}`;\n}\n\nexport function zonedDateTimeToString(date: ZonedDateTime): string {\n  return `${dateTimeToString(date)}${offsetToString(date.offset)}[${date.timeZone}]`;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst ERA_START_DATES = [[1868, 9, 8], [1912, 7, 30], [1926, 12, 25], [1989, 1, 8], [2019, 5, 1]];\nconst ERA_END_DATES = [[1912, 7, 29], [1926, 12, 24], [1989, 1, 7], [2019, 4, 30]];\nconst ERA_ADDENDS = [1867, 1911, 1925, 1988, 2018];\nconst ERA_NAMES = ['meiji', 'taisho', 'showa', 'heisei', 'reiwa'];\n\nfunction findEraFromGregorianDate(date: AnyCalendarDate) {\n  const idx = ERA_START_DATES.findIndex(([year, month, day]) => {\n    if (date.year < year) {\n      return true;\n    }\n\n    if (date.year === year && date.month < month) {\n      return true;\n    }\n\n    if (date.year === year && date.month === month && date.day < day) {\n      return true;\n    }\n\n    return false;\n  });\n\n  if (idx === -1) {\n    return ERA_START_DATES.length - 1;\n  }\n\n  if (idx === 0) {\n    return 0;\n  }\n\n  return idx - 1;\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let eraAddend = ERA_ADDENDS[ERA_NAMES.indexOf(date.era)];\n  if (!eraAddend) {\n    throw new Error('Unknown era: ' + date.era);\n  }\n\n  return new CalendarDate(\n    date.year + eraAddend,\n    date.month,\n    date.day\n  );\n}\n\n/**\n * The Japanese calendar is based on the Gregorian calendar, but with eras for the reign of each Japanese emperor.\n * Whenever a new emperor ascends to the throne, a new era begins and the year starts again from 1.\n * Note that eras before 1868 (Gregorian) are not currently supported by this implementation.\n */\nexport class JapaneseCalendar extends GregorianCalendar {\n  identifier = 'japanese';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd);\n    let era = findEraFromGregorianDate(date);\n\n    return new CalendarDate(\n      this,\n      ERA_NAMES[era],\n      date.year - ERA_ADDENDS[era],\n      date.month,\n      date.day\n    );\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    let gregorianDate = toGregorian(date);\n    let era = findEraFromGregorianDate(gregorianDate);\n\n    if (ERA_NAMES[era] !== date.era) {\n      date.era = ERA_NAMES[era];\n      date.year = gregorianDate.year - ERA_ADDENDS[era];\n    }\n\n    // Constrain in case we went before the first supported era.\n    this.constrainDate(date);\n  }\n\n  constrainDate(date: Mutable<AnyCalendarDate>) {\n    let idx = ERA_NAMES.indexOf(date.era);\n    let end = ERA_END_DATES[idx];\n    if (end != null) {\n      let [endYear, endMonth, endDay] = end;\n\n      // Constrain the year to the maximum possible value in the era.\n      // Then constrain the month and day fields within that.\n      let maxYear = endYear - ERA_ADDENDS[idx];\n      date.year = Math.max(1, Math.min(maxYear, date.year));\n      if (date.year === maxYear) {\n        date.month = Math.min(endMonth, date.month);\n\n        if (date.month === endMonth) {\n          date.day = Math.min(endDay, date.day);\n        }\n      }\n\n      if (date.year === 1) {\n        let [, startMonth, startDay] = ERA_START_DATES[idx];\n        date.month = Math.max(startMonth, date.month);\n\n        if (date.month === startMonth) {\n          date.day = Math.max(startDay, date.day);\n        }\n      }\n    }\n  }\n\n  getEras() {\n    return ERA_NAMES;\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    // Get the number of years in the era, taking into account the date's month and day fields.\n    let era = ERA_NAMES.indexOf(date.era);\n    let next = ERA_START_DATES[era + 1];\n    if (next == null) {\n      return 9999;\n    }\n\n    let cur = ERA_START_DATES[era];\n    let years = next[0] - cur[0];\n\n    if (date.month < next[1] || (date.month === next[1] && date.day < next[2])) {\n      years++;\n    }\n\n    return years;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return super.getDaysInMonth(toGregorian(date));\n  }\n\n  getMinimumMonthInYear(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start ? start[1] : 1;\n  }\n\n  getMinimumDayInMonth(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start && date.month === start[1] ? start[2] : 1;\n  }\n}\n\nfunction getMinimums(date: AnyCalendarDate) {\n  if (date.year === 1) {\n    let idx = ERA_NAMES.indexOf(date.era);\n    return ERA_START_DATES[idx];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {fromExtendedYear, getExtendedYear, GregorianCalendar} from './GregorianCalendar';\n\nconst BUDDHIST_ERA_START = -543;\n\n/**\n * The Buddhist calendar is the same as the Gregorian calendar, but counts years\n * starting from the birth of Buddha in 543 BC (Gregorian). It supports only one\n * era, identified as 'BE'.\n */\nexport class BuddhistCalendar extends GregorianCalendar {\n  identifier = 'buddhist';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let gregorianDate = super.fromJulianDay(jd);\n    let year = getExtendedYear(gregorianDate.era, gregorianDate.year);\n    return new CalendarDate(\n      this,\n      year - BUDDHIST_ERA_START,\n      gregorianDate.month,\n      gregorianDate.day\n    );\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  getEras() {\n    return ['BE'];\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return super.getDaysInMonth(toGregorian(date));\n  }\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let [era, year] = fromExtendedYear(date.year + BUDDHIST_ERA_START);\n  return new CalendarDate(\n    era,\n    year,\n    date.month,\n    date.day\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {fromExtendedYear, getExtendedYear, GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst TAIWAN_ERA_START = 1911;\n\nfunction gregorianYear(date: AnyCalendarDate) {\n  return date.era === 'minguo'\n    ? date.year + TAIWAN_ERA_START\n    : 1 - date.year + TAIWAN_ERA_START;\n}\n\nfunction gregorianToTaiwan(year: number): [string, number] {\n  let y = year - TAIWAN_ERA_START;\n  if (y > 0) {\n    return ['minguo', y];\n  } else {\n    return ['before_minguo', 1 - y];\n  }\n}\n\n/**\n * The Taiwanese calendar is the same as the Gregorian calendar, but years\n * are numbered starting from 1912 (Gregorian). Two eras are supported:\n * 'before_minguo' and 'minguo'.\n */\nexport class TaiwanCalendar extends GregorianCalendar {\n  identifier = 'roc'; // Republic of China\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd);\n    let extendedYear = getExtendedYear(date.era, date.year);\n    let [era, year] = gregorianToTaiwan(extendedYear);\n    return new CalendarDate(this, era, year, date.month, date.day);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  getEras() {\n    return ['before_minguo', 'minguo'];\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>) {\n    let [era, year] = gregorianToTaiwan(gregorianYear(date));\n    date.era = era;\n    date.year = year;\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'before_minguo' ? -years : years;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return super.getDaysInMonth(toGregorian(date));\n  }\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let [era, year] = fromExtendedYear(gregorianYear(date));\n  return new CalendarDate(\n    era,\n    year,\n    date.month,\n    date.day\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod} from '../utils';\n\nconst PERSIAN_EPOCH = 1948321; // 622/03/19 Julian C.E.\n\nfunction isLeapYear(year: number): boolean {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = mod(y0, 2820) + 474;\n\n  return mod((y1 + 38) * 31, 128) < 31;\n}\n\nfunction persianToJulianDay(year: number, month: number, day: number): number {\n  let y0 = year > 0 ? year - 474 : year - 473;\n  let y1 = mod(y0, 2820) + 474;\n  let offset = month <= 7 ? 31 * (month - 1) : 30 * (month - 1) + 6;\n\n  return (\n    PERSIAN_EPOCH -\n    1 +\n    1029983 * Math.floor(y0 / 2820) +\n    365 * (y1 - 1) +\n    Math.floor((31 * y1 - 5) / 128) +\n    offset +\n    day\n  );\n}\n\n/**\n * The Persian calendar is the main calendar used in Iran and Afghanistan. It has 12 months\n * in each year, the first 6 of which have 31 days, and the next 5 have 30 days. The 12th month\n * has either 29 or 30 days depending on whether it is a leap year. The Persian year starts\n * around the March equinox.\n */\nexport class PersianCalendar implements Calendar {\n  identifier = 'persian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let d0 = jd - persianToJulianDay(475, 1, 1);\n    let n2820 = Math.floor(d0 / 1029983);\n    let d1 = mod(d0, 1029983);\n    let y2820 = d1 === 1029982 ? 2820 : Math.floor((128 * d1 + 46878) / 46751);\n    let year = 474 + 2820 * n2820 + y2820;\n    if (year <= 0) {\n      year--;\n    }\n\n    let yDay = jd - persianToJulianDay(year, 1, 1) + 1;\n    let month = yDay <= 186 ? Math.ceil(yDay / 31) : Math.ceil((yDay - 6) / 31);\n    let day = jd - persianToJulianDay(year, month, 1) + 1;\n\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return persianToJulianDay(date.year, date.month, date.day);\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month <= 6) {\n      return 31;\n    }\n\n    if (date.month <= 11) {\n      return 30;\n    }\n\n    return isLeapYear(date.year) ? 30 : 29;\n  }\n\n  getEras() {\n    return ['AP'];\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {fromExtendedYear, GregorianCalendar, gregorianToJulianDay, isLeapYear} from './GregorianCalendar';\n\n// Starts in 78 AD,\nconst INDIAN_ERA_START = 78;\n\n// The Indian year starts 80 days later than the Gregorian year.\nconst INDIAN_YEAR_START = 80;\n\n/**\n * The Indian National Calendar is similar to the Gregorian calendar, but with\n * years numbered since the Saka era in 78 AD (Gregorian). There are 12 months\n * in each year, with either 30 or 31 days. Only one era identifier is supported: 'saka'.\n */\nexport class IndianCalendar extends GregorianCalendar {\n  identifier = 'indian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    // Gregorian date for Julian day\n    let date = super.fromJulianDay(jd);\n\n    // Year in Saka era\n    let indianYear = date.year - INDIAN_ERA_START;\n\n    // Day number in Gregorian year (starting from 0)\n    let yDay = jd - gregorianToJulianDay(date.era, date.year, 1, 1);\n\n    let leapMonth: number;\n    if (yDay < INDIAN_YEAR_START) {\n      //  Day is at the end of the preceding Saka year\n      indianYear--;\n\n      // Days in leapMonth this year, previous Gregorian year\n      leapMonth = isLeapYear(date.year - 1) ? 31 : 30;\n      yDay += leapMonth + (31 * 5) + (30 * 3) + 10;\n    } else {\n      // Days in leapMonth this year\n      leapMonth = isLeapYear(date.year) ? 31 : 30;\n      yDay -= INDIAN_YEAR_START;\n    }\n\n    let indianMonth: number;\n    let indianDay: number;\n    if (yDay < leapMonth) {\n      indianMonth = 1;\n      indianDay = yDay + 1;\n    } else {\n      let mDay = yDay - leapMonth;\n      if (mDay < (31 * 5)) {\n        indianMonth = Math.floor(mDay / 31) + 2;\n        indianDay = (mDay % 31) + 1;\n      } else {\n        mDay -= 31 * 5;\n        indianMonth = Math.floor(mDay / 30) + 7;\n        indianDay = (mDay % 30) + 1;\n      }\n    }\n\n    return new CalendarDate(this, indianYear, indianMonth, indianDay);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let extendedYear = date.year + INDIAN_ERA_START;\n    let [era, year] = fromExtendedYear(extendedYear);\n\n    let leapMonth: number;\n    let jd: number;\n    if (isLeapYear(year)) {\n      leapMonth = 31;\n      jd = gregorianToJulianDay(era, year, 3, 21);\n    } else {\n      leapMonth = 30;\n      jd = gregorianToJulianDay(era, year, 3, 22);\n    }\n\n    if (date.month === 1) {\n      return jd + date.day - 1;\n    }\n\n    jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n\n    if (date.month >= 8) {\n      jd += (date.month - 7) * 30;\n    }\n\n    jd += date.day - 1;\n    return jd;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month === 1 && isLeapYear(date.year + INDIAN_ERA_START)) {\n      return 31;\n    }\n\n    if (date.month >= 2 && date.month <= 6) {\n      return 31;\n    }\n\n    return 30;\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['saka'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\n\nconst CIVIL_EPOC = 1948440; // CE 622 July 16 Friday (Julian calendar) / CE 622 July 19 (Gregorian calendar)\nconst ASTRONOMICAL_EPOC = 1948439; // CE 622 July 15 Thursday (Julian calendar)\nconst UMALQURA_YEAR_START = 1300;\nconst UMALQURA_YEAR_END = 1600;\nconst UMALQURA_START_DAYS = 460322;\n\nfunction islamicToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return day +\n    Math.ceil(29.5 * (month - 1)) +\n    (year - 1) * 354 +\n    Math.floor((3 + 11 * year) / 30) +\n    epoch - 1;\n}\n\nfunction julianDayToIslamic(calendar: Calendar, epoch: number, jd: number) {\n  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);\n  let month = Math.min(12, Math.ceil((jd - (29 + islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);\n  let day = jd - islamicToJulianDay(epoch, year, month, 1) + 1;\n\n  return new CalendarDate(calendar, year, month, day);\n}\n\nfunction isLeapYear(year: number): boolean {\n  return (14 + 11 * year) % 30 < 11;\n}\n\n/**\n * The Islamic calendar, also known as the \"Hijri\" calendar, is used throughout much of the Arab world.\n * The civil variant uses simple arithmetic rules rather than astronomical calculations to approximate\n * the traditional calendar, which is based on sighting of the crescent moon. It uses Friday, July 16 622 CE (Julian) as the epoch.\n * Each year has 12 months, with either 354 or 355 days depending on whether it is a leap year.\n * Learn more about the available Islamic calendars [here](https://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types).\n */\nexport class IslamicCivilCalendar implements Calendar {\n  identifier = 'islamic-civil';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, CIVIL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return islamicToJulianDay(CIVIL_EPOC, date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let length = 29 + date.month % 2;\n    if (date.month === 12 && isLeapYear(date.year)) {\n      length++;\n    }\n\n    return length;\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 355 : 354;\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AH'];\n  }\n}\n\n/**\n * The Islamic calendar, also known as the \"Hijri\" calendar, is used throughout much of the Arab world.\n * The tabular variant uses simple arithmetic rules rather than astronomical calculations to approximate\n * the traditional calendar, which is based on sighting of the crescent moon. It uses Thursday, July 15 622 CE (Julian) as the epoch.\n * Each year has 12 months, with either 354 or 355 days depending on whether it is a leap year.\n * Learn more about the available Islamic calendars [here](https://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types).\n */\nexport class IslamicTabularCalendar extends IslamicCivilCalendar {\n  identifier = 'islamic-tbla';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, ASTRONOMICAL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    return islamicToJulianDay(ASTRONOMICAL_EPOC, date.year, date.month, date.day);\n  }\n}\n\n// Generated by scripts/generate-umalqura.js\nconst UMALQURA_DATA = 'qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=';\nlet UMALQURA_MONTHLENGTH: Uint16Array;\nlet UMALQURA_YEAR_START_TABLE: Uint32Array;\n\nfunction umalquraYearStart(year: number): number {\n  return UMALQURA_START_DAYS + UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\nfunction umalquraMonthLength(year: number, month: number): number {\n  let idx = (year - UMALQURA_YEAR_START);\n  let mask = (0x01 << (11 - (month - 1)));\n  if ((UMALQURA_MONTHLENGTH[idx] & mask) === 0) {\n    return 29;\n  } else {\n    return 30;\n  }\n}\n\nfunction umalquraMonthStart(year: number, month: number): number {\n  let day = umalquraYearStart(year);\n  for (let i = 1; i < month; i++) {\n    day += umalquraMonthLength(year, i);\n  }\n  return day;\n}\n\nfunction umalquraYearLength(year: number): number {\n  return UMALQURA_YEAR_START_TABLE[year + 1 - UMALQURA_YEAR_START] - UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\n/**\n * The Islamic calendar, also known as the \"Hijri\" calendar, is used throughout much of the Arab world.\n * The Umalqura variant is primarily used in Saudi Arabia. It is a lunar calendar, based on astronomical\n * calculations that predict the sighting of a crescent moon. Month and year lengths vary between years\n * depending on these calculations.\n * Learn more about the available Islamic calendars [here](https://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types).\n */\nexport class IslamicUmalquraCalendar extends IslamicCivilCalendar {\n  identifier = 'islamic-umalqura';\n\n  constructor() {\n    super();\n    if (!UMALQURA_MONTHLENGTH) {\n      UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob(UMALQURA_DATA), c => c.charCodeAt(0)).buffer);\n    }\n\n    if (!UMALQURA_YEAR_START_TABLE) {\n      UMALQURA_YEAR_START_TABLE = new Uint32Array(UMALQURA_YEAR_END - UMALQURA_YEAR_START + 1);\n\n      let yearStart = 0;\n      for (let year = UMALQURA_YEAR_START; year <= UMALQURA_YEAR_END; year++) {\n        UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START] = yearStart;\n        for (let i = 1; i <= 12; i++) {\n          yearStart += umalquraMonthLength(year, i);\n        }\n      }\n    }\n  }\n\n  fromJulianDay(jd: number): CalendarDate {\n    let days = jd - CIVIL_EPOC;\n    let startDays = umalquraYearStart(UMALQURA_YEAR_START);\n    let endDays = umalquraYearStart(UMALQURA_YEAR_END);\n    if (days < startDays || days > endDays) {\n      return super.fromJulianDay(jd);\n    } else {\n      let y = UMALQURA_YEAR_START - 1;\n      let m = 1;\n      let d = 1;\n      while (d > 0) {\n        y++;\n        d = days - umalquraYearStart(y) + 1;\n        let yearLength = umalquraYearLength(y);\n        if (d === yearLength) {\n          m = 12;\n          break;\n        } else if (d < yearLength) {\n          let monthLength = umalquraMonthLength(y, m);\n          m = 1;\n          while (d > monthLength) {\n            d -= monthLength;\n            m++;\n            monthLength = umalquraMonthLength(y, m);\n          }\n          break;\n        }\n      }\n\n      return new CalendarDate(this, y, m, (days - umalquraMonthStart(y, m) + 1));\n    }\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.toJulianDay(date);\n    }\n\n    return CIVIL_EPOC + umalquraMonthStart(date.year, date.month) + (date.day - 1);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInMonth(date);\n    }\n\n    return umalquraMonthLength(date.year, date.month);\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInYear(date);\n    }\n\n    return umalquraYearLength(date.year);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst HEBREW_EPOCH = 347997;\n\n// Hebrew date calculations are performed in terms of days, hours, and\n// \"parts\" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.\nconst HOUR_PARTS = 1080;\nconst DAY_PARTS  = 24 * HOUR_PARTS;\n\n// An approximate value for the length of a lunar month.\n// It is used to calculate the approximate year and month of a given\n// absolute date.\nconst MONTH_DAYS = 29;\nconst MONTH_FRACT = 12 * HOUR_PARTS + 793;\nconst MONTH_PARTS = MONTH_DAYS * DAY_PARTS + MONTH_FRACT;\n\nfunction isLeapYear(year: number) {\n  return mod(year * 7 + 1, 19) < 7;\n}\n\n// Test for delay of start of new year and to avoid\n// Sunday, Wednesday, and Friday as start of the new year.\nfunction hebrewDelay1(year: number) {\n  let months = Math.floor((235 * year - 234) / 19);\n  let parts = 12084 + 13753 * months;\n  let day = months * 29 + Math.floor(parts / 25920);\n\n  if (mod(3 * (day + 1), 7) < 3) {\n    day += 1;\n  }\n\n  return day;\n}\n\n// Check for delay in start of new year due to length of adjacent years\nfunction hebrewDelay2(year: number) {\n  let last = hebrewDelay1(year - 1);\n  let present = hebrewDelay1(year);\n  let next = hebrewDelay1(year + 1);\n\n  if (next - present === 356) {\n    return 2;\n  }\n\n  if (present - last === 382) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction startOfYear(year: number) {\n  return hebrewDelay1(year) + hebrewDelay2(year);\n}\n\nfunction getDaysInYear(year: number) {\n  return startOfYear(year + 1) - startOfYear(year);\n}\n\nfunction getYearType(year: number) {\n  let yearLength = getDaysInYear(year);\n\n  if (yearLength > 380) {\n    yearLength -= 30; // Subtract length of leap month.\n  }\n\n  switch (yearLength) {\n    case 353:\n      return 0; // deficient\n    case 354:\n      return 1; // normal\n    case 355:\n      return 2; // complete\n  }\n}\n\nfunction getDaysInMonth(year: number, month: number): number {\n  // Normalize month numbers from 1 - 13, even on non-leap years\n  if (month >= 6 && !isLeapYear(year)) {\n    month++;\n  }\n\n  // First of all, dispose of fixed-length 29 day months\n  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) {\n    return 29;\n  }\n\n  let yearType = getYearType(year);\n\n  // If it's Heshvan, days depend on length of year\n  if (month === 2) {\n    return yearType === 2 ? 30 : 29;\n  }\n\n  // Similarly, Kislev varies with the length of year\n  if (month === 3) {\n    return yearType === 0 ? 29 : 30;\n  }\n\n  // Adar I only exists in leap years\n  if (month === 6) {\n    return isLeapYear(year) ? 30 : 0;\n  }\n\n  return 30;\n}\n\n/**\n * The Hebrew calendar is used in Israel and around the world by the Jewish faith.\n * Years include either 12 or 13 months depending on whether it is a leap year.\n * In leap years, an extra month is inserted at month 6.\n */\nexport class HebrewCalendar implements Calendar {\n  identifier = 'hebrew';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let d = jd - HEBREW_EPOCH;\n    let m = (d * DAY_PARTS) / MONTH_PARTS;           // Months (approx)\n    let year = Math.floor((19 * m + 234) / 235) + 1; // Years (approx)\n    let ys = startOfYear(year);                      // 1st day of year\n    let dayOfYear = Math.floor(d - ys);\n\n    // Because of the postponement rules, it's possible to guess wrong.  Fix it.\n    while (dayOfYear < 1) {\n      year--;\n      ys = startOfYear(year);\n      dayOfYear = Math.floor(d - ys);\n    }\n\n    // Now figure out which month we're in, and the date within that month\n    let month = 1;\n    let monthStart = 0;\n    while (monthStart < dayOfYear) {\n      monthStart += getDaysInMonth(year, month);\n      month++;\n    }\n\n    month--;\n    monthStart -= getDaysInMonth(year, month);\n\n    let day = dayOfYear - monthStart;\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let jd = startOfYear(date.year);\n    for (let month = 1; month < date.month; month++) {\n      jd += getDaysInMonth(date.year, month);\n    }\n\n    return jd + date.day + HEBREW_EPOCH;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return getDaysInMonth(date.year, date.month);\n  }\n\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 13 : 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return getDaysInYear(date.year);\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AM'];\n  }\n\n  balanceYearMonth(date: Mutable<AnyCalendarDate>, previousDate: AnyCalendarDate) {\n    // Keep date in the same month when switching between leap years and non leap years\n    if (previousDate.year !== date.year) {\n      if (isLeapYear(previousDate.year) && !isLeapYear(date.year) && previousDate.month > 6) {\n        date.month--;\n      } else if (!isLeapYear(previousDate.year) && isLeapYear(date.year) && previousDate.month > 6) {\n        date.month++;\n      }\n    }\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {Mutable} from '../utils';\n\nconst ETHIOPIC_EPOCH = 1723856;\nconst COPTIC_EPOCH = 1824665;\n\n// The delta between Amete Alem 1 and Amete Mihret 1\n// AA 5501 = AM 1\nconst AMETE_MIHRET_DELTA = 5500;\n\nfunction ceToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return (\n    epoch                   // difference from Julian epoch to 1,1,1\n    + 365 * year            // number of days from years\n    + Math.floor(year / 4)  // extra day of leap year\n    + 30 * (month - 1)      // number of days from months (1 based)\n    + day - 1               // number of days for present month (1 based)\n  );\n}\n\nfunction julianDayToCE(calendar: Calendar, epoch: number, jd: number): Mutable<CalendarDate> {\n  let year = Math.floor((4 * (jd - epoch)) / 1461);\n  let month = 1 + Math.floor((jd - ceToJulianDay(epoch, year, 1, 1)) / 30);\n  let day = jd + 1 - ceToJulianDay(epoch, year, month, 1);\n\n  return new CalendarDate(calendar, year, month, day);\n}\n\nfunction getLeapDay(year: number) {\n  return Math.floor((year % 4) / 3);\n}\n\nfunction getDaysInMonth(year: number, month: number) {\n  // The Ethiopian and Coptic calendars have 13 months, 12 of 30 days each and\n  // an intercalary month at the end of the year of 5 or 6 days, depending whether\n  // the year is a leap year or not. The Leap Year follows the same rules as the\n  // Julian Calendar so that the extra month always has six days in the year before\n  // a Julian Leap Year.\n  if (month % 13 !== 0) {\n    // not intercalary month\n    return 30;\n  } else {\n    // intercalary month 5 days + possible leap day\n    return getLeapDay(year) + 5;\n  }\n}\n\n/**\n * The Ethiopic calendar system is the official calendar used in Ethiopia.\n * It includes 12 months of 30 days each, plus 5 or 6 intercalary days depending\n * on whether it is a leap year. Two eras are supported: 'AA' and 'AM'.\n */\nexport class EthiopicCalendar implements Calendar {\n  identifier = 'ethiopic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, ETHIOPIC_EPOCH, jd);\n    if (date.year > 0) {\n      date.era = 'AM';\n    } else {\n      date.era = 'AA';\n      date.year += AMETE_MIHRET_DELTA;\n    }\n\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year;\n    if (date.era === 'AA') {\n      year -= AMETE_MIHRET_DELTA;\n    }\n\n    return ceToJulianDay(ETHIOPIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'AA') {\n      year -= AMETE_MIHRET_DELTA;\n    }\n\n    return getDaysInMonth(year, date.month);\n  }\n\n  getMonthsInYear(): number {\n    return 13;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return 365 + getLeapDay(date.year);\n  }\n\n  getYearsInEra(): number {\n    return 9999;\n  }\n\n  getEras() {\n    return ['AA', 'AM'];\n  }\n}\n\n/**\n * The Ethiopic (Amete Alem) calendar is the same as the modern Ethiopic calendar,\n * except years were measured from a different epoch. Only one era is supported: 'AA'.\n */\nexport class EthiopicAmeteAlemCalendar extends EthiopicCalendar {\n  identifier = 'ethioaa'; // also known as 'ethiopic-amete-alem' in ICU\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, ETHIOPIC_EPOCH, jd);\n    date.era = 'AA';\n    date.year += AMETE_MIHRET_DELTA;\n    return date as CalendarDate;\n  }\n\n  getEras() {\n    return ['AA'];\n  }\n}\n\n/**\n * The Coptic calendar is similar to the Ethiopic calendar.\n * It includes 12 months of 30 days each, plus 5 or 6 intercalary days depending\n * on whether it is a leap year. Two eras are supported: 'BCE' and 'CE'.\n */\nexport class CopticCalendar extends EthiopicCalendar {\n  identifier = 'coptic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = julianDayToCE(this, COPTIC_EPOCH, jd);\n    if (date.year <= 0) {\n      date.era = 'BCE';\n      date.year = 1 - date.year;\n    } else {\n      date.era = 'CE';\n    }\n\n    return date as CalendarDate;\n  }\n\n  toJulianDay(date: AnyCalendarDate) {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return ceToJulianDay(COPTIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return getDaysInMonth(year, date.month);\n  }\n\n  getYearsToAdd(date: Mutable<AnyCalendarDate>, years: number) {\n    return date.era === 'BCE' ? -years : years;\n  }\n\n  getEras() {\n    return ['BCE', 'CE'];\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BuddhistCalendar} from './calendars/BuddhistCalendar';\nimport {Calendar} from './types';\nimport {CopticCalendar, EthiopicAmeteAlemCalendar, EthiopicCalendar} from './calendars/EthiopicCalendar';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {HebrewCalendar} from './calendars/HebrewCalendar';\nimport {IndianCalendar} from './calendars/IndianCalendar';\nimport {IslamicCivilCalendar, IslamicTabularCalendar, IslamicUmalquraCalendar} from './calendars/IslamicCalendar';\nimport {JapaneseCalendar} from './calendars/JapaneseCalendar';\nimport {PersianCalendar} from './calendars/PersianCalendar';\nimport {TaiwanCalendar} from './calendars/TaiwanCalendar';\n\n/** Creates a `Calendar` instance from a Unicode calendar identifier string. */\nexport function createCalendar(name: string): Calendar {\n  switch (name) {\n    case 'buddhist':\n      return new BuddhistCalendar();\n    case 'ethiopic':\n      return new EthiopicCalendar();\n    case 'ethioaa':\n      return new EthiopicAmeteAlemCalendar();\n    case 'coptic':\n      return new CopticCalendar();\n    case 'hebrew':\n      return new HebrewCalendar();\n    case 'indian':\n      return new IndianCalendar();\n    case 'islamic-civil':\n      return new IslamicCivilCalendar();\n    case 'islamic-tbla':\n      return new IslamicTabularCalendar();\n    case 'islamic-umalqura':\n      return new IslamicUmalquraCalendar();\n    case 'japanese':\n      return new JapaneseCalendar();\n    case 'persian':\n      return new PersianCalendar();\n    case 'roc':\n      return new TaiwanCalendar();\n    case 'gregory':\n    default:\n      return new GregorianCalendar();\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet formatterCache = new Map<string, Intl.DateTimeFormat>();\n\ninterface ResolvedDateTimeFormatOptions extends Intl.ResolvedDateTimeFormatOptions {\n  hourCycle?: Intl.DateTimeFormatOptions['hourCycle']\n}\n\ninterface DateRangeFormatPart extends Intl.DateTimeFormatPart {\n  source: 'startRange' | 'endRange' | 'shared'\n}\n\n/** A wrapper around Intl.DateTimeFormat that fixes various browser bugs, and polyfills new features. */\nexport class DateFormatter implements Intl.DateTimeFormat {\n  private formatter: Intl.DateTimeFormat;\n  private options: Intl.DateTimeFormatOptions;\n  private resolvedHourCycle: Intl.DateTimeFormatOptions['hourCycle'];\n\n  constructor(locale: string, options: Intl.DateTimeFormatOptions = {}) {\n    this.formatter = getCachedDateFormatter(locale, options);\n    this.options = options;\n  }\n\n  /** Formats a date as a string according to the locale and format options passed to the constructor. */\n  format(value: Date): string {\n    return this.formatter.format(value);\n  }\n\n  /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */\n  formatToParts(value: Date): Intl.DateTimeFormatPart[] {\n    return this.formatter.formatToParts(value);\n  }\n\n  /** Formats a date range as a string. */\n  formatRange(start: Date, end: Date): string {\n    // @ts-ignore\n    if (typeof this.formatter.formatRange === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRange(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    // Very basic fallback for old browsers.\n    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;\n  }\n\n  /** Formats a date range as an array of parts. */\n  formatRangeToParts(start: Date, end: Date): DateRangeFormatPart[] {\n    // @ts-ignore\n    if (typeof this.formatter.formatRangeToParts === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRangeToParts(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    let startParts = this.formatter.formatToParts(start);\n    let endParts = this.formatter.formatToParts(end);\n    return [\n      ...startParts.map(p => ({...p, source: 'startRange'} as DateRangeFormatPart)),\n      {type: 'literal', value: ' – ', source: 'shared'},\n      ...endParts.map(p => ({...p, source: 'endRange'} as DateRangeFormatPart))\n    ];\n  }\n\n  /** Returns the resolved formatting options based on the values passed to the constructor. */\n  resolvedOptions(): ResolvedDateTimeFormatOptions {\n    let resolvedOptions = this.formatter.resolvedOptions() as ResolvedDateTimeFormatOptions;\n    if (hasBuggyResolvedHourCycle()) {\n      if (!this.resolvedHourCycle) {\n        this.resolvedHourCycle = getResolvedHourCycle(resolvedOptions.locale, this.options);\n      }\n      resolvedOptions.hourCycle = this.resolvedHourCycle;\n      resolvedOptions.hour12 = this.resolvedHourCycle === 'h11' || this.resolvedHourCycle === 'h12';\n    }\n\n    return resolvedOptions;\n  }\n}\n\n// There are multiple bugs involving the hour12 and hourCycle options in various browser engines.\n//   - Chrome [1] (and the ECMA 402 spec [2]) resolve hour12: false in English and other locales to h24 (24:00 - 23:59)\n//     rather than h23 (00:00 - 23:59). Same can happen with hour12: true in French, which Chrome resolves to h11 (00:00 - 11:59)\n//     rather than h12 (12:00 - 11:59).\n//   - WebKit returns an incorrect hourCycle resolved option in the French locale due to incorrect parsing of 'h' literal\n//     in the resolved pattern. It also formats incorrectly when specifying the hourCycle option for the same reason. [3]\n// [1] https://bugs.chromium.org/p/chromium/issues/detail?id=1045791\n// [2] https://github.com/tc39/ecma402/issues/402\n// [3] https://bugs.webkit.org/show_bug.cgi?id=229313\n\n// https://github.com/unicode-org/cldr/blob/018b55eff7ceb389c7e3fc44e2f657eae3b10b38/common/supplemental/supplementalData.xml#L4774-L4802\nconst hour12Preferences = {\n  true: {\n    // Only Japanese uses the h11 style for 12 hour time. All others use h12.\n    ja: 'h11'\n  },\n  false: {\n    // All locales use h23 for 24 hour time. None use h24.\n  }\n};\n\nfunction getCachedDateFormatter(locale: string, options: Intl.DateTimeFormatOptions = {}): Intl.DateTimeFormat {\n  // Work around buggy hour12 behavior in Chrome / ECMA 402 spec by using hourCycle instead.\n  // Only apply the workaround if the issue is detected, because the hourCycle option is buggy in Safari.\n  if (typeof options.hour12 === 'boolean' && hasBuggyHour12Behavior()) {\n    options = {...options};\n    let pref = hour12Preferences[String(options.hour12)][locale.split('-')[0]];\n    let defaultHourCycle = options.hour12 ? 'h12' : 'h23';\n    options.hourCycle = pref ?? defaultHourCycle;\n    delete options.hour12;\n  }\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (formatterCache.has(cacheKey)) {\n    return formatterCache.get(cacheKey);\n  }\n\n  let numberFormatter = new Intl.DateTimeFormat(locale, options);\n  formatterCache.set(cacheKey, numberFormatter);\n  return numberFormatter;\n}\n\nlet _hasBuggyHour12Behavior: boolean = null;\nfunction hasBuggyHour12Behavior() {\n  if (_hasBuggyHour12Behavior == null) {\n    _hasBuggyHour12Behavior = new Intl.DateTimeFormat('en-US', {\n      hour: 'numeric',\n      hour12: false\n    }).format(new Date(2020, 2, 3, 0)) === '24';\n  }\n\n  return _hasBuggyHour12Behavior;\n}\n\nlet _hasBuggyResolvedHourCycle: boolean = null;\nfunction hasBuggyResolvedHourCycle() {\n  if (_hasBuggyResolvedHourCycle == null) {\n    _hasBuggyResolvedHourCycle = (new Intl.DateTimeFormat('fr', {\n      hour: 'numeric',\n      hour12: false\n    }).resolvedOptions() as ResolvedDateTimeFormatOptions).hourCycle === 'h12';\n  }\n\n  return _hasBuggyResolvedHourCycle;\n}\n\nfunction getResolvedHourCycle(locale: string, options: Intl.DateTimeFormatOptions) {\n  if (!options.timeStyle && !options.hour) {\n    return undefined;\n  }\n\n  // Work around buggy results in resolved hourCycle and hour12 options in WebKit.\n  // Format the minimum possible hour and maximum possible hour in a day and parse the results.\n  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, '');\n  locale += (locale.includes('-u-') ? '' : '-u') + '-nu-latn';\n  let formatter = getCachedDateFormatter(locale, {\n    ...options,\n    timeZone: undefined // use local timezone\n  });\n\n  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find(p => p.type === 'hour').value, 10);\n  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find(p => p.type === 'hour').value, 10);\n\n  if (min === 0 && max === 23) {\n    return 'h23';\n  }\n\n  if (min === 24 && max === 23) {\n    return 'h24';\n  }\n\n  if (min === 0 && max === 11) {\n    return 'h11';\n  }\n\n  if (min === 12 && max === 11) {\n    return 'h12';\n  }\n\n  throw new Error('Unexpected hour cycle result');\n}\n"]},"metadata":{},"sourceType":"module"}